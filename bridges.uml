<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_YSAPwC_9EeSFFduuR7vvgw" name="bridges">
    <eAnnotations xmi:id="_YgNq4C_9EeSFFduuR7vvgw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_YgNq4S_9EeSFFduuR7vvgw" source="codegen">
        <details xmi:id="_YgNq4i_9EeSFFduuR7vvgw" key="codegenDirectory" value="/bridges/src/main/java"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_cJ1c8C_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_cJ2EAC_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_cJ2EAS_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_cJ2EAi_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_cJ2EAy_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_cJ2EBC_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_cJ2rEC_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_cJ2rES_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_cJ3SIC_9EeSFFduuR7vvgw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_bbeiIC_9EeSFFduuR7vvgw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_bbfJMC_9EeSFFduuR7vvgw" name="uncc">
        <packagedElement xmi:type="uml:Package" xmi:id="_bbfJMS_9EeSFFduuR7vvgw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_bb8cMC_9EeSFFduuR7vvgw" name="bridges">
            <packagedElement xmi:type="uml:Class" xmi:id="_cJnagC_9EeSFFduuR7vvgw" clientDependency="_dMoWsS_9EeSFFduuR7vvgw" name="AbstractEdge">
              <ownedAttribute xmi:id="_dPrDoC_9EeSFFduuR7vvgw" name="source" visibility="package" type="_cLFaIC_9EeSFFduuR7vvgw" association="_dd6T8C_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dPuuAC_9EeSFFduuR7vvgw" name="properties" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <qualifier xmi:id="_dPwjMC_9EeSFFduuR7vvgw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dPvVEC_9EeSFFduuR7vvgw" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dPxxUC_9EeSFFduuR7vvgw" name="hashCodeWeight" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dPyYYC_9EeSFFduuR7vvgw" value="&quot;hashCodeWeight&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dPzmgC_9EeSFFduuR7vvgw" name="weight" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dP0NkC_9EeSFFduuR7vvgw" value="&quot;weight&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dP00oS_9EeSFFduuR7vvgw" name="eOutgoing" visibility="package" type="_cLFaIC_9EeSFFduuR7vvgw" isOrdered="true" association="_dd7iES_9EeSFFduuR7vvgw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dP1bsC_9EeSFFduuR7vvgw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dP3Q4S_9EeSFFduuR7vvgw" name="identifier" visibility="package" type="_dMqy8C_9EeSFFduuR7vvgw" association="_dd8wMS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dbhuUC_9EeSFFduuR7vvgw" name="destination" visibility="package" type="_cLFaIC_9EeSFFduuR7vvgw" association="_dfK4MS_9EeSFFduuR7vvgw"/>
              <interfaceRealization xmi:id="_dMoWsS_9EeSFFduuR7vvgw" client="_cJnagC_9EeSFFduuR7vvgw" supplier="_dMnIkC_9EeSFFduuR7vvgw" contract="_dMnIkC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVUYoC_9EeSFFduuR7vvgw" name="AbstractEdge" specification="_dMsoIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVU_sC_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVU_sS_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVU_si_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVU_sy_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.source = source;
		this.destination = destination;
		this.identifier = identifier;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVYDAC_9EeSFFduuR7vvgw" name="AbstractEdge" specification="_cJ8KoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVYDAS_9EeSFFduuR7vvgw" name="randomWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVYDAi_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>setWeight(source, destination, randomWeight);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVYqEC_9EeSFFduuR7vvgw" name="getIdentifier" specification="_cJ-m4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVYqES_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return identifier;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVZRIC_9EeSFFduuR7vvgw" name="getWeight" specification="_cKAcEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVZRIS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>String weight = properties.get(this.weight);
		if (weight == null) {
			return 1.0;
		} else {
			return Double.parseDouble(weight);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVZ4MC_9EeSFFduuR7vvgw" name="setWeight" specification="_cKBqMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVZ4MS_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVZ4Mi_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>properties.put(this.weight, Double.toString(weight));
		if (weight&lt;4)
			setWidth(1);
		else if (weight&lt;7)
			setWidth(3);
		else 
			setWidth(5);
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVafQC_9EeSFFduuR7vvgw" name="setWeight" specification="_dFi3QC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVafQS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVafQi_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVafQy_9EeSFFduuR7vvgw" name="random">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVafRC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>double weight;
		if (random.equals(hashCodeWeight))
			weight = Bridge.getEdgeWeight(source.toString(),destination.toString());
		else
			{
				System.out.println(&quot;Syntax error: \&quot;hashCodeWeight\&quot; expected. All weights are 1.&quot;);
				weight=1;
			}
		
		return this.setWeight(weight);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVbtYC_9EeSFFduuR7vvgw" name="getColor" specification="_cKF7oC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVbtYS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;color&quot;);
		if (prop == null) {
			return &quot;&quot;;
		} else {
			return prop;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVcUcC_9EeSFFduuR7vvgw" name="setColor" specification="_cKHJwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVcUcS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVcUci_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>color = color.toLowerCase();
		if (color == null || color.isEmpty()) {
			properties.remove(&quot;color&quot;);
		} else {
			Validation.validateColor(color);
			properties.put(&quot;color&quot;, color);
		}
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVc7gC_9EeSFFduuR7vvgw" name="getDash" specification="_cKKNEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVc7gS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;dasharray&quot;);
		if (prop == null) {
			return &quot;&quot;;
		} else {
			return prop;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVdikC_9EeSFFduuR7vvgw" name="setDash" specification="_cKLbMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVdikS_9EeSFFduuR7vvgw" name="dashes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dVdiki_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVdiky_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (dashes.length==0)
			return this;
		
		StringBuilder sb = new StringBuilder(&quot;&quot;);
		for (double dash : dashes) {
			sb.append(dash);
			sb.append(',');
		}
		sb.deleteCharAt(sb.length()-1);
		properties.put(&quot;dasharray&quot;, sb.toString());
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVeJoC_9EeSFFduuR7vvgw" name="getWidth" specification="_cKPFkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVeJoS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;width&quot;);
		if (prop == null) {
			return 1.0;
		} else {
			return Double.parseDouble(prop);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVewsC_9EeSFFduuR7vvgw" name="setWidth" specification="_cKQTsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVewsS_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVewsi_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//TODO: Should we protect against NaN and Inf?
		Validation.validateSize(pixels);
		properties.put(&quot;width&quot;, Double.toString(pixels));
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVfXwC_9EeSFFduuR7vvgw" name="getOpacity" specification="_cKT-EC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVfXwS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;opacity&quot;);
		if (prop == null)
			return 1.0;
		else
			return Double.parseDouble(prop);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVf-0C_9EeSFFduuR7vvgw" name="setOpacity" specification="_cKWaUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVf-0S_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVf-0i_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Validation.validateOpacity(opacity);
		properties.put(&quot;opacity&quot;, Double.toString(opacity));
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVgl4C_9EeSFFduuR7vvgw" name="getSource" specification="_cKb54C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVgl4S_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return source;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVhM8C_9EeSFFduuR7vvgw" name="getDestination" specification="_cKj1sC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVhM8S_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return destination;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVh0AC_9EeSFFduuR7vvgw" name="getRepresentation" specification="_dMw5kS_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVh0AS_9EeSFFduuR7vvgw" name="vertex_to_index" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVh0Ai_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String json = &quot;{&quot;;
		for (Entry&lt;String, String> entry : properties.entrySet()) {
			json += String.format(&quot;\&quot;%s\&quot;: \&quot;%s\&quot;, &quot;, entry.getKey(), entry.getValue());
		}
		json += String.format(&quot;\&quot;source\&quot;:%s,&quot;, vertex_to_index.get(source));
		json += String.format(&quot;\&quot;target\&quot;:%s&quot;, vertex_to_index.get(destination));
		return json + &quot;}&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVjCIC_9EeSFFduuR7vvgw" name="compareTo" specification="_dFqzEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVjCIS_9EeSFFduuR7vvgw" name="o" type="_cJnagC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVjCIi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (o == null) {
			return 0;
		} else {
			int s_compare = source.compareTo(o.source);
			if (s_compare == 0)
				return destination.compareTo(o.destination);
			else
				return s_compare;
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cJ8KoC_9EeSFFduuR7vvgw" name="AbstractEdge" method="_dVYDAC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cJ9_0C_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cJ9_0S_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cJ8KoS_9EeSFFduuR7vvgw" name="randomWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cJ9_0i_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cJ-m4C_9EeSFFduuR7vvgw" name="getIdentifier" method="_dVYqEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dMw5kC_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKAcEC_9EeSFFduuR7vvgw" name="getWeight" method="_dVZRIC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbmm0C_9EeSFFduuR7vvgw">
                  <body>Get the width in pixels
	 * @returns Width in pixels, in range [0.0, 50.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKAcES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cKBqMC_9EeSFFduuR7vvgw" name="setWeight" method="_dVZ4MC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbnN4C_9EeSFFduuR7vvgw">
                  <body>Sets the weight of the edge
	 * Default width is provided in the following format
	 * For weights less than 4 the width is 1 pixel
	 * For weights less than 7 the width is 3 pixel
	 * For weights of other values greater than or equal to 7 the width is 5 pixel 
	 * Syntax: 
	 * 				A.createEdge(B, 10);           weight is specified as an integer when creating an edge
	 * Optional: 
	 * 			    A.getEdge(B).setWeight(25);    here, weight is set after creating the edge 
	 * @param weight is a double
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKBqMS_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFiQMC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKF7oC_9EeSFFduuR7vvgw" name="getColor" method="_dVbtYC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbnN4i_9EeSFFduuR7vvgw">
                  <body>Get the color, according to CSS formats.
	 * By default, the color will be chosen at random.
	 * Setting the color to {@code null} or {@code &quot;&quot;} resets to defaults.
	 * 
	 * @param color Color as a String
	 * @see Validation#validateColor(String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKGisC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cKHJwC_9EeSFFduuR7vvgw" name="setColor" method="_dVcUcC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbnN4y_9EeSFFduuR7vvgw">
                  <body>Set the color, according to CSS formats.
	 * By default, the color will be chosen at random.
	 * Setting the color to {@code null} or {@code &quot;&quot;} resets to defaults.
	 * 
	 * @param color Color as a String
	 * @see Validation#validateColor(String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKHJwS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFoW0C_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKKNEC_9EeSFFduuR7vvgw" name="getDash" method="_dVc7gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbn08C_9EeSFFduuR7vvgw">
                  <body>Get the dash array
	 * @return  CSS dash array, for example &quot;5,10,5&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKK0IC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cKLbMC_9EeSFFduuR7vvgw" name="setDash" method="_dVdikC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbn08S_9EeSFFduuR7vvgw">
                  <body>Set the dash array, effectively choosing patterns of dots and dashes for
	 * edges.
	 * @param dash CSS dash double array, for example &quot;5,10,5&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKLbMS_9EeSFFduuR7vvgw" name="dashes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cKN3cS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFo94C_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKPFkC_9EeSFFduuR7vvgw" name="getWidth" method="_dVeJoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbn08i_9EeSFFduuR7vvgw">
                  <body>Get the width in pixels
	 * @returns Width in pixels, in range [0.0, 50.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKPFkS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cKQTsC_9EeSFFduuR7vvgw" name="setWidth" method="_dVewsC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbn08y_9EeSFFduuR7vvgw">
                  <body>Set the width in pixels
	 * @param pixels  width in pixels, in range [0.0, 50.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKQTsS_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFpk8C_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKT-EC_9EeSFFduuR7vvgw" name="getOpacity" method="_dVfXwC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbocAC_9EeSFFduuR7vvgw">
                  <body>Get the edge's current opacity
	 * 0.0 is invisible
	 * 1.0 is opaque
	 * @returns  Alpha, in range [0.0, 1.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKUlIC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cKWaUC_9EeSFFduuR7vvgw" name="setOpacity" method="_dVf-0C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbocAS_9EeSFFduuR7vvgw">
                  <body>Set the edge opacity
	 * 0.0 is invisible
	 * 1.0 is opaque
	 * @param opacity  Alpha, in range [0.0, 1.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cKWaUS_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFpk8S_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKb54C_9EeSFFduuR7vvgw" name="getSource" method="_dVgl4C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbocAi_9EeSFFduuR7vvgw">
                  <body>This method returns the source of the current edge
	 * @return AbstractVertex&lt;T></body>
                </ownedComment>
                <ownedParameter xmi:id="_dFpk8i_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cKj1sC_9EeSFFduuR7vvgw" name="getDestination" method="_dVhM8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbocAy_9EeSFFduuR7vvgw">
                  <body>This method returns the destination of the current edge
	 * @return AbstractVertex&lt;T></body>
                </ownedComment>
                <ownedParameter xmi:id="_dFqMAC_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dFi3QC_9EeSFFduuR7vvgw" name="setWeight" method="_dVafQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbnN4S_9EeSFFduuR7vvgw">
                  <body>Sets a hashcode value based on the string hashcode of source and destination, to the weight attribute of the edge
	 * Syntax: A.createEdge(B, &quot;hashCodeWeight&quot;);
	 * Default width is provided in the following format
	 * For weights less than 4 the width is 1 pixel
	 * For weights less than 7 the width is 3 pixel
	 * For weights of other values greater than or equal to 7 the width is 5 pixel
	 * Syntax for creating a random weight: 
	 *                   source.createEdge(target,&quot;hashCodeWeight&quot;);   
	 * @param weight is the string &quot;hashCodeWeight&quot;
	 * @param source contains the source Vertex
	 * @param source contains the destination Vertex
	 * @param random contains the String value &quot;hashCodeWeight&quot; later transformed in random double
	 *  based on the String identifiers of source and destination vertices for a given edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_dFi3QS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dFjeUC_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dFjeUS_9EeSFFduuR7vvgw" name="random">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dFlTgC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dFqzEC_9EeSFFduuR7vvgw" name="compareTo" method="_dVjCIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dFqzES_9EeSFFduuR7vvgw" name="o" type="_cJnagC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dFqzEi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dMsoIC_9EeSFFduuR7vvgw" name="AbstractEdge" method="_dVUYoC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dMt2QC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dMt2QS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dMtPMC_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dMtPMS_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dMtPMi_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dMt2Qi_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dMw5kS_9EeSFFduuR7vvgw" name="getRepresentation" visibility="package" method="_dVh0AC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbpDEC_9EeSFFduuR7vvgw">
                  <body>Internal code for getting the properties of an Edge.
	 * Vertexes are represented by index in the JSON format. Pass a map to
	 * represent that connection (possibly made by earlier traversal.)
	 * 
	 * It produces (without the spaces or newlines):
	 * &lt;tt>
	 * {
	 *  &quot;source&quot;: 8162,
	 *  &quot;destination: 1827,
	 *  &quot;other CSS properties like color&quot;: any_JSON_value
	 * }
	 * 
	 * 
	 * @param vertex_to_integer		Vertex->index map (see description)
	 * @returns the encoded JSON string</body>
                </ownedComment>
                <ownedParameter xmi:id="_dMxgoC_9EeSFFduuR7vvgw" name="vertex_to_index" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dMxgoS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cLFaIC_9EeSFFduuR7vvgw" clientDependency="_dM1yEC_9EeSFFduuR7vvgw" name="AbstractVertex" isAbstract="true">
              <ownedComment xmi:id="_dbq4QC_9EeSFFduuR7vvgw">
                <body>Base class for visual graph vertices; either subclass it or use Vertex.
Implement `outgoing` with any List-compatible structure to get different
performance characteristics.

The default implementation Vertex uses a HashMap. You are free to use any you prefer.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dP6UMC_9EeSFFduuR7vvgw" name="identifier" visibility="package" isLeaf="true" type="_dMqy8C_9EeSFFduuR7vvgw" isReadOnly="true" association="_dd9-US_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dP7iUC_9EeSFFduuR7vvgw" name="next_id" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dP7iUS_9EeSFFduuR7vvgw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dP8JYC_9EeSFFduuR7vvgw" name="id" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dP8wcC_9EeSFFduuR7vvgw" name="outgoing" type="_cJnagC_9EeSFFduuR7vvgw" isOrdered="true" association="_dd_McS_9EeSFFduuR7vvgw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dP8wcS_9EeSFFduuR7vvgw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dP9-kC_9EeSFFduuR7vvgw" name="properties" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <qualifier xmi:id="_dP-loC_9EeSFFduuR7vvgw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dP9-kS_9EeSFFduuR7vvgw" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dM1yEC_9EeSFFduuR7vvgw" client="_cLFaIC_9EeSFFduuR7vvgw" supplier="_dMnIkC_9EeSFFduuR7vvgw" contract="_dMnIkC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVpIwC_9EeSFFduuR7vvgw" name="AbstractVertex" specification="_dM41YC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVpIwS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dVpIwi_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(identifier!=null){
			this.identifier = identifier;
			this.setColor(&quot;black&quot;);
			this.id = next_id++;
		}
		else 
			throw new IllegalArgumentException(&quot;param cannot be null.&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVqW4C_9EeSFFduuR7vvgw" name="getIdentifier" specification="_cLN9AC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVqW4S_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return identifier;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVq98C_9EeSFFduuR7vvgw" name="getColor" specification="_cLPyMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVq98S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return properties.get(&quot;color&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVrlAC_9EeSFFduuR7vvgw" name="setColor" specification="_cLRAUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVrlAS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVrlAi_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>color = color.toLowerCase();
		if (color == null || color.isEmpty()) {
			properties.put(&quot;color&quot;, &quot;black&quot;);
		} else {
			Validation.validateColor(color);
			properties.put(&quot;color&quot;, color);
		}
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVsMEC_9EeSFFduuR7vvgw" name="getShape" specification="_cLV40C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVsMES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;shape&quot;);
		if (prop == null) {
			return &quot;circle&quot;;
		} else {
			return prop;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVtaMC_9EeSFFduuR7vvgw" name="setShape" specification="_cLXuAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVtaMS_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVtaMi_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>shape = shape.toLowerCase();
		if(shape.equals(&quot;square&quot;)){
			shape = &quot;rect&quot;;
		}
		Validation.validateShape(shape);
		properties.put(&quot;shape&quot;, shape);
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVuBQC_9EeSFFduuR7vvgw" name="getSize" specification="_cLb_cC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVuBQS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;size&quot;);
		if (prop == null)
			return 1.0;
		else
			return Double.parseDouble(prop);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVv2cC_9EeSFFduuR7vvgw" name="setSize" specification="_cLd0oC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVv2cS_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVv2ci_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Validation.validateSize(pixels);
		properties.put(&quot;size&quot;, Double.toString(pixels));
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVySsC_9EeSFFduuR7vvgw" name="getOpacity" specification="_cLitIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVySsS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>String prop = properties.get(&quot;opacity&quot;);
		if (prop == null)
			return 1.0;
		else
			return Double.parseDouble(prop);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVy5wC_9EeSFFduuR7vvgw" name="setOpacity" specification="_cLlJYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVy5wS_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dVy5wi_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Validation.validateOpacity(opacity);
		properties.put(&quot;opacity&quot;, Double.toString(opacity));
		
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dVzg0C_9EeSFFduuR7vvgw" name="hashCode" specification="_cLqo8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dVzg0S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((identifier == null) ? 0 : identifier.hashCode());
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV0H4C_9EeSFFduuR7vvgw" name="equals" specification="_dM8fwS_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV0H4S_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV0H4i_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AbstractVertex&lt;T> other = (AbstractVertex&lt;T>) obj;
		if (identifier == null) {
			if (other.identifier != null)
				return false;
		} else if (!identifier.equals(other.identifier))
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV0u8C_9EeSFFduuR7vvgw" name="getRepresentation" specification="_cL0Z8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV0u8S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String json = &quot;{&quot;;
		for (Entry&lt;String, String> entry : properties.entrySet()) {
			json += String.format(&quot;\&quot;%s\&quot;: \&quot;%s\&quot;, &quot;, entry.getKey(), entry.getValue());
		}
		json += String.format(&quot;\&quot;name\&quot;: \&quot;%s\&quot;&quot;, identifier);
		return json + &quot;}&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV1WAC_9EeSFFduuR7vvgw" name="compareTo" specification="_dF4OcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV1WAS_9EeSFFduuR7vvgw" name="o" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV1WAi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (o != null) {
			return Integer.compare(id, o.id); 
			/* Plan B
			if (identifier instanceof Follower &amp;&amp; o.identifier instanceof Follower)
				return  ((Follower)identifier).compareTo((Follower)(o.identifier));
			else if (identifier instanceof Actor &amp;&amp; o.identifier instanceof Actor)
				return  ((Actor)identifier).compareTo((Actor)(o.identifier));
			else if (identifier instanceof Movie &amp;&amp; o.identifier instanceof Movie)
				return  ((Movie)identifier).compareTo((Movie)(o.identifier));
			 */
		}
		return 0;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cLN9AC_9EeSFFduuR7vvgw" name="getIdentifier" method="_dVqW4C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbsGYC_9EeSFFduuR7vvgw">
                  <body>Get the String associated with this Vertex.
	 * This is not a label; it includes provider information as well.
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dM6qkC_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cLPyMC_9EeSFFduuR7vvgw" name="getColor" method="_dVq98C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbsGYS_9EeSFFduuR7vvgw">
                  <body>Get the color, according to CSS formats.
	 * By default, the color will be chosen at random.
	 * Setting the color to {@code null} or {@code &quot;&quot;} resets to defaults.
	 * 
	 * @param color Color as a String
	 * @see Validation#validateColor(String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLPyMS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cLRAUC_9EeSFFduuR7vvgw" name="setColor" method="_dVrlAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbsGYi_9EeSFFduuR7vvgw">
                  <body>Set the color, according to CSS formats.
	 * By default, the color will be chosen at random.
	 * Setting the color to {@code null} or {@code &quot;&quot;} resets to defaults.
	 * 
	 * @param color Color as a String
	 * @see Validation#validateColor(String)</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLRnYC_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dF1yMC_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cLV40C_9EeSFFduuR7vvgw" name="getShape" method="_dVsMEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbsGYy_9EeSFFduuR7vvgw">
                  <body>Take a node by it's identifier string and get it's shape
	 * @return &quot;square&quot; or &quot;circle&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLV40S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cLXuAC_9EeSFFduuR7vvgw" name="setShape" method="_dVtaMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbstcC_9EeSFFduuR7vvgw">
                  <body>Take a node by it's identifier string and get it's shape
	 * @param shape &quot;Circle&quot; or &quot;Square&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLXuAS_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dF3AUC_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cLb_cC_9EeSFFduuR7vvgw" name="getSize" method="_dVuBQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbstcS_9EeSFFduuR7vvgw">
                  <body>Take a node by it's identifier string and get it's node color
	 * @param node  Node identifier
	 * @returns  Diameter of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLcmgC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cLd0oC_9EeSFFduuR7vvgw" name="setSize" method="_dVv2cC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbstci_9EeSFFduuR7vvgw">
                  <body>Take a node by it's identifier string and get it's node color
	 * @param pixels  Diameter of the node, in range [0.0, 50.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLebsC_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dF3nYC_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cLitIC_9EeSFFduuR7vvgw" name="getOpacity" method="_dVySsC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbtUgC_9EeSFFduuR7vvgw">
                  <body>Get the node's current opacity
	 * 0.0 is invisible
	 * 1.0 is opaque
	 * @returns  Alpha, in range [0.0, 1.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLjUMC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cLlJYC_9EeSFFduuR7vvgw" name="setOpacity" method="_dVy5wC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbtUgS_9EeSFFduuR7vvgw">
                  <body>Set the node opacity
	 * 0.0 is invisible
	 * 1.0 is opaque
	 * @param opacity  Alpha, in range [0.0, 1.0]</body>
                </ownedComment>
                <ownedParameter xmi:id="_cLlwcC_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dF3nYS_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cLqo8C_9EeSFFduuR7vvgw" name="hashCode" method="_dVzg0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cLrQAC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cL0Z8C_9EeSFFduuR7vvgw" name="getRepresentation" visibility="protected" method="_dV0u8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbtUgi_9EeSFFduuR7vvgw">
                  <body>Internal code for getting the properties of an AbstractVertex.
	 * 
	 * It produces (without the spaces or newlines):
	 * &lt;tt>
	 * {
	 *  &quot;name&quot;: &quot;Some identifier&quot;,
	 *  &quot;other CSS properties like color&quot;: any_JSON_value
	 * }
	 * @returns the encoded JSON string</body>
                </ownedComment>
                <ownedParameter xmi:id="_cL1oEC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dF4OcC_9EeSFFduuR7vvgw" name="compareTo" method="_dV1WAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbtUgy_9EeSFFduuR7vvgw">
                  <body>Abstract Vertex comparator: sorts by identifier.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dF4OcS_9EeSFFduuR7vvgw" name="o" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dF4Oci_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dM41YC_9EeSFFduuR7vvgw" name="AbstractVertex" method="_dVpIwC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dM5ccC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dM5ccS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dbrfUC_9EeSFFduuR7vvgw">
                  <body>Create an AbstractVertex
	 * @param identifier  The unique, final id for this vertex.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dM41YS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dM5cci_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dM8fwS_9EeSFFduuR7vvgw" name="equals" method="_dV0H4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dM8fwi_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dM9G0C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cMK_QC_9EeSFFduuR7vvgw" name="Actor">
              <ownedAttribute xmi:id="_dP_zwC_9EeSFFduuR7vvgw" name="anActor" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV5AYC_9EeSFFduuR7vvgw" name="Actor" specification="_cMOpoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV5AYS_9EeSFFduuR7vvgw" name="anActor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dV5AYi_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.anActor=anActor;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV5ncC_9EeSFFduuR7vvgw" name="getName" specification="_cMQe0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV5ncS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return anActor;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV6OgC_9EeSFFduuR7vvgw" name="compareTo" specification="_dF-VEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV6OgS_9EeSFFduuR7vvgw" name="anotherActor" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV6Ogi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return anActor.compareTo(anotherActor.getName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV61kC_9EeSFFduuR7vvgw" name="hashCode" specification="_cMS7EC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV61kS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((anActor == null) ? 0 : anActor.hashCode());
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV7coC_9EeSFFduuR7vvgw" name="equals" specification="_dNAKIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV7coS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV7coi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Actor other = (Actor) obj;
		if (anActor == null) {
			if (other.anActor != null)
				return false;
		} else if (!anActor.equals(other.anActor))
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV8qwC_9EeSFFduuR7vvgw" name="toString" specification="_cMWlcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV8qwS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return anActor;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cMOpoC_9EeSFFduuR7vvgw" name="Actor" method="_dV5AYC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cMPQsC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cMPQsS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dbt7kC_9EeSFFduuR7vvgw">
                  <body>The constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_cMOpoS_9EeSFFduuR7vvgw" name="anActor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cMP3wC_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cMQe0C_9EeSFFduuR7vvgw" name="getName" method="_dV5ncC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbt7kS_9EeSFFduuR7vvgw">
                  <body>This method returns the string name</body>
                </ownedComment>
                <ownedParameter xmi:id="_cMRF4C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cMS7EC_9EeSFFduuR7vvgw" name="hashCode" method="_dV61kC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cMTiIC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cMWlcC_9EeSFFduuR7vvgw" name="toString" method="_dV8qwC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbuioC_9EeSFFduuR7vvgw">
                  <body>This method returns the string value</body>
                </ownedComment>
                <ownedParameter xmi:id="_cMXMgC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dF-VEC_9EeSFFduuR7vvgw" name="compareTo" method="_dV6OgC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbt7ki_9EeSFFduuR7vvgw">
                  <body>This method implements compareTo for the Actors</body>
                </ownedComment>
                <ownedParameter xmi:id="_dF-8IC_9EeSFFduuR7vvgw" name="anotherActor" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dF-8IS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNAKIC_9EeSFFduuR7vvgw" name="equals" method="_dV7coC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dNAKIS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNAxMC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cMfIUC_9EeSFFduuR7vvgw" name="BSTEdge">
              <generalization xmi:id="_dGHfAC_9EeSFFduuR7vvgw" general="_cJnagC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQBB4C_9EeSFFduuR7vvgw" name="out" visibility="private" type="_cM-QgC_9EeSFFduuR7vvgw" association="_deAakC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dV_uEC_9EeSFFduuR7vvgw" name="BSTEdge" specification="_dGBYYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dV_uES_9EeSFFduuR7vvgw" name="source" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV_uEi_9EeSFFduuR7vvgw" name="destination" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dV_uEy_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(source, destination, null);
		out = destination;//edge outgoing pointer to the destination vertex	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWA8MC_9EeSFFduuR7vvgw" name="setOutgoing" specification="_dGFCwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWA8MS_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>this.out = n;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWBjQC_9EeSFFduuR7vvgw" name="getOutgoing" specification="_cMuY4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWBjQS_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return out;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cMuY4C_9EeSFFduuR7vvgw" name="getOutgoing" method="_dWBjQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbvJsS_9EeSFFduuR7vvgw">
                  <body>
	 * @return The pointer of the outgoing connection.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGG38S_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGBYYC_9EeSFFduuR7vvgw" name="BSTEdge" method="_dV_uEC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dGB_cC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dGB_cS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dbuioS_9EeSFFduuR7vvgw">
                  <body>Creates an Edge between two nodes.
	 * 
	 * @param source The source node.
	 * @param destination The destination node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGBYYS_9EeSFFduuR7vvgw" name="source" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dGBYYi_9EeSFFduuR7vvgw" name="destination" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dGB_ci_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGFCwC_9EeSFFduuR7vvgw" name="setOutgoing" method="_dWA8MC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbvJsC_9EeSFFduuR7vvgw">
                  <body>Sets the outgoing pointer of the calling edge.
	 * 
	 * @param n The new node being referenced.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGFCwS_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cM-QgC_9EeSFFduuR7vvgw" name="BSTNode">
              <ownedComment xmi:id="_dbvJsi_9EeSFFduuR7vvgw">
                <body>Generic Tree Node class, with visual components. Stores a value, allows for creation of its children.
@author mvitulli
 *</body>
              </ownedComment>
              <generalization xmi:id="_dGZy4C_9EeSFFduuR7vvgw" general="_cLFaIC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQDeIC_9EeSFFduuR7vvgw" name="leftEdge" type="_cMfIUC_9EeSFFduuR7vvgw" isReadOnly="true" association="_deBosC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQKL0C_9EeSFFduuR7vvgw" name="val">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dbvwwC_9EeSFFduuR7vvgw" name="rightEdge" type="_cMfIUC_9EeSFFduuR7vvgw" association="_dfMGUC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWEmkC_9EeSFFduuR7vvgw" name="BSTNode" specification="_dNDNcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWEmkS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWEmki_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWEmky_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(identifier);		
		this.val = val;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWF0sC_9EeSFFduuR7vvgw" name="setLeftChild" specification="_dGLJYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWF0sS_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(n == null){
			this.leftEdge = null;
		}
		else this.setLeftEdge(n);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWGbwC_9EeSFFduuR7vvgw" name="getLeftChild" specification="_cNJ2sC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWGbwS_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(this.getLeftEdge() == null){
			return null;
		}else return this.getLeftEdge().getOutgoing();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWHp4C_9EeSFFduuR7vvgw" name="setLeftEdge" specification="_dGOMsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWHp4S_9EeSFFduuR7vvgw" name="n2" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>//removing the edgeIdentifier would make removal easier
		
		this.leftEdge = new BSTEdge(this, n2);//creates the edge, and has the left pointer reference it
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWIQ8C_9EeSFFduuR7vvgw" name="setRightChild" specification="_dGR3EC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWIQ8S_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(n == null){
			this.rightEdge = null;
		}
		else this.setRightEdge(n);		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWI4AC_9EeSFFduuR7vvgw" name="getRightChild" specification="_cNRLcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWI4AS_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(this.getRightEdge() == null){
			return null;
		}else return this.getRightEdge().getOutgoing();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWJfEC_9EeSFFduuR7vvgw" name="setRightEdge" specification="_dGUTUS_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWJfES_9EeSFFduuR7vvgw" name="n2" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>this.rightEdge = new BSTEdge(this, n2);		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWKGIC_9EeSFFduuR7vvgw" name="getRightEdge" specification="_cNWrAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWKGIS_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return rightEdge;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWKtMC_9EeSFFduuR7vvgw" name="getNodeRepresentation" specification="_dNHe4S_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWKtMS_9EeSFFduuR7vvgw" name="node_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWKtMi_9EeSFFduuR7vvgw" name="link_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>getNodeRepresentation(0, node_json, link_json);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWL7UC_9EeSFFduuR7vvgw" name="getNodeRepresentation" specification="_dNJUEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWL7US_9EeSFFduuR7vvgw" name="node_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWL7Ui_9EeSFFduuR7vvgw" name="node_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWL7Uy_9EeSFFduuR7vvgw" name="link_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWL7VC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>node_json.append(super.getRepresentation() + &quot;,&quot;); //json rep of properties

		int left_child_index = node_index + 1;
		int right_child_index = left_child_index;
		
		if (getLeftEdge() != null) {
			link_json.append(getEdgeRepresentation(getLeftEdge(), node_index, left_child_index) + &quot;,&quot;);
			right_child_index = getLeftChild().getNodeRepresentation(left_child_index, node_json, link_json);//json rep of node
		}
		
		
		int next_open_slot = right_child_index;
		if (getRightEdge() != null) {
			link_json.append(getEdgeRepresentation(getRightEdge(), node_index, right_child_index) + &quot;,&quot;);
			next_open_slot = getRightChild().getNodeRepresentation(right_child_index, node_json, link_json);
		}
		return next_open_slot;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWNJcC_9EeSFFduuR7vvgw" name="getEdgeRepresentation" specification="_dGXWoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWNJcS_9EeSFFduuR7vvgw" name="edge" type="_cJnagC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWNJci_9EeSFFduuR7vvgw" name="source_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWNJcy_9EeSFFduuR7vvgw" name="target_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWNJdC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String json = &quot;{&quot;;
		for (Entry&lt;String, String> entry : edge.properties.entrySet()) {
			json += String.format(&quot;\&quot;%s\&quot;: \&quot;%s\&quot;, &quot;, entry.getKey(), entry.getValue());
		}
		json += String.format(&quot;\&quot;source\&quot;:%s,&quot;, source_index);
		json += String.format(&quot;\&quot;target\&quot;:%s&quot;, target_index);
		return json + &quot;}&quot;;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cNJ2sC_9EeSFFduuR7vvgw" name="getLeftChild" method="_dWGbwC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbxl8C_9EeSFFduuR7vvgw">
                  <body>
	 * @return The left child of the calling node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGNloC_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cNRLcC_9EeSFFduuR7vvgw" name="getRightChild" method="_dWI4AC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbyNAC_9EeSFFduuR7vvgw">
                  <body>
	 * @return The right child of the calling node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGUTUC_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cNWrAC_9EeSFFduuR7vvgw" name="getRightEdge" method="_dWKGIC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbyNAi_9EeSFFduuR7vvgw">
                  <body>Returns the right connected edge.
	 * 
	 * @return The right edge from the calling node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGWvkC_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGLJYC_9EeSFFduuR7vvgw" name="setLeftChild" method="_dWF0sC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbw-4S_9EeSFFduuR7vvgw">
                  <body>Creates the left Edge connecting the calling node to the passed node.
	 * 
	 * @param n The left child of the calling node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGLJYS_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGOMsC_9EeSFFduuR7vvgw" name="setLeftEdge" visibility="private" method="_dWHp4C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbxl8S_9EeSFFduuR7vvgw">
                  <body>Creates and sets the left edge for the calling node.
	 * 
	 * @param n2 The second node that makes up the edge.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGOMsS_9EeSFFduuR7vvgw" name="n2" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGR3EC_9EeSFFduuR7vvgw" name="setRightChild" method="_dWIQ8C_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbxl8i_9EeSFFduuR7vvgw">
                  <body>Creates the right Edge connecting the calling node to the passed node.
	 * 
	 * @param n The right child of the calling node.
	 * @throws Exception</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGR3ES_9EeSFFduuR7vvgw" name="n" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGUTUS_9EeSFFduuR7vvgw" name="setRightEdge" visibility="private" method="_dWJfEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbyNAS_9EeSFFduuR7vvgw">
                  <body>Creates and sets the right edge for the calling node.
	 * 
	 * @param n2 The second node that makes up the edge.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGU6YC_9EeSFFduuR7vvgw" name="n2" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dGXWoC_9EeSFFduuR7vvgw" name="getEdgeRepresentation" visibility="package" method="_dWNJcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dGX9sC_9EeSFFduuR7vvgw" name="edge" type="_cJnagC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dGX9sS_9EeSFFduuR7vvgw" name="source_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dGX9si_9EeSFFduuR7vvgw" name="target_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dGX9sy_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNDNcC_9EeSFFduuR7vvgw" name="BSTNode" method="_dWEmkC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dND0gS_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dND0gi_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dbw-4C_9EeSFFduuR7vvgw">
                  <body>Constructor for a new node.
	 * 
	 * @param identifier Name of the node.
	 * @param val The value so it can be sorted(temporary).</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNDNcS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dND0gC_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dND0gy_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNHe4S_9EeSFFduuR7vvgw" name="getNodeRepresentation" method="_dWKtMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbyNAy_9EeSFFduuR7vvgw">
                  <body>Internal code for getting the properties of an AbstractVertex.
	 * 
	 * It produces (without the spaces or newlines):
	 * &lt;tt>
	 * {
	 *  &quot;name&quot;: &quot;Some identifier&quot;,
	 *  &quot;other CSS properties like color&quot;: any_JSON_value
	 * }
	 * @returns the encoded JSON string</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNHe4i_9EeSFFduuR7vvgw" name="node_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNIF8C_9EeSFFduuR7vvgw" name="link_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNJUEC_9EeSFFduuR7vvgw" name="getNodeRepresentation" visibility="package" method="_dWL7UC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dbyNBC_9EeSFFduuR7vvgw">
                  <body>Internal code for getting the properties of an AbstractVertex.
	 * 
	 * It produces (without the spaces or newlines):
	 * &lt;tt>
	 * {
	 *  &quot;name&quot;: &quot;Some identifier&quot;,
	 *  &quot;other CSS properties like color&quot;: any_JSON_value
	 * }
	 * @returns the encoded JSON string</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNJUES_9EeSFFduuR7vvgw" name="node_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNJUEi_9EeSFFduuR7vvgw" name="node_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNJUEy_9EeSFFduuR7vvgw" name="link_json" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNJ7IC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cN_kMC_9EeSFFduuR7vvgw" name="Bridge">
              <ownedComment xmi:id="_db0CMC_9EeSFFduuR7vvgw">
                <body>Connection to the Bridges server.

Initialize this class before using it, and call complete() afterward.

@author Sean Gallagher</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dQQScC_9EeSFFduuR7vvgw" name="assignment" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dQT80C_9EeSFFduuR7vvgw" name="key" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dQYOQC_9EeSFFduuR7vvgw" name="visualizer" isStatic="true" type="_cZSOMC_9EeSFFduuR7vvgw" association="_deC20C_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQb4oC_9EeSFFduuR7vvgw" name="backend" visibility="private" isStatic="true" type="_cQMjoC_9EeSFFduuR7vvgw" association="_deEE8C_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQdt0C_9EeSFFduuR7vvgw" name="userName" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dQhYMC_9EeSFFduuR7vvgw" name="failsafe" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dQhYMS_9EeSFFduuR7vvgw" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWe2QC_9EeSFFduuR7vvgw" name="init" specification="_dGvKEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWe2QS_9EeSFFduuR7vvgw" name="assignment">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe2Qi_9EeSFFduuR7vvgw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWe2Qy_9EeSFFduuR7vvgw" name="visualizer" type="_cZSOMC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWe2RC_9EeSFFduuR7vvgw" name="username">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Bridge.assignment = assignment;
		Bridge.key = key;
		Bridge.visualizer = visualizer;
		Bridge.backend = new BridgeNetwork();
		Bridge.userName = username;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgEYC_9EeSFFduuR7vvgw" name="getServerURL" specification="_cOf6gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWgEYS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return backend.server_url;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWgrcC_9EeSFFduuR7vvgw" name="setServerURL" specification="_cOi90C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWgrcS_9EeSFFduuR7vvgw" name="server_url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Bridge.backend.server_url = server_url;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWhSgC_9EeSFFduuR7vvgw" name="update" specification="_cOkzAC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>try {
     	//System.out.println(visualizer.getRepresentation());
			backend.post(&quot;/assignments/&quot; + assignment, visualizer.getRepresentation());
		} catch (IOException e) {
			System.err.println(&quot;There was a problem sending the visualization&quot;
					+ &quot; representation to the server. Are you connected to the&quot;
					+ &quot; Internet? Check your network settings. Otherwise, maybe&quot;
					+ &quot; the central Bridges server is down. Try again later.\n&quot;
					+ e.getMessage());
		} catch (RateLimitException e) {
			System.err.println(&quot;There was a problem sending the visualization&quot;
					+ &quot; representation to the server. However, it responded with&quot;
					+ &quot; an impossible 'RateLimitException'. Please contact&quot;
					+ &quot; Bridges developers and file a bug report; this error&quot;
					+ &quot; should not be possible.\n&quot;
					+ e.getMessage());
		} 
     // Return a URL to the user
     System.out.println(&quot;Check out your visuals at &quot; + backend.prepare(&quot;/assignments/&quot; + assignment + &quot;/&quot; + userName) );
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWh5kC_9EeSFFduuR7vvgw" name="complete" specification="_cOlaEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>update();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWigoC_9EeSFFduuR7vvgw" name="trimComma" specification="_dNPasC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWigoS_9EeSFFduuR7vvgw" name="in" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWigoi_9EeSFFduuR7vvgw" type="_dNGQwC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (in.length() > 0 &amp;&amp; in.charAt(in.length()-1) == ',')
			in.deleteCharAt(in.length()-1);
		return in;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWjHsC_9EeSFFduuR7vvgw" name="quote" specification="_cOodYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWjHsS_9EeSFFduuR7vvgw" name="in">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWjHsi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;\&quot;%s\&quot;&quot;, in);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWkV0C_9EeSFFduuR7vvgw" name="unquote" specification="_cOq5oC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWkV0S_9EeSFFduuR7vvgw" name="in">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWkV0i_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return in.substring(
				Math.min(in.length()-1, 1),
				Math.max(in.length()-1, 0));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWlj8C_9EeSFFduuR7vvgw" name="sorted_values" specification="_dNQo0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWlj8S_9EeSFFduuR7vvgw" name="values" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWlj8i_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWlj8y_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;T> sorted_values = new ArrayList&lt;>(values.values());
		Collections.sort(sorted_values);
		return sorted_values;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWmyEC_9EeSFFduuR7vvgw" name="sorted_entries" specification="_dNUTMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWmyES_9EeSFFduuR7vvgw" name="map" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWmyEi_9EeSFFduuR7vvgw" type="_dFcwoS_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWmyEy_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;Entry&lt;K, V>> sorted_entries = new ArrayList&lt;>(map.entrySet());
		Collections.sort(sorted_entries, new Comparator&lt;Entry&lt;K, V>>() {
			public int compare(Entry&lt;K, V> t, Entry&lt;K, V> o) {
				return t.getKey().compareTo(o.getKey());
			}
		});
		return sorted_entries;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWoAMC_9EeSFFduuR7vvgw" name="getAssociations" specification="_dGyNYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWoAMS_9EeSFFduuR7vvgw" name="identifier" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWoAMi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWoAMy_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWoANC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>try {
     		return followers(identifier, max);
 	    }
     		catch (RateLimitException e) {
     		return new ArrayList&lt;>();
     	}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWpOUC_9EeSFFduuR7vvgw" name="getAssociations" specification="_dG0CkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWpOUS_9EeSFFduuR7vvgw" name="identifier" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWpOUi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpOUy_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWpOVC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>try {
         		return actors(identifier, max);
     	    }
         		catch (RateLimitException e) {
         		return new ArrayList&lt;>();
         	}
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWqccC_9EeSFFduuR7vvgw" name="getAssociations" specification="_dG1QsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWqccS_9EeSFFduuR7vvgw" name="identifier" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWqcci_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWqccy_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWqcdC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>try {
         		return movies(identifier, max);
     	    }
         		catch (RateLimitException e) {
         		return new ArrayList&lt;>();
         	}
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWrqkC_9EeSFFduuR7vvgw" name="followers" specification="_dG3F4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWrqkS_9EeSFFduuR7vvgw" name="id" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWrqki_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrqky_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWrqlC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (failsafe) {
 		// Don't contact Twitter, use sample data
 		return SampleDataGenerator.getFriends(id.getName(), max);
 	} else {
	    	try {
		    	String resp = backend.get(&quot;/streams/twitter.com/followers/&quot;
		    			+ id.getName() + &quot;/&quot; + max);
		    	
		        JSONObject response = backend.asJSONObject(resp);
		        JSONArray followers = (JSONArray) backend.safeJSONTraverse(
		        		&quot;['followers']&quot;, response, JSONArray.class);
		        
		        List&lt;Follower> results = new ArrayList&lt;>();
		    	for (Object follower : followers) {
		    		String name = (String) backend.safeJSONTraverse(
		    				&quot;&quot;, follower, String.class);
		    		results.add(new Follower(name));
		    	}
		    	return results;
	    	} catch (IOException e) {
	    		// Trigger failsafe.
	    		System.err.println(&quot;Warning: Trouble contacting Bridges. Using &quot;
	    				+ &quot;sample data instead.\n&quot;
	    				+ e.getMessage());
	    		failsafe = true;
	    		return followers(id, max);
	    	}
 	}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWs4sC_9EeSFFduuR7vvgw" name="getTwitterTimeline" specification="_dG6wQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWs4sS_9EeSFFduuR7vvgw" name="id" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWs4si_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWs4sy_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWs4tC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (failsafe) {
			// Don't contact Twitter, use sample data
			return SampleDataGenerator.getTwitterTimeline(id.getName(), max);
		} else {
	    	try {
		    	String resp = backend.get(&quot;/streams/twitter.com/timeline/&quot;
		    			+ id.getName() + &quot;/&quot; + max);
		    	
		        JSONObject response = backend.asJSONObject(resp);
		        JSONArray tweets_json = (JSONArray) backend.safeJSONTraverse(
		        		&quot;['tweets']&quot;, response, JSONArray.class);
		        
		        List&lt;Tweet> results = new ArrayList&lt;>();
		    	for (Object tweet_json : tweets_json) {
		    		String content = (String) backend.safeJSONTraverse(
		    				&quot;&quot;, tweet_json, String.class);
		    		String date_str = (String) backend.safeJSONTraverse(
		    				&quot;&quot;, tweet_json, String.class);
		    		
		    		// TODO: When Java 8 is common enough, switch this to ZonedDateTime.parse()
		    		DateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;);
		    		Date date;
		    		try {
						date = df.parse(date_str);
					} catch (ParseException e) {
						date = new Date();
					}
		    		results.add(new Tweet(content, date));
		    	}
		    	return results;
	    	} catch (IOException e) {
	    		// Trigger failsafe.
	    		System.err.println(&quot;Warning: Trouble contacting Bridges. Using &quot;
	    				+ &quot;sample data instead.\n&quot;
	    				+ e.getMessage());
	    		failsafe = true;
	    		return getTwitterTimeline(id, max);
	    	}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWuG0C_9EeSFFduuR7vvgw" name="movies" specification="_dG8lcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWuG0S_9EeSFFduuR7vvgw" name="id" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWuG0i_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWuG0y_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWuG1C_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (failsafe) {
 		// Don't contact Bridges, use sample data
 		return SampleDataGenerator.getMovies(id.getName(), max);
 	} else {
	    	try {
		    	String resp = backend.get(&quot;/streams/actors/&quot; + id.getName());
		    	JSONArray movies = backend.asJSONArray(resp);
		    	
		        // Get (in JS) movies_json.map(function(m) { return m.title; })
		        List&lt;Movie> results = new ArrayList&lt;>();
		        for (Object movie : movies) {
		        	String title = (String) backend.safeJSONTraverse(&quot;['title']&quot;,
		        			movie, String.class);
		        	results.add(new Movie(title));
		        }
		        return results;
	    	} catch (IOException e) {
	    		// Trigger failsafe.
	    		System.err.println(&quot;Warning: Trouble contacting Bridges. Using &quot;
	    				+ &quot;sample data instead.\n&quot;
	    				+ e.getMessage());
	    		failsafe = true;
	    		return movies(id, max);
	    	}
 	}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWvU8C_9EeSFFduuR7vvgw" name="actors" specification="_dG_BsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWvU8S_9EeSFFduuR7vvgw" name="id" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dWvU8i_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWvU8y_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dWvU9C_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (failsafe) {
 		// Don't contact Bridges, use sample data
 		return SampleDataGenerator.getCast(id.getName(), max);
 	} else {
	    	try {
		    	String resp = backend.get(&quot;/streams/rottentomatoes.com/&quot; + id.getName());
		    	JSONArray movies = backend.asJSONArray(resp);
		    	
		        // We will assume that the first movie is the right one
		    	JSONArray abridged_cast = (JSONArray) backend.safeJSONTraverse(
		    			&quot;[0]['abridged_cast']&quot;, movies, JSONArray.class);
		    	List&lt;Actor> results = new ArrayList&lt;>();
		    	for (Object cast_member : abridged_cast) {
		    		if (results.size() == max)
		    			break;
		    		String name = (String) backend.safeJSONTraverse(&quot;['name']&quot;,
		    				cast_member, String.class);
					results.add(new Actor(name));
		    	}
		    	return results;
	    	} catch (IOException e) {
	    		// Trigger failsafe.
	    		System.err.println(&quot;Warning: Trouble contacting Bridges. Using &quot;
	    				+ &quot;sample data instead.\n&quot;
	    				+ e.getMessage());
	    		failsafe = true;
	    		return actors(id, max);
	    	}
 	}
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWwjEC_9EeSFFduuR7vvgw" name="getEdgeWeight" specification="_cPAQ0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dWwjES_9EeSFFduuR7vvgw" name="source">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwjEi_9EeSFFduuR7vvgw" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwjEy_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>int h = source.hashCode() + target.hashCode();
 	if (h &lt; 0) h = -h;
 	return h % 10;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cOf6gC_9EeSFFduuR7vvgw" name="getServerURL" isStatic="true" method="_dWgEYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cOhIoC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cOi90C_9EeSFFduuR7vvgw" name="setServerURL" isStatic="true" method="_dWgrcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cOi90S_9EeSFFduuR7vvgw" name="server_url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cOkzAC_9EeSFFduuR7vvgw" name="update" isStatic="true" method="_dWhSgC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db6I0S_9EeSFFduuR7vvgw">
                  <body>Update visualization metadata. This may be called many times.
	 * This is usually an expensive operation and involves connecting to the network.
	 * Calling this method is optional provided you call complete()</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_cOlaEC_9EeSFFduuR7vvgw" name="complete" isStatic="true" method="_dWh5kC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db6v4C_9EeSFFduuR7vvgw">
                  <body>Close down Bridges.
	 * 
	 * This only calls update() but it could conceivably do more.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_cOodYC_9EeSFFduuR7vvgw" name="quote" visibility="package" isStatic="true" method="_dWjHsC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db6v4i_9EeSFFduuR7vvgw">
                  <body>Internal method for JSON preparation
	 * @param in	The original String
	 * @return the string, encapsulated in quotes</body>
                </ownedComment>
                <ownedParameter xmi:id="_cOodYS_9EeSFFduuR7vvgw" name="in">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cOpEcC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cOq5oC_9EeSFFduuR7vvgw" name="unquote" visibility="package" isStatic="true" method="_dWkV0C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db7W8C_9EeSFFduuR7vvgw">
                  <body>Internal method for JSON preparation
	 * @return a string with all but the first and last characters</body>
                </ownedComment>
                <ownedParameter xmi:id="_cOq5oS_9EeSFFduuR7vvgw" name="in">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cOrgsC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cPAQ0C_9EeSFFduuR7vvgw" name="getEdgeWeight" isStatic="true" method="_dWwjEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db9MIi_9EeSFFduuR7vvgw">
                  <body>Generate a sample Edge weight for two nodes
     * @param source
     * @param target
     * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_cPAQ0S_9EeSFFduuR7vvgw" name="source">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cPA34C_9EeSFFduuR7vvgw" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cPA34S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dGvKEC_9EeSFFduuR7vvgw" name="init" isStatic="true" method="_dWe2QC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db6I0C_9EeSFFduuR7vvgw">
                  <body>Initialize Bridges with Visualizer
	 * @param assignment  The assignment number, for grading
	 * @param visualizer  The visualizer, for assignment
	 * @param username TODO</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGvKES_9EeSFFduuR7vvgw" name="assignment">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dGvxIC_9EeSFFduuR7vvgw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dGvxIS_9EeSFFduuR7vvgw" name="visualizer" type="_cZSOMC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dGvxIi_9EeSFFduuR7vvgw" name="username">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dGyNYC_9EeSFFduuR7vvgw" name="getAssociations" isStatic="true" method="_dWoAMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db7-AC_9EeSFFduuR7vvgw">
                  <body>This Method returns the list of followers 
     * @param identifier holds the name of the 
     * @param max holds the max number of followers
     * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dGyNYS_9EeSFFduuR7vvgw" name="identifier" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dGy0cC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dGy0cS_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dGy0ci_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG0CkC_9EeSFFduuR7vvgw" name="getAssociations" isStatic="true" method="_dWpOUC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db7-AS_9EeSFFduuR7vvgw">
                  <body>This Method returns the list of actors 
         * @param identifier holds the name of the movie
         * @param max holds the max number of actors
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG0CkS_9EeSFFduuR7vvgw" name="identifier" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG0Cki_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG0poC_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG0poS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG1QsC_9EeSFFduuR7vvgw" name="getAssociations" isStatic="true" method="_dWqccC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db7-Ai_9EeSFFduuR7vvgw">
                  <body>This Method returns the list of movies 
         * @param identifier holds the name of the movie
         * @param max holds the max number of movies
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG1QsS_9EeSFFduuR7vvgw" name="identifier" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG13wC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG13wS_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG13wi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG3F4C_9EeSFFduuR7vvgw" name="followers" visibility="package" isStatic="true" method="_dWrqkC_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db8lEC_9EeSFFduuR7vvgw">
                  <body>List the user's followers as more FollowGraphNodes.
        Limit the result to `max` followers. Note that results are batched, so
        a large `max` (as high as 200) _may_ only count as one request.
        See Bridges.followgraph() for more about rate limiting. 
     * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG3F4S_9EeSFFduuR7vvgw" name="id" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG3s8C_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG3s8S_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG3s8i_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG6wQC_9EeSFFduuR7vvgw" name="getTwitterTimeline" isStatic="true" method="_dWs4sC_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db8lES_9EeSFFduuR7vvgw">
                  <body>List the user's followers as more FollowGraphNodes.
     * Limit the result to `max` followers. Note that results are batched, so 
     * a large `max` (as high as 200) _may_ only count as one request.
     * See Bridges.followgraph() for more about rate limiting. 
     * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG6wQS_9EeSFFduuR7vvgw" name="id" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG7XUC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG7XUS_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG7XUi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG8lcC_9EeSFFduuR7vvgw" name="movies" isStatic="true" method="_dWuG0C_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db9MIC_9EeSFFduuR7vvgw">
                  <body>Return a list of movies an actor played in.
     * 
     * The data comes courtesy of RottenTomatoes.
     * 
     * The quota for this resource is about 10k actors/day but is shared by all
     * students. So if you consume all 10k, it will be a bad day. Please make
     * sure you limit your queries appropriately.
     *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG8lcS_9EeSFFduuR7vvgw" name="id" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG9MgC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG9MgS_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG9Mgi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dG_BsC_9EeSFFduuR7vvgw" name="actors" isStatic="true" method="_dWvU8C_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db9MIS_9EeSFFduuR7vvgw">
                  <body>Return the actors that played in a movie.
     * 
     * The data comes courtesy of TMDb.
     * 
     * This resource has unlimited queries but has caveats. Not every extra
     * that played in every movie ever is listed in the database and some
     * movies are documented rather sparsely. Expect some to be missing.
     * @throws IOException 
     * @throws RateLimitException</body>
                </ownedComment>
                <ownedParameter xmi:id="_dG_owC_9EeSFFduuR7vvgw" name="id" type="_cMK_QC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dG_owS_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dG_owi_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dG_owy_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNPasC_9EeSFFduuR7vvgw" name="trimComma" isStatic="true" method="_dWigoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_db6v4S_9EeSFFduuR7vvgw">
                  <body>Internal method for JSON preparation
	 * @param in 	The original string
	 * @return a string with all but the last character</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNQBwC_9EeSFFduuR7vvgw" name="in" type="_dNGQwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNQBwS_9EeSFFduuR7vvgw" type="_dNGQwC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNQo0C_9EeSFFduuR7vvgw" name="sorted_values" visibility="package" isStatic="true" method="_dWlj8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dNRP4C_9EeSFFduuR7vvgw" name="values" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNR28C_9EeSFFduuR7vvgw" type="_dMqy8C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dNR28S_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNUTMC_9EeSFFduuR7vvgw" name="sorted_entries" visibility="package" isStatic="true" method="_dWmyEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dNU6QC_9EeSFFduuR7vvgw" name="map" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNVhUC_9EeSFFduuR7vvgw" type="_dFcwoS_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dNVhUS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_cOEcsC_9EeSFFduuR7vvgw" name="Ident" visibility="package">
                <eAnnotations xmi:id="_cOFDwC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cOFDwS_9EeSFFduuR7vvgw" key="sameFile"/>
                </eAnnotations>
                <ownedAttribute xmi:id="_dQNPIC_9EeSFFduuR7vvgw" name="provider">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dQOdQC_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWRa4C_9EeSFFduuR7vvgw" name="Ident" specification="_cOIuIC_9EeSFFduuR7vvgw">
                  <ownedParameter xmi:id="_dWRa4S_9EeSFFduuR7vvgw" name="identifier">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWRa4i_9EeSFFduuR7vvgw" type="_cOEcsC_9EeSFFduuR7vvgw" direction="return"/>
                  <language>java</language>
                  <body>if (identifier.contains(&quot;/&quot;)) {
 		String[] halves = identifier.split(&quot;/&quot;, 2);
 		provider = halves[0];
 		name = halves[1];
 	} else {
 		throw new RuntimeException(&quot;Provider or screenname missing in &quot;
 				+ identifier + &quot;. Should look like: example.com/username&quot;);
 	}
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWTQEC_9EeSFFduuR7vvgw" name="Ident" specification="_cOLxcC_9EeSFFduuR7vvgw">
                  <ownedParameter xmi:id="_dWTQES_9EeSFFduuR7vvgw" name="provider">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWTQEi_9EeSFFduuR7vvgw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWTQEy_9EeSFFduuR7vvgw" type="_cOEcsC_9EeSFFduuR7vvgw" direction="return"/>
                  <language>java</language>
                  <body>this.provider = provider;
		this.name = name;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dWT3IC_9EeSFFduuR7vvgw" name="fromAnyString" specification="_cOO0wC_9EeSFFduuR7vvgw">
                  <ownedParameter xmi:id="_dWT3IS_9EeSFFduuR7vvgw" name="identifier">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWT3Ii_9EeSFFduuR7vvgw" type="_dNLJQC_9EeSFFduuR7vvgw" direction="return"/>
                  <language>java</language>
                  <body>if (identifier.contains(&quot;/&quot;)) {
 		return new Ident(identifier);
 	} else {
 		return new Ident(&quot;&quot;, identifier);
 	}
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_cOIuIC_9EeSFFduuR7vvgw" name="Ident" method="_dWRa4C_9EeSFFduuR7vvgw">
                  <eAnnotations xmi:id="_cOJVMC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_cOJ8QC_9EeSFFduuR7vvgw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_db3FgC_9EeSFFduuR7vvgw">
                    <body>Create a new Ident from an identifier string with a provider
	 * @param identifier</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_cOIuIS_9EeSFFduuR7vvgw" name="identifier">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_cOJ8QS_9EeSFFduuR7vvgw" type="_cOEcsC_9EeSFFduuR7vvgw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_cOLxcC_9EeSFFduuR7vvgw" name="Ident" method="_dWTQEC_9EeSFFduuR7vvgw">
                  <eAnnotations xmi:id="_cOM_kC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_cOM_kS_9EeSFFduuR7vvgw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_db3FgS_9EeSFFduuR7vvgw">
                    <body>Create a plain, straightforward Ident with the provider and name as given.
	 * @param provider
	 * @param name</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_cOMYgC_9EeSFFduuR7vvgw" name="provider">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_cOMYgS_9EeSFFduuR7vvgw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_cONmoC_9EeSFFduuR7vvgw" type="_cOEcsC_9EeSFFduuR7vvgw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_cOO0wC_9EeSFFduuR7vvgw" name="fromAnyString" isStatic="true" method="_dWT3IC_9EeSFFduuR7vvgw">
                  <ownedParameter xmi:id="_cOO0wS_9EeSFFduuR7vvgw" name="identifier">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dNNlgC_9EeSFFduuR7vvgw" type="_dNLJQC_9EeSFFduuR7vvgw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cQMjoC_9EeSFFduuR7vvgw" name="BridgeNetwork">
              <ownedAttribute xmi:id="_dQoF4C_9EeSFFduuR7vvgw" name="server_url" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dQos8C_9EeSFFduuR7vvgw" value="&quot;http://bridges-cs.herokuapp.com&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dQp7EC_9EeSFFduuR7vvgw" name="http_connection" visibility="package" type="_dNbn8C_9EeSFFduuR7vvgw" association="_deF6IC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQqiIS_9EeSFFduuR7vvgw" name="debug" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dQrJMC_9EeSFFduuR7vvgw" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dW67IC_9EeSFFduuR7vvgw" name="BridgeNetwork" specification="_cQSqQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dW67IS_9EeSFFduuR7vvgw" type="_cQMjoC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>http_connection = Executor.newInstance(
 			HttpClientBuilder
 					.create()
 					.setRedirectStrategy(new LaxRedirectStrategy())
 					.build()
 		    );
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dW7iMC_9EeSFFduuR7vvgw" name="getServerURL" specification="_cQUfcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dW7iMS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return server_url;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dW8JQC_9EeSFFduuR7vvgw" name="setServerURL" specification="_cQW7sC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dW8JQS_9EeSFFduuR7vvgw" name="server_url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>while (server_url.endsWith(&quot;/&quot;))
			server_url = server_url.substring(0, server_url.length()-1);
		if (server_url.length() > 0)
			this.server_url = server_url;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dW-lgC_9EeSFFduuR7vvgw" name="asJSONObject" specification="_cQZX8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dW-lgS_9EeSFFduuR7vvgw" name="text">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW-lgi_9EeSFFduuR7vvgw" type="_dGst0C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>JSONObject jo;
 	try {
 		jo = (JSONObject) JSONValue.parse(text);
 	} catch (ClassCastException e) {
 		throw new IOException(&quot;Received a malformed JSON response from the&quot;
 				+ &quot; server (expecting a JSON object): &quot; + text);
 	}
 	if (jo == null) {
 		throw new IOException(&quot;Received an empty JSON response from the&quot;
 				+ &quot; server. &quot;);
 	}
     if (jo.containsKey(&quot;error&quot;)) {
     	throw new IOException(&quot;Server reported an error while serving&quot;
     			+ &quot; request: &quot; + jo.get(&quot;error&quot;));
     }
     return jo;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dW_MkC_9EeSFFduuR7vvgw" name="asJSONArray" specification="_cQdpYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dW_MkS_9EeSFFduuR7vvgw" name="text">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW_Mki_9EeSFFduuR7vvgw" type="_dGrfsC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>JSONArray ja;
 	try {
 		ja = (JSONArray) JSONValue.parse(text);
 	} catch (ClassCastException e) {
 		// We didn't get an array.
 		// If it is an object-with-error, then asJSON will error:
 		asJSONObject(text);
 		// asJSON didn't error so we just received the wrong type.
 		throw new IOException(&quot;Received a malformed JSON response from the&quot;
 				+ &quot; server. We were expecting a JSON array, but received&quot;
 				+ &quot; a JSON object: &quot; + text);
 	}
 	if (ja == null) {
 		throw new IOException(&quot;Received an empty JSON response from the&quot;
 				+ &quot; server: &quot; + text);
 	}
 	return ja;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXAasC_9EeSFFduuR7vvgw" name="safeJSONTraverseErrorReport" specification="_dNfSUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXAasS_9EeSFFduuR7vvgw" name="sequence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAasi_9EeSFFduuR7vvgw" name="cursor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAasy_9EeSFFduuR7vvgw" name="original_obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXAatC_9EeSFFduuR7vvgw" name="report">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// This is not an array. Try to spit out a helpful error message.
 	System.err.println(&quot;Received a malformed JSON response. An &quot;
 			+ &quot;IOException follows. The error was near here: &quot;);
 	System.err.println(sequence);
 	for (int i=0; i&lt;cursor; i++)
 		System.err.print(&quot; &quot;);
 	System.err.println(&quot;^&quot;);
 	System.err.println(&quot;It occured while processing the following JSON:&quot;);
 	System.err.println(original_obj);
		throw new IOException(report);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXBo0C_9EeSFFduuR7vvgw" name="safeJSONTraverse" specification="_dNhHgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXBo0S_9EeSFFduuR7vvgw" name="sequence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXBo0i_9EeSFFduuR7vvgw" name="original" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXBo0y_9EeSFFduuR7vvgw" name="target" type="_dKY7AS_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXBo1C_9EeSFFduuR7vvgw" type="_dM7RoC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>// Make sure the syntax is right
 	if (!sequence.matches(&quot;(\\[(\\d+|'[^']+')\\])*&quot;)) {
 		throw new IOException(&quot;Could not understand JSON traversal \&quot;&quot;
 				+ sequence + &quot;\&quot;. Please file a bug report with this&quot;
					+ &quot; error to the Bridges developers.&quot;);
 	}
 	// Make sure the input is not null
 	if (original == null)
 		safeJSONTraverseErrorReport(sequence, 0, original, 
 				&quot;Input JSON is null.&quot;);
 	
 	// The cursor is where we are in `sequence`
 	int cursor = 0;
 	// This holds the object we will be running the next operation on.
 	Object any_json = original;
 	
 	// Parse `sequence`
 	Pattern array_index_p = Pattern.compile(&quot;\\[(\\d+)\\]&quot;);
		Matcher array_index_m = array_index_p.matcher(sequence.substring(cursor));
		Pattern object_p = Pattern.compile(&quot;\\['([^']+)'\\]&quot;);
		Matcher object_m = object_p.matcher(sequence.substring(cursor));
		
		// startsWith()..
		while (cursor &lt; sequence.length()) {
	    	if (array_index_m.find() &amp;&amp; array_index_m.start() == 0) {
	    		// Get an array index
	    		int index = Integer.parseInt(array_index_m.group(1));
	    		JSONArray ja = null;
	    		try {
	        		ja = (JSONArray) any_json;
	        	} catch (ClassCastException e) {
	        		// This is not an array.
	        		safeJSONTraverseErrorReport(sequence, cursor, original, 
	        				&quot;Cannot access array element: not an array.&quot;);
	        	}
	    		if (ja == null) {
	    			// This array is null
	    			safeJSONTraverseErrorReport(sequence, cursor, original, 
	        				&quot;Cannot access array element: array is null.&quot;);
	    		} else {
		    		try { 
		    			any_json = ja.get(index);
		    		} catch (IndexOutOfBoundsException e) {
		    			// This array does not have enough elements.
		        		safeJSONTraverseErrorReport(sequence, cursor, original, 
		        				&quot;Cannot get element &quot; + index + &quot; from array.&quot;);
		    		}
	    		}
	    		cursor += array_index_m.end();
	    	} else if (object_m.find() &amp;&amp; object_m.start() == 0) {
	    		// Get an object attribute
	    		String attribute_name = object_m.group(1);
	    		JSONObject jo = null;
	    		try {
	        		jo = (JSONObject) any_json;
	        	} catch (ClassCastException e) {
	        		// This is not an object.
	        		safeJSONTraverseErrorReport(sequence, cursor, original, 
	        				&quot;Cannot get an object attribute: not an object.&quot;);
	        	}
	    		if (jo == null) {
	    			// This object is null
	    			safeJSONTraverseErrorReport(sequence, cursor, original, 
	        				&quot;Cannot access object attribute: &quot;
	        				+ &quot;object is null.&quot;);
	    		} else {
	    			any_json = jo.get(attribute_name);
		    		if (any_json == null) {
		    			// The object doesn't have this attribute.
		        		safeJSONTraverseErrorReport(sequence, cursor, original, 
		        				&quot;Cannot get attribute &quot;+ attribute_name +
		        				&quot; from object&quot;);
		    		}
	    		}
	    		cursor += object_m.end();
	    	} else {
	    		throw new RuntimeException(&quot;BUG: Malformed traversal &quot; + 
	    				sequence + &quot; passed regex.&quot;);
	    	}
		}
		if (any_json == null) {
			safeJSONTraverseErrorReport(
					sequence,
					sequence.length()-1,
					original,
					&quot;Traversal returned null.&quot;);
		}
		if (any_json.getClass().equals(target)) {
			return any_json;
		} else {
			safeJSONTraverseErrorReport(
					sequence,
					sequence.length()-1,
					original,
					&quot;Traversal expected a &quot; + target.getSimpleName() +
					&quot; but received a &quot; + any_json.getClass().getSimpleName());
			// Impossible return to make javac happy:
			return null;
		}	
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXCP4C_9EeSFFduuR7vvgw" name="executeHTTPRequest" specification="_dNkx4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXCP4S_9EeSFFduuR7vvgw" name="request" type="_dNjjwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXCP4i_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// It's possible we need to reimplement this as a ResponseHandler
     
     // Execute the HTTP request
     HttpResponse response;
     if (debug)
     	System.out.println(&quot;Sending request: &quot; + request);
     try {
         response = http_connection.execute(request).returnResponse();
     } catch (HttpResponseException e) {
         // Something happened during the request that we can't handle
         System.out.println(&quot;Connection error encountered in processing '&quot;
         		+ request + &quot;\n&quot;);
         throw e;
     }
         
     /* This is somewhat complicated for getting a string, but:
      *   ...execute(request).returnContent().asString()
      *   	won't give error codes
      *   (String) ...execute(request).returnResponse().getEntity()
      *   	won't cast
      */
     String text = EntityUtils.toString(response.getEntity());
     
     if (response.getStatusLine().getStatusCode() == 503) {
     	throw new RateLimitException(&quot;Server responds Service Temporarily&quot;
     			+ &quot; Unavailable. You have probably reached your quota.&quot;
     			+ &quot; Try again after waiting at least 15 minutes.&quot;);
     } else if (response.getStatusLine().getStatusCode() >= 400) {
     	// The request succeeded but the server threw an error
         System.err.println(&quot;Server returned error response: HTTP &quot; +
         		response.getStatusLine().getStatusCode() + &quot; while&quot;
 				+ &quot; processing the request &quot; + request);
       
         /* By convention, the server responds {&quot;error&quot;: &quot;message&quot;} */
         
         // Parsing it as an object will throw if the server gave an error.
         asJSONObject(text);
         
         // But otherwise, throw something less helpful.
         throw new IOException(&quot;Server errored, but gave an invalid&quot;
         		+ &quot; report: &quot; + text + &quot;. Consider filing a bug report&quot;
 				+ &quot; about this at http://github.com/SeanTater/bridges.&quot;);
     }
     
     // Handle empty responses
     if (text == null || text.isEmpty())
         throw new IOException(&quot;Server returned empty response for '&quot;
     			+ request + &quot;'&quot;);
     return text;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXDeAC_9EeSFFduuR7vvgw" name="get" specification="_cQoBcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXDeAS_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXDeAi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return executeHTTPRequest(Request.Get(prepare(url)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXEFEC_9EeSFFduuR7vvgw" name="post" specification="_dNmAAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXEFES_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEFEi_9EeSFFduuR7vvgw" name="arguments" type="_dFbigC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>Request req = Request.Post(prepare(url));
     Form form = Form.form();
     for (Entry&lt;String, String> e : Bridge.sorted_entries(arguments)) {
     	form.add(e.getKey(), e.getValue());
     }
     executeHTTPRequest(req.bodyForm(form.build()));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXEsIC_9EeSFFduuR7vvgw" name="post" specification="_cQuIEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXEsIS_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEsIi_9EeSFFduuR7vvgw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>executeHTTPRequest(Request.Post(prepare(url))
     		.bodyString(data, ContentType.TEXT_PLAIN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXF6QC_9EeSFFduuR7vvgw" name="prepare" specification="_cQyZgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXF6QS_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXF6Qi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String out = server_url;
 	out += url
 			.replace(&quot; &quot;, &quot;%20&quot;)
   			.replace(&quot;$assignment&quot;, Integer.toString(
   					Bridge.getAssignment()));
 	out += &quot;?apikey=&quot; + Bridge.getKey();
   	return out;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cQSqQC_9EeSFFduuR7vvgw" name="BridgeNetwork" method="_dW67IC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cQTRUC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cQT4YC_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cQT4YS_9EeSFFduuR7vvgw" type="_cQMjoC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cQUfcC_9EeSFFduuR7vvgw" name="getServerURL" method="_dW7iMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcCrsC_9EeSFFduuR7vvgw">
                  <body>Get the current  base URL for the Bridges server (with no ending /)
     * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQVtkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cQW7sC_9EeSFFduuR7vvgw" name="setServerURL" method="_dW8JQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcCrsS_9EeSFFduuR7vvgw">
                  <body>Set the current base URL for the Bridges server (with no ending /)
	 * @param server_url</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQXiwC_9EeSFFduuR7vvgw" name="server_url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cQZX8C_9EeSFFduuR7vvgw" name="asJSONObject" method="_dW-lgC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcCrsi_9EeSFFduuR7vvgw">
                  <body>Decode a String containing JSON into a JSON Object, or throw an error.
	 * @param text  The input JSON text
	 * @return  A non-null JSON object</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQZ_AC_9EeSFFduuR7vvgw" name="text">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNddIC_9EeSFFduuR7vvgw" type="_dGst0C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cQdpYC_9EeSFFduuR7vvgw" name="asJSONArray" method="_dW_MkC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcDSwC_9EeSFFduuR7vvgw">
                  <body>Decode a String containing JSON into a JSON Array, or throw an error.
     * @param text  The JSON Array as a string
     * @return a non-null JSONArray</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQdpYS_9EeSFFduuR7vvgw" name="text">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNeEMC_9EeSFFduuR7vvgw" type="_dGrfsC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cQoBcC_9EeSFFduuR7vvgw" name="get" method="_dXDeAC_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw _dGf5gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcEg4S_9EeSFFduuR7vvgw">
                  <body>Execute a simple GET request relative to the server root.
        Omit the leading http://hostname, but include the leading /:
        [good]: /api/followgraph/user/sean
        [bad]: api/followgraph/user/sean
        [bad]: http://myserver:9183/api/followgraph/user/sean</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQoogC_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cQpPkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cQuIEC_9EeSFFduuR7vvgw" name="post" method="_dXEsIC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw _cXHD8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cQuvIC_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cQuvIS_9EeSFFduuR7vvgw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cQyZgC_9EeSFFduuR7vvgw" name="prepare" method="_dXF6QC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcFH8S_9EeSFFduuR7vvgw">
                  <body>Escape the URL and prepend the base URL.
     * @returns the new url as a String</body>
                </ownedComment>
                <ownedParameter xmi:id="_cQyZgS_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cQzAkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNfSUC_9EeSFFduuR7vvgw" name="safeJSONTraverseErrorReport" visibility="private" method="_dXAasC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcD50C_9EeSFFduuR7vvgw">
                  <body>Form and throw a helpful error report as part of JSON traversal.
     * @param sequence   The traversal we wanted to make
     * @param cursor     Index into `sequence`, how far in the traversal we are
     * @param any_json   Any JSON object
     * @param report     Statement of what went wrong.
     * @throws IOException</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNfSUS_9EeSFFduuR7vvgw" name="sequence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNfSUi_9EeSFFduuR7vvgw" name="cursor">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNf5YC_9EeSFFduuR7vvgw" name="original_obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNf5YS_9EeSFFduuR7vvgw" name="report">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNhHgC_9EeSFFduuR7vvgw" name="safeJSONTraverse" method="_dXBo0C_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcD50S_9EeSFFduuR7vvgw">
                  <body>Traverse JSON in a type-safe manner.
     * This is somewhat complicated, but comes with the advantage that the
     * debugging reports are far clearer when you know the whole path you are
     * searching for.
     * 
     * Use this syntax:
     * [ number ] to access an array element,
     * [&quot;quoted string&quot;] to get an object attribute
     * 
     * @param sequence
     * @param o</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNhHgS_9EeSFFduuR7vvgw" name="sequence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNhHgi_9EeSFFduuR7vvgw" name="original" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNhHgy_9EeSFFduuR7vvgw" name="target" type="_dKY7AS_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNhukC_9EeSFFduuR7vvgw" type="_dM7RoC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNkx4C_9EeSFFduuR7vvgw" name="executeHTTPRequest" method="_dXCP4C_9EeSFFduuR7vvgw" raisedException="_dHUY4S_9EeSFFduuR7vvgw _dGf5gC_9EeSFFduuR7vvgw _cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcEg4C_9EeSFFduuR7vvgw">
                  <body>Execute an Apache Fluent Request.
     * Decorates HTTP error tracebacks with urls and server {&quot;error&quot;: &quot;...&quot;}
     * responses.
     * Throws an IOException with URL if the server returns an empty response.
     * Returns server response if the status code is >= 400
     *     but can still throw other exceptions if JSON parsing fails when
     *     formatting server JSON response
     * @param request
     * @return the requested string from the server
     * @throws ClientProtocolException
     * @throws IOException
     * @throws RateLimitException</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNkx4S_9EeSFFduuR7vvgw" name="request" type="_dNjjwC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNkx4i_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dNmAAC_9EeSFFduuR7vvgw" name="post" method="_dXEFEC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw _cXHD8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcFH8C_9EeSFFduuR7vvgw">
                  <body>Execute a simple POST request with relative paths, taking a Scala Map()
        of request parameters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNmAAS_9EeSFFduuR7vvgw" name="url">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNmAAi_9EeSFFduuR7vvgw" name="arguments" type="_dFbigC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cRMCIC_9EeSFFduuR7vvgw" name="BridgeTest">
              <ownedAttribute xmi:id="_dQzFAC_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_deHIQC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXKLsC_9EeSFFduuR7vvgw" name="setUpBeforeClass" specification="_cRN3UC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>graph = new GraphVisualizer&lt;>();
		Bridge.init(0, &quot;170195159766&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXKywC_9EeSFFduuR7vvgw" name="testGetUserName" specification="_cRT98C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The username has an unexpected value.&quot;, &quot;mmehedin@uncc.edu&quot;, Bridge.getUserName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXLZ0C_9EeSFFduuR7vvgw" name="testSetUserName" specification="_cRXBQC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bridge.setUserName(&quot;mmehedin@uncc.edu&quot;);
		assertEquals(&quot;The username has an unexpected value. setUserName did not work.&quot;, &quot;mmehedin@uncc.edu&quot;, Bridge.getUserName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXMA4C_9EeSFFduuR7vvgw" name="testInit" specification="_cReWAC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bridge.init(1, &quot;170195159766&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
		assertEquals(&quot;The assignment integer value is unexpected.&quot;, 1, Bridge.getAssignment());
		assertEquals(&quot;The key string value is unexpected.&quot;, &quot;170195159766&quot;, Bridge.getKey());
		assertEquals(&quot;The visualizer value is unexpected.&quot;, graph, Bridge.getVisualizer());
		assertEquals(&quot;The username string value is unexpected.&quot;, &quot;mmehedin@uncc.edu&quot;, Bridge.getUserName());
		
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXMA4S_9EeSFFduuR7vvgw" name="testGetAssignment" specification="_cRhZUC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The assignment integer value is unexpected.&quot;, 0, Bridge.getAssignment());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXN2EC_9EeSFFduuR7vvgw" name="testSetAssignment" specification="_cRkcoC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bridge.setAssignment(12);
		assertEquals(&quot;The assignment integer value is unexpected.&quot;, 12, Bridge.getAssignment());
		Bridge.setAssignment(0);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXOdIC_9EeSFFduuR7vvgw" name="testGetKey" specification="_cRnf8C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The key has an unexpected string value.&quot;, &quot;170195159766&quot;, Bridge.getKey());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXPEMC_9EeSFFduuR7vvgw" name="testSetKey" specification="_cRp8Mi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bridge.setKey(&quot;170195159000&quot;);
		assertEquals(&quot;The key has an unexpected string value.&quot;, &quot;170195159000&quot;, Bridge.getKey());
		Bridge.setKey(&quot;170195159766&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXPrQC_9EeSFFduuR7vvgw" name="testGetServerURL" specification="_cRtmkC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The server URL is incorrect.&quot;,&quot;http://bridges-cs.herokuapp.com&quot;,Bridge.getServerURL());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXPrQS_9EeSFFduuR7vvgw" name="testSetServerURL" specification="_cRwC0C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bridge.setServerURL(&quot;http://bridges-cs.herokuapp.com&quot;);
		assertEquals(&quot;The server URL is incorrect.&quot;,&quot;http://bridges-cs.herokuapp.com&quot;,Bridge.getServerURL());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXQSUC_9EeSFFduuR7vvgw" name="testGetVisualizer" specification="_cRyfEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The visualizer has an unexected value.&quot;, graph, Bridge.getVisualizer());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXQ5YC_9EeSFFduuR7vvgw" name="testSetVisualizer" specification="_cR0UQS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>GraphVisualizer&lt;Actor> actorGraph = new GraphVisualizer&lt;>();
		Bridge.setVisualizer(actorGraph);
		assertEquals(&quot;The visualizer has an unexected value.&quot;, actorGraph, Bridge.getVisualizer());
		Bridge.setVisualizer(graph);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXRgcC_9EeSFFduuR7vvgw" name="testUpdate" specification="_cR2wgS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
		//assertEquals(&quot;&quot;, Bridge.backend);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXRgcS_9EeSFFduuR7vvgw" name="testComplete" specification="_cR5z0C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
		//see update first
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXSHgC_9EeSFFduuR7vvgw" name="testTrimComma" specification="_cR8QEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXSukC_9EeSFFduuR7vvgw" name="testQuote" specification="_cR-FQi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The internal formating for JSON is not working.&quot;, &quot;\&quot;mihai\&quot;&quot;, Bridge.quote(&quot;mihai&quot;));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXSukS_9EeSFFduuR7vvgw" name="testUnquote" specification="_cR_6ci_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The internal formating for JSON is not working.&quot;, &quot;mihai&quot;, Bridge.unquote(&quot;\&quot;mihai\&quot;&quot;));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXTVoC_9EeSFFduuR7vvgw" name="testSorted_values" specification="_cSC9wC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Vertex aFollower = new Vertex(&quot;Bob&quot;, graph);
		Follower aF = new Follower(&quot;Bob&quot;);
		List aMap = Bridge.followers(aF, 5);
		List sorted_values = new ArrayList&lt;>(Bridge.followers(aF, 5));

		//assertEquals(&quot;The sorted_values return an unexpected value.&quot;, Collections.sort(sorted_values), Bridge.sorted_values(aMap));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXT8sC_9EeSFFduuR7vvgw" name="testSorted_entries" specification="_cSGBEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXUjwC_9EeSFFduuR7vvgw" name="testGetAssociationsFollowerInt" specification="_cSH2Qi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Follower aFollower = new Follower(&quot;Bob&quot;);
		assertEquals(&quot;The number of followers is not exact.&quot;, -1.0 ,Bridge.getAssociations(aFollower, 5).lastIndexOf(&quot;Bob&quot;), 0.0001);
		assertNotNull(&quot;The getAssociations() method returned a null value.&quot;, Bridge.getAssociations(aFollower, 5));
		List aList = Bridge.getAssociations(aFollower, 5);
		assertEquals(&quot;The number of followers is not exact.&quot;, new Follower(&quot;Gabriel&quot;) ,aList.get(aList.size()-1));
		assertEquals(&quot;The size of the follower list is incorrect.&quot;, 3 ,aList.size());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXVx4C_9EeSFFduuR7vvgw" name="testGetAssociationsActorInt" specification="_cSJrci_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Actor anActor = new Actor(&quot;Bob&quot;);
		assertEquals(&quot;The number of actors is not exact.&quot;, -1.0 ,Bridge.getAssociations(anActor, 5).lastIndexOf(&quot;Bob&quot;), 0.0001);
		assertNotNull(&quot;The getAssociations() method returned a null value.&quot;, Bridge.getAssociations(anActor, 5));
		List aList = Bridge.getAssociations(anActor, 5);
		assertEquals(&quot;The number of actors is not exact.&quot;, new Actor(&quot;Jude Law&quot;) ,aList.get(aList.size()-1));
		assertEquals(&quot;The size of the actor list is incorrect.&quot;, 5 ,aList.size());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXXnEC_9EeSFFduuR7vvgw" name="testGetAssociationsMovieInt" specification="_cSLgoS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Movie aMovie = new Movie(&quot;The Matrix&quot;);
		assertEquals(&quot;The number of movies is not exact.&quot;, -1.0 ,Bridge.getAssociations(aMovie, 5).lastIndexOf(&quot;The Matrix&quot;), 0.0001);
		assertNotNull(&quot;The getAssociations() method returned a null value.&quot;, Bridge.getAssociations(aMovie, 5));
		List aList = Bridge.getAssociations(aMovie, 5);
		assertEquals(&quot;The number of movies is not exact.&quot;, new Movie(&quot;The Shawshank Redemption&quot;) ,aList.get(aList.size()-1));
		assertEquals(&quot;The size of the movies' list is incorrect.&quot;, 5 ,aList.size());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXY1MC_9EeSFFduuR7vvgw" name="testFollowers" specification="_cSNV0i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXaDUC_9EeSFFduuR7vvgw" name="testMovies" specification="_cSUqkC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXeUwC_9EeSFFduuR7vvgw" name="testActors" specification="_cSZjEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;); // TODO
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXfi4C_9EeSFFduuR7vvgw" name="testGetEdgeWeight" specification="_cSb_UC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Follower follower1 = new Follower(&quot;John&quot;);
		Vertex&lt;Follower> John=new Vertex&lt;>(follower1, graph);
		Follower follower2 = new Follower(&quot;Jane&quot;);
		Vertex&lt;Follower> Jane=new Vertex&lt;>(follower2, graph);
		John.createEdge(Jane, 15.4);
		assertEquals(&quot;The edge weight is incorrect.&quot;, 15.4, John.getEdge(Jane).getWeight(), 0.0001);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cRN3UC_9EeSFFduuR7vvgw" name="setUpBeforeClass" isStatic="true" method="_dXKLsC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRQ6oC_9EeSFFduuR7vvgw" name="setUp" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRT98C_9EeSFFduuR7vvgw" name="testGetUserName" isLeaf="true" method="_dXKywC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRXBQC_9EeSFFduuR7vvgw" name="testSetUserName" isLeaf="true" method="_dXLZ0C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cReWAC_9EeSFFduuR7vvgw" name="testInit" isLeaf="true" method="_dXMA4C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRhZUC_9EeSFFduuR7vvgw" name="testGetAssignment" isLeaf="true" method="_dXMA4S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRkcoC_9EeSFFduuR7vvgw" name="testSetAssignment" isLeaf="true" method="_dXN2EC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRnf8C_9EeSFFduuR7vvgw" name="testGetKey" isLeaf="true" method="_dXOdIC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRp8Mi_9EeSFFduuR7vvgw" name="testSetKey" isLeaf="true" method="_dXPEMC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRtmkC_9EeSFFduuR7vvgw" name="testGetServerURL" isLeaf="true" method="_dXPrQC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRwC0C_9EeSFFduuR7vvgw" name="testSetServerURL" isLeaf="true" method="_dXPrQS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cRyfEC_9EeSFFduuR7vvgw" name="testGetVisualizer" isLeaf="true" method="_dXQSUC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR0UQS_9EeSFFduuR7vvgw" name="testSetVisualizer" isLeaf="true" method="_dXQ5YC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR2wgS_9EeSFFduuR7vvgw" name="testUpdate" isLeaf="true" method="_dXRgcC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR5z0C_9EeSFFduuR7vvgw" name="testComplete" isLeaf="true" method="_dXRgcS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR8QEC_9EeSFFduuR7vvgw" name="testTrimComma" isLeaf="true" method="_dXSHgC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR-FQi_9EeSFFduuR7vvgw" name="testQuote" isLeaf="true" method="_dXSukC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cR_6ci_9EeSFFduuR7vvgw" name="testUnquote" isLeaf="true" method="_dXSukS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSC9wC_9EeSFFduuR7vvgw" name="testSorted_values" isLeaf="true" method="_dXTVoC_9EeSFFduuR7vvgw" raisedException="_cXHD8C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSGBEC_9EeSFFduuR7vvgw" name="testSorted_entries" isLeaf="true" method="_dXT8sC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSH2Qi_9EeSFFduuR7vvgw" name="testGetAssociationsFollowerInt" isLeaf="true" method="_dXUjwC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSJrci_9EeSFFduuR7vvgw" name="testGetAssociationsActorInt" isLeaf="true" method="_dXVx4C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSLgoS_9EeSFFduuR7vvgw" name="testGetAssociationsMovieInt" isLeaf="true" method="_dXXnEC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSNV0i_9EeSFFduuR7vvgw" name="testFollowers" isLeaf="true" method="_dXY1MC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSQZIC_9EeSFFduuR7vvgw" name="testGetTwitterTimeline" isLeaf="true" raisedException="_cXHD8C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSUqkC_9EeSFFduuR7vvgw" name="testMovies" isLeaf="true" method="_dXaDUC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSZjEC_9EeSFFduuR7vvgw" name="testActors" isLeaf="true" method="_dXeUwC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cSb_UC_9EeSFFduuR7vvgw" name="testGetEdgeWeight" isLeaf="true" method="_dXfi4C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cSqo0C_9EeSFFduuR7vvgw" name="DLListEdge">
              <generalization xmi:id="_dH8rAC_9EeSFFduuR7vvgw" general="_cJnagC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dQ8O8C_9EeSFFduuR7vvgw" name="prevNode" type="_cS7HgC_9EeSFFduuR7vvgw" association="_deI9cS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcHkMC_9EeSFFduuR7vvgw" name="nextNode" type="_cS7HgC_9EeSFFduuR7vvgw" association="_dfNUcC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXp68C_9EeSFFduuR7vvgw" name="DLListEdge" specification="_dH6OwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXp68S_9EeSFFduuR7vvgw" name="prev" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXp68i_9EeSFFduuR7vvgw" name="next" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXp68y_9EeSFFduuR7vvgw" type="_cSqo0C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(prev, next, &quot;&quot;);
		
		//setting the connections for this edge to the next and previous Nodes
		//o&lt;-[]  o
		this.prevNode = prev;

		//o&lt;-[]->o
		this.nextNode = next;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXqiAC_9EeSFFduuR7vvgw" name="getNextNode" specification="_cSvhUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXqiAS_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return this.nextNode;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXrJEC_9EeSFFduuR7vvgw" name="setNextNode" specification="_dH8D8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXrJES_9EeSFFduuR7vvgw" name="nextNode" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>this.nextNode = nextNode;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cSvhUC_9EeSFFduuR7vvgw" name="getNextNode" method="_dXqiAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcKAcC_9EeSFFduuR7vvgw">
                  <body>Returns the next Node in the list.
	 * 
	 * @return The next Node in the list.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dH7c4C_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dH6OwC_9EeSFFduuR7vvgw" name="DLListEdge" method="_dXp68C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dH610C_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dH610S_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcJZYC_9EeSFFduuR7vvgw">
                  <body>The constructor for an Edge in a Doubly Linked List. Connects the Edge to the two passed Nodes.
	 * 
	 * @param prev The previous Node in the list.
	 * @param next The next Node in the list.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dH6OwS_9EeSFFduuR7vvgw" name="prev" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dH6Owi_9EeSFFduuR7vvgw" name="next" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dH610i_9EeSFFduuR7vvgw" type="_cSqo0C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dH8D8C_9EeSFFduuR7vvgw" name="setNextNode" method="_dXrJEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcKAcS_9EeSFFduuR7vvgw">
                  <body>Sets the next Node in the list.
	 * 
	 * @param nextNode The next Node in the list.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dH8D8S_9EeSFFduuR7vvgw" name="nextNode" type="_cS7HgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cS7HgC_9EeSFFduuR7vvgw" name="DLListNode">
              <ownedComment xmi:id="_dcLOkC_9EeSFFduuR7vvgw">
                <body>The Node class for a Doubly Linked List. Automates the process for creating the 'Edge objects' between 
the Nodes since that is not typically done in data structures. The Edges are still able to be accessed 
to change their properties.</body>
              </ownedComment>
              <generalization xmi:id="_dICxoS_9EeSFFduuR7vvgw" general="_cLFaIC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRC8oC_9EeSFFduuR7vvgw" name="nextEdge" visibility="private" type="_cSqo0C_9EeSFFduuR7vvgw" association="_deLZsS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcLOkS_9EeSFFduuR7vvgw" name="prevEdge" visibility="private" type="_cSqo0C_9EeSFFduuR7vvgw" association="_dfN7gS_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXwBkC_9EeSFFduuR7vvgw" name="DLListNode" specification="_dH-gMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXwBkS_9EeSFFduuR7vvgw" name="ident">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXwBki_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dXwBky_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(ident);
		graph.vertices.put(ident, this);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXxPsC_9EeSFFduuR7vvgw" name="setNext" specification="_dH_uUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXxPsS_9EeSFFduuR7vvgw" name="next" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(this == null || next == null){
			throw new Exception(&quot;Next not set, one or more Nodes were NULL.&quot;);
		}
		//o  []  o
		if(this.nextEdge == null &amp;&amp; next.prevEdge == null){
			//o&lt;- [] ->o
			// ->
			this.nextEdge = new DLListEdge(this, next);
			//o   [] &lt;-o
			//       ->
		}else if(this.nextEdge == null){
			//o-> [] &lt;-o
			//       ->
			this.nextEdge = next.prevEdge;
		}else{//TODO Handle if both have an Edge but aren't connected to each other.
			if(this.nextEdge != null &amp;&amp; next.prevEdge != null){
				next.prevEdge = null;
			}
			//o&lt;-[]->o
			// ->
			this.nextEdge.setNextNode(next);
		}		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXx2wC_9EeSFFduuR7vvgw" name="getNext" specification="_cS-x4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXx2wS_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(this.nextEdge == null){
			return null;
		}else
			return this.nextEdge.getNextNode();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXyd0C_9EeSFFduuR7vvgw" name="setPrev" specification="_dIBjgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXyd0S_9EeSFFduuR7vvgw" name="prev" type="_cS7HgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(this == null || prev == null){
			throw new Exception(&quot;Previous not set, one or more Nodes were NULL.&quot;);
		}
		//o  []  o
		if(this.prevEdge == null &amp;&amp; prev.nextEdge == null){
			//o&lt;-[]->o
			//     &lt;-
			this.prevEdge = new DLListEdge(prev, this);
		}
		//o->[]  o
		// &lt;-
		else if(this.prevEdge == null){
			//o->[]&lt;-o
			// &lt;-  
			this.prevEdge = prev.nextEdge;
			//o  []&lt;-o
			//     ->
		}else{//TODO Handle if both have an Edge but aren't connected to each other.
			if(this.prevEdge != null &amp;&amp; prev.nextEdge != null){
				prev.nextEdge = null;
			}
			//o  []&lt;-o
			// &lt;-  ->
			this.prevEdge.setPrevNode(prev);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dXzr8C_9EeSFFduuR7vvgw" name="getPrev" specification="_cTB1MC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dXzr8S_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(this.prevEdge == null){
			return null;
		}else
			return this.prevEdge.getPrevNode();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cS-x4C_9EeSFFduuR7vvgw" name="getNext" method="_dXx2wC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcNDwi_9EeSFFduuR7vvgw">
                  <body>Returns the next Node in the List.
	 * 
	 * @return The next Node in the Doubly Linked List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIA8cC_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cTB1MC_9EeSFFduuR7vvgw" name="getPrev" method="_dXzr8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcNq0S_9EeSFFduuR7vvgw">
                  <body>Returns the previous Node in the List.
	 * 
	 * @return The previous Node in the Doubly Linked List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dICxoC_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dH-gMC_9EeSFFduuR7vvgw" name="DLListNode" method="_dXwBkC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dH_HQi_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dH_HQy_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcNDwC_9EeSFFduuR7vvgw">
                  <body>Constructor for a Doubly Linked List Node.
	 * 
	 * @param ident The identifier of the Node.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dH_HQC_9EeSFFduuR7vvgw" name="ident">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dH_HQS_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dH_HRC_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dH_uUC_9EeSFFduuR7vvgw" name="setNext" method="_dXxPsC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcNDwS_9EeSFFduuR7vvgw">
                  <body>Creates an Edge between the two Nodes if one doesn't exist, otherwise it utilizes a pre-existing Edge.
	 * 
	 * @param next The next Node in the Doubly Linked List.
	 * @throws Exception Verifies the Nodes aren't NULL.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIAVYC_9EeSFFduuR7vvgw" name="next" type="_cS7HgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dIBjgC_9EeSFFduuR7vvgw" name="setPrev" method="_dXyd0C_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcNq0C_9EeSFFduuR7vvgw">
                  <body>Creates an edge between the two Nodes if one doesn't exist, otherwise it utilizes a pre-existing edge.
	 * 
	 * @param prev The previous Node in the Double Linked List.
	 * @throws Exception Verifies the Nodes aren't NULL.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIBjgS_9EeSFFduuR7vvgw" name="prev" type="_cS7HgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cTP3oC_9EeSFFduuR7vvgw" clientDependency="_dINwwC_9EeSFFduuR7vvgw" name="DijkstraVertex">
              <ownedAttribute xmi:id="_dRFY4C_9EeSFFduuR7vvgw" name="curr" visibility="protected" type="_cYBC4C_9EeSFFduuR7vvgw" association="_deN18C_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRGnAC_9EeSFFduuR7vvgw" name="allChildren" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <qualifier xmi:id="_dRH1IC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dINwwC_9EeSFFduuR7vvgw" client="_cTP3oC_9EeSFFduuR7vvgw" supplier="_cVFDoC_9EeSFFduuR7vvgw" contract="_cVFDoC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX1hIC_9EeSFFduuR7vvgw" name="DijkstraVertex" specification="_cTVXMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX1hIS_9EeSFFduuR7vvgw" type="_cTP3oC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>curr=null;
		allChildren=null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX1hIi_9EeSFFduuR7vvgw" name="DijkstraVertex" specification="_dIQNAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX2IMC_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX2IMS_9EeSFFduuR7vvgw" type="_cTP3oC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.curr=curr;
		for (int i=0;i&lt;curr.outgoing.size();i++)
			allChildren(curr.outgoing.);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX2IMi_9EeSFFduuR7vvgw" name="getCurr" specification="_cTYagC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX2vQC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return curr;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX3WUC_9EeSFFduuR7vvgw" name="setCurr" specification="_dISCMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX3WUS_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX3WUi_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return this.curr=curr;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX39YC_9EeSFFduuR7vvgw" name="setVisited" specification="_dITQUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX39YS_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX39Yi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (aVertex!=null &amp;&amp; !allChildren.containsKey(aVertex))
			allChildren.put(aVertex, 1);
		else{
			allChildren.remove(aVertex);
			return allChildren.put(aVertex,0);
		}
		return allChildren.entrySet().(aVertex).
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX4kcC_9EeSFFduuR7vvgw" name="getUnVisited" specification="_cTd6EC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX4kcS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return ;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cTVXMC_9EeSFFduuR7vvgw" name="DijkstraVertex" method="_dX1hIC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cTV-QC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cTV-QS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cTV-Qi_9EeSFFduuR7vvgw" type="_cTP3oC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cTYagC_9EeSFFduuR7vvgw" name="getCurr" method="_dX2IMi_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dIRbIC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cTd6EC_9EeSFFduuR7vvgw" name="getUnVisited" method="_dX4kcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cTfIMC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dIQNAC_9EeSFFduuR7vvgw" name="DijkstraVertex" method="_dX1hIi_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dIQ0ES_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dIQ0Ei_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dIQ0EC_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dIQ0Ey_9EeSFFduuR7vvgw" type="_cTP3oC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dISCMC_9EeSFFduuR7vvgw" name="setCurr" method="_dX3WUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dISCMS_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dISpQC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dITQUC_9EeSFFduuR7vvgw" name="setVisited" method="_dX39YC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dITQUS_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dITQUi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cTrVcC_9EeSFFduuR7vvgw" name="Edge">
              <ownedComment xmi:id="_dcO48C_9EeSFFduuR7vvgw">
                <body>Generic graph link, with visual components.</body>
              </ownedComment>
              <generalization xmi:id="_dIZW8C_9EeSFFduuR7vvgw" general="_cJnagC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX7nwC_9EeSFFduuR7vvgw" name="Edge" specification="_dNq4gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX7nwS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX7nwi_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX7nwy_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX7nxC_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(source, destination, identifier);
		
		if(source == null || destination == null){
			throw new IllegalArgumentException(&quot;Source and Destination nodes cannot be NULL.&quot;);
		}
		//automates the connection process
		//creates both connections   O  ->  O
		//							    &lt;-
		
		//Maybe put a check making sure the source and destination exist?		
		eOutgoing = new ArrayList&lt;>();//each edge gets a list (of 2) connected vertices
		//creates outgoing links from the associated vertices to the 'Edge'
		//Adds the this edge to the lists associated with the two connecting vertices
		source.outgoing.add(this);
		destination.outgoing.add(this);
		//creates outgoing links from the 'Edge' to the associated Vertices
		//Adds the destination and the source to the list of vertices connected to the edge
		this.eOutgoing.add(source);
		this.eOutgoing.add(destination);		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX814C_9EeSFFduuR7vvgw" name="Edge" specification="_dNvxAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX814S_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX814i_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX814y_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX815C_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX815S_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//calls base Edge constructor, for clarity sake, instead of doing the same instructions again
		this(source, destination, identifier);
		this.setWeight(weight);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX9c8C_9EeSFFduuR7vvgw" name="Edge" specification="_dN0pgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX9c8S_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX9c8i_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX9c8y_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dX9c9C_9EeSFFduuR7vvgw" name="randWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX9c9S_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//calls base Edge constructor, for clarity sake, instead of doing the same instructions again
		this(source, destination, identifier);
		this.setWeight(source, destination, randWeight);

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX-EAC_9EeSFFduuR7vvgw" name="setColor" specification="_cT5-8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX-EAS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX-EAi_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setColor(color);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX-rEC_9EeSFFduuR7vvgw" name="setWidth" specification="_cUB6wC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX-rES_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX-rEi_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setWidth(pixels);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dX_SIC_9EeSFFduuR7vvgw" name="setOpacity" specification="_cUIBYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dX_SIS_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX_SIi_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setOpacity(opacity);
		return this;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cT5-8C_9EeSFFduuR7vvgw" name="setColor" method="_dX-EAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cT6mAC_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dIYI0C_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cUB6wC_9EeSFFduuR7vvgw" name="setWidth" method="_dX-rEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cUCh0C_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dIYv4C_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cUIBYC_9EeSFFduuR7vvgw" name="setOpacity" method="_dX_SIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cUIocC_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dIYv4S_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNq4gC_9EeSFFduuR7vvgw" name="Edge" method="_dX7nwC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dNrfki_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNsGoC_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcPgAC_9EeSFFduuR7vvgw">
                  <body>Takes two vertices and creates and edge between them.
	 * 
	 * @param source The source vertex.
	 * @param destination The destination vertex.
	 * @param identifier The name of the Edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNq4gS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNrfkC_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNrfkS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNsGoS_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dNvxAC_9EeSFFduuR7vvgw" name="Edge" method="_dX814C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dNwYEy_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dNw_IC_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcPgAS_9EeSFFduuR7vvgw">
                  <body>Takes two vertices and creates and edge between them giving the Edge a weight.
	 * 
	 * @param source The source vertex.
	 * @param destination The destination vertex. 
	 * @param identifier The name of the Edge
	 * @param weight The weight(double) of the Edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_dNvxAS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNwYEC_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNwYES_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dNwYEi_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dNw_IS_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dN0pgC_9EeSFFduuR7vvgw" name="Edge" method="_dX9c8C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dN1Qki_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dN13oC_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcPgAi_9EeSFFduuR7vvgw">
                  <body>Takes two vertices and creates and edge between them giving the Edge a weight.
	 * 
	 * @param source The source vertex.
	 * @param destination The destination vertex. 
	 * @param identifier The name of the Edge
	 * @param weight The weight(String) of the Edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_dN0pgS_9EeSFFduuR7vvgw" name="source" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dN0pgi_9EeSFFduuR7vvgw" name="destination" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dN1QkC_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dN1QkS_9EeSFFduuR7vvgw" name="randWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dN13oS_9EeSFFduuR7vvgw" type="_cTrVcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cUf00C_9EeSFFduuR7vvgw" clientDependency="_dN468C_9EeSFFduuR7vvgw" name="Follower">
              <ownedAttribute xmi:id="_dRK4cC_9EeSFFduuR7vvgw" name="aFollower" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dN468C_9EeSFFduuR7vvgw" client="_cUf00C_9EeSFFduuR7vvgw" supplier="_dMnIkC_9EeSFFduuR7vvgw" contract="_dMnIkC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYBuYC_9EeSFFduuR7vvgw" name="Follower" specification="_cUkGQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYBuYS_9EeSFFduuR7vvgw" name="aFollower">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYBuYi_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.aFollower=aFollower;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYCVcC_9EeSFFduuR7vvgw" name="getName" specification="_cUmigC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYCVcS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return aFollower;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYC8gC_9EeSFFduuR7vvgw" name="compareTo" specification="_dIePcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYC8gS_9EeSFFduuR7vvgw" name="anotherFollower" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYC8gi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return aFollower.compareTo(anotherFollower.getName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYC8gy_9EeSFFduuR7vvgw" name="toString" specification="_cUo-wC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYC8hC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return aFollower;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYDjkC_9EeSFFduuR7vvgw" name="hashCode" specification="_cUqM4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYDjkS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((aFollower == null) ? 0 : aFollower.hashCode());
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYEKoC_9EeSFFduuR7vvgw" name="equals" specification="_dN7XMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYEKoS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYEKoi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Follower other = (Follower) obj;
		if (aFollower == null) {
			if (other.aFollower != null)
				return false;
		} else if (!aFollower.equals(other.aFollower))
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cUkGQC_9EeSFFduuR7vvgw" name="Follower" method="_dYBuYC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cUlUYC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cUlUYS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cUktUC_9EeSFFduuR7vvgw" name="aFollower">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cUlUYi_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cUmigC_9EeSFFduuR7vvgw" name="getName" method="_dYCVcC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcQuIC_9EeSFFduuR7vvgw">
                  <body>This method returns the string name</body>
                </ownedComment>
                <ownedParameter xmi:id="_cUnJkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cUo-wC_9EeSFFduuR7vvgw" name="toString" method="_dYC8gy_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcQuIi_9EeSFFduuR7vvgw">
                  <body>This method returns the string value</body>
                </ownedComment>
                <ownedParameter xmi:id="_cUpl0C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cUqM4C_9EeSFFduuR7vvgw" name="hashCode" method="_dYDjkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cUrbAC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dIePcC_9EeSFFduuR7vvgw" name="compareTo" method="_dYC8gC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcQuIS_9EeSFFduuR7vvgw">
                  <body>This method implements compareTo for the Follower</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIePcS_9EeSFFduuR7vvgw" name="anotherFollower" type="_cUf00C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dIe2gC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dN7XMC_9EeSFFduuR7vvgw" name="equals" method="_dYEKoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dN7XMS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dN8lUC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cU1zEC_9EeSFFduuR7vvgw" name="GraphVisualizer">
              <ownedComment xmi:id="_dcRVMC_9EeSFFduuR7vvgw">
                <body>Object Oriented Graph Visualizer

intended to be used like:
&lt;tt>
OOVisual v = new OOVisual();&lt;br>
v.add(&quot;actor/Tom Hanks&quot;);&lt;br>
v.get(&quot;actor/Tom Hanks).setColor(&quot;green&quot;);&lt;br>
Node n = v.get(&quot;actor/Tom Hanks&quot;);&lt;br>
n.setColor(&quot;blue&quot;);&lt;br>
n.setSize(8.0);&lt;br>
n.connect(&quot;movie/Big&quot;).setDashArray(&quot;5,5,5&quot;);&lt;br>
Link n = n.get(&quot;movie/Big&quot;).setWidth(&quot;5,5,5&quot;);&lt;br>
v.has(&quot;actor/Thorin Oakinshield&quot;);&lt;br></body>
              </ownedComment>
              <generalization xmi:id="_dIhSwC_9EeSFFduuR7vvgw" general="_cZSOMC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dROi0C_9EeSFFduuR7vvgw" name="vertices" type="_cLFaIC_9EeSFFduuR7vvgw" association="_deQSMC_9EeSFFduuR7vvgw">
                <qualifier xmi:id="_dRQ_EC_9EeSFFduuR7vvgw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRPw8S_9EeSFFduuR7vvgw" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYGm4C_9EeSFFduuR7vvgw" name="getRepresentation" specification="_cU5dcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYGm4S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder nodes = new StringBuilder();
		StringBuilder links = new StringBuilder();
		Map&lt;AbstractVertex&lt;T>, Integer> vertex_to_index = new HashMap&lt;>();
		
		int i=0;
		for (AbstractVertex&lt;T> v : Bridge.sorted_values(vertices)) {
			// Manage vertex properties
			// Encapsulate in {}, and remove the trailing comma.
			nodes.append(v.getRepresentation() + &quot;,&quot;);
			vertex_to_index.put(v, i);
			i++;
		}
		
		// You have to finish all the vertices before you can start any of the edges
		//  because otherwise you might meet a vertex without an index
		for (AbstractVertex&lt;T> v : Bridge.sorted_values(vertices)) {
			// Manage link properties
			Collections.sort(v.outgoing);
			for (AbstractEdge&lt;T> e : v.outgoing) {
				// Encapsulate in {}, and remove the trailing comma.
				links.append(e.getRepresentation(vertex_to_index) + &quot;,&quot;);
			}
		}
		return &quot;{&quot;
				+ &quot;\&quot;name\&quot;: \&quot;edu.uncc.cs.bridges\&quot;,&quot;
				+ &quot;\&quot;version\&quot;: \&quot;0.4.0\&quot;,&quot;
				+ &quot;\&quot;visual\&quot;: \&quot;graph\&quot;,&quot;
				+ &quot;\&quot;nodes\&quot;: [&quot; + Bridge.trimComma(nodes) + &quot;],&quot;
				+ &quot;\&quot;links\&quot;: [&quot; + Bridge.trimComma(links) + &quot;]&quot;
				+ &quot;}&quot;;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cU5dcC_9EeSFFduuR7vvgw" name="getRepresentation" visibility="protected" method="_dYGm4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cU6rkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_cVFDoC_9EeSFFduuR7vvgw" name="GreedyAlgVertex">
              <ownedComment xmi:id="_dcR8QC_9EeSFFduuR7vvgw">
                <body>@author mihai
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_cVGRwC_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw" isReadOnly="true" association="_dd4ewC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_cVJVEC_9EeSFFduuR7vvgw" name="visit" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_cVHf4C_9EeSFFduuR7vvgw" name="setVisit">
                <ownedParameter xmi:id="_cVIG8C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dIjH8C_9EeSFFduuR7vvgw" name="setCurr">
                <ownedParameter xmi:id="_dIjH8S_9EeSFFduuR7vvgw" name="curr" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dIjvAC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cVWJYC_9EeSFFduuR7vvgw" name="InvalidValueException">
              <ownedComment xmi:id="_dcR8QS_9EeSFFduuR7vvgw">
                <body>Exception indicating invalid CSS values.
Examples of uses for this include sizes with invalid units, and invalid
colors.
@author Sean Gallagher
 *</body>
              </ownedComment>
              <generalization xmi:id="_dOAPsS_9EeSFFduuR7vvgw" general="_dN_BkC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRS0QC_9EeSFFduuR7vvgw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRS0QS_9EeSFFduuR7vvgw" value="8664177180092591999L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYH1AC_9EeSFFduuR7vvgw" name="InvalidValueException" specification="_cVX-kC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYH1AS_9EeSFFduuR7vvgw" name="message">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYH1Ai_9EeSFFduuR7vvgw" type="_cVWJYC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(message);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cVX-kC_9EeSFFduuR7vvgw" name="InvalidValueException" method="_dYH1AC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cVZMsC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cVZMsS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cVYloC_9EeSFFduuR7vvgw" name="message">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cVZMsi_9EeSFFduuR7vvgw" type="_cVWJYC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cVc3EC_9EeSFFduuR7vvgw" name="Link">
              <ownedComment xmi:id="_dcSjUC_9EeSFFduuR7vvgw">
                <body>A Link class 
author: Mihai Mehedint
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dRUCYC_9EeSFFduuR7vvgw" name="nodeName" type="_dODTAC_9EeSFFduuR7vvgw" isReadOnly="true" association="_deSHYS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRVQgC_9EeSFFduuR7vvgw" name="nextNodePointer" visibility="private" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deVKsC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRXswC_9EeSFFduuR7vvgw" name="prevNodePointer" visibility="private" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deW_4C_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYJDIC_9EeSFFduuR7vvgw" name="Link" specification="_dOFvQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYJDIS_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYJDIi_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.nodeName=ident;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYJqMC_9EeSFFduuR7vvgw" name="Link" specification="_dOHkcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYJqMS_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYJqMi_9EeSFFduuR7vvgw" name="nextNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYJqMy_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this(ident);
		this.nextNodePointer=nextNodePointer;	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYK4UC_9EeSFFduuR7vvgw" name="Link" specification="_dOL14C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYK4US_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYK4Ui_9EeSFFduuR7vvgw" name="nextNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYK4Uy_9EeSFFduuR7vvgw" name="prevNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYK4VC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this(ident, nextNodePointer);
		this.prevNodePointer=prevNodePointer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYMGcC_9EeSFFduuR7vvgw" name="getNext" specification="_cVlZ8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYMGcS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return nextNodePointer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYMGci_9EeSFFduuR7vvgw" name="setNext" specification="_dImyUS_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYMGcy_9EeSFFduuR7vvgw" name="aNode" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYMtgC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return nextNodePointer=aNode;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYNUkC_9EeSFFduuR7vvgw" name="getPrev" specification="_cVprYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYNUkS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return prevNodePointer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYN7oC_9EeSFFduuR7vvgw" name="setPrev" specification="_dIrDwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYN7oS_9EeSFFduuR7vvgw" name="aNode" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYN7oi_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return prevNodePointer=aNode;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYPJwC_9EeSFFduuR7vvgw" name="setNodeName" specification="_dOQHUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYPJwS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYPJwi_9EeSFFduuR7vvgw" type="_dODTAC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return this.nodeName=aNode;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cVlZ8C_9EeSFFduuR7vvgw" name="getNext" method="_dYMGcC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcTKYC_9EeSFFduuR7vvgw">
                  <body>Returns the next Node</body>
                </ownedComment>
                <ownedParameter xmi:id="_dImyUC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cVprYC_9EeSFFduuR7vvgw" name="getPrev" method="_dYNUkC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcTxcC_9EeSFFduuR7vvgw">
                  <body>Returns the previous node</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIqcsC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dImyUS_9EeSFFduuR7vvgw" name="setNext" method="_dYMGci_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcTKYS_9EeSFFduuR7vvgw">
                  <body>Creates a link between 2 nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dInZYC_9EeSFFduuR7vvgw" name="aNode" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dIongS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dIrDwC_9EeSFFduuR7vvgw" name="setPrev" method="_dYN7oC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcTxcS_9EeSFFduuR7vvgw">
                  <body>Returns the previous node</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIrDwS_9EeSFFduuR7vvgw" name="aNode" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dIs48S_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOFvQC_9EeSFFduuR7vvgw" name="Link" visibility="package" method="_dYJDIC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dOGWUS_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dOGWUi_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcSjUS_9EeSFFduuR7vvgw">
                  <body>Constructors</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOGWUC_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOGWUy_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOHkcC_9EeSFFduuR7vvgw" name="Link" visibility="package" method="_dYJqMC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dOILgC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dOILgS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dOHkcS_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOHkci_9EeSFFduuR7vvgw" name="nextNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOILgi_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOL14C_9EeSFFduuR7vvgw" name="Link" visibility="package" method="_dYK4UC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dOMc8C_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dOMc8S_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dOL14S_9EeSFFduuR7vvgw" name="ident" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOL14i_9EeSFFduuR7vvgw" name="nextNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOL14y_9EeSFFduuR7vvgw" name="prevNodePointer" type="_cVc3EC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOMc8i_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOQHUC_9EeSFFduuR7vvgw" name="setNodeName" method="_dYPJwC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcTxci_9EeSFFduuR7vvgw">
                  <body>Sets the name of the node element</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOQHUS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOQuYC_9EeSFFduuR7vvgw" type="_dODTAC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cV_poC_9EeSFFduuR7vvgw" name="LinkedList">
              <ownedComment xmi:id="_dcTxcy_9EeSFFduuR7vvgw">
                <body>author Mihai Mehedint
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dRclQC_9EeSFFduuR7vvgw" name="list" type="_cU1zEC_9EeSFFduuR7vvgw" association="_deZcIC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRfBgC_9EeSFFduuR7vvgw" name="currPointer" visibility="private" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deaDMS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRhdwC_9EeSFFduuR7vvgw" name="listHead" visibility="private" type="_cVc3EC_9EeSFFduuR7vvgw" association="_debRUS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRjS8C_9EeSFFduuR7vvgw" name="listTail" visibility="private" type="_cVc3EC_9EeSFFduuR7vvgw" association="_decfcS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRlIIS_9EeSFFduuR7vvgw" name="size" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dRmWQC_9EeSFFduuR7vvgw" name="ident" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYQ-8C_9EeSFFduuR7vvgw" name="LinkedList" specification="_cWG-YC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYQ-8S_9EeSFFduuR7vvgw" type="_cV_poC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>currPointer=listHead=listTail=new Link(null);
		list= new GraphVisualizer&lt;>();
		
		size=0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYSNEC_9EeSFFduuR7vvgw" name="currPos" specification="_cWIMgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYSNES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int aPosition;
		Link&lt;E> aNode=listHead;
		for (aPosition=0;currPointer!=aNode;aPosition++){
			aNode=aNode.getNext();
		}
		return aPosition;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYS0IC_9EeSFFduuR7vvgw" name="moveToBegining" specification="_cWJaoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYS0IS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return currPointer=listHead;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYS0Ii_9EeSFFduuR7vvgw" name="moveToEnd" specification="_cWNFAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYS0Iy_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return currPointer=listTail;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYTbMC_9EeSFFduuR7vvgw" name="length" specification="_cWQIUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYTbMS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return size;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYUCQC_9EeSFFduuR7vvgw" name="clearList" specification="_cWRWcC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>listHead=currPointer=listTail=null;
		size=0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYUpUC_9EeSFFduuR7vvgw" name="insert" specification="_dOTKoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYUpUS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYUpUi_9EeSFFduuR7vvgw" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>moveToPos(position-1);  //moves current pointer to the position
		Link&lt;E> node=new Link(new Vertex(aNode.toString(),list));
		
		
		if(currPointer==null)
			listHead=listTail=currPointer=node;
		else if (currPointer==listHead &amp;&amp; currPointer==listTail)
				currPointer.setNext(node);
		else{
			node.setPrev(currPointer);
			node.setNext(currPointer.getNext());
			
			currPointer.getNext().setPrev(node);
			currPointer.setNext(node);
			setEdge(currPointer.getNodeName(), currPointer.getNext().getNodeName());
			//setEdge(currPointer.getNext().getNodeName(), currPointer.getNext().getNext().getNodeName());
			
		}
		size++;	
		//setEdge(currPointer.getNodeName(), currPointer.getNext().getNodeName());
		//setEdge(currPointer.getNext().getNodeName(), currPointer.getNext().getNext().getNodeName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYVQYC_9EeSFFduuR7vvgw" name="append" specification="_dOUYwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYVQYS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>Link&lt;E> node=new Link(new Vertex(aNode.toString(),list));
		listTail.setNext(new Link(aNode));
		currPointer=listTail;
		listTail=next();
		size++;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYV3cC_9EeSFFduuR7vvgw" name="remove" specification="_cWVA0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYV3cS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (currPointer.getNext()==null)
			return currPointer=null;
		if (listTail==currPointer.getNext())
			listTail=currPointer;
		else
			
		
		size--;
		return currPointer.setNext(currPointer.getNext().getNext());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYWegC_9EeSFFduuR7vvgw" name="prev" specification="_cWYEIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYWegS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (currPointer==listHead) return null;
		Link aNode=listHead;
		while(aNode.getNext()!=currPointer){
			aNode=aNode.getNext();
		}
		return currPointer=aNode;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYWegi_9EeSFFduuR7vvgw" name="next" specification="_cWZ5UC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYWegy_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (currPointer==listTail)
			return null;
		else
			return currPointer=currPointer.getNext();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYXFkC_9EeSFFduuR7vvgw" name="moveToPos" specification="_cWmGkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYXFkS_9EeSFFduuR7vvgw" name="aPosition">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if(aPosition&lt;=0 &amp;&amp; aPosition>size){
			System.out.println(&quot;The position requested is out of the range of the list.&quot;);
		}
		currPointer=listHead;
		for (int i=0;i&lt;aPosition;i++)
			currPointer=currPointer.getNext();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYXsoC_9EeSFFduuR7vvgw" name="getNodeValue" specification="_cWnUsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYXsoS_9EeSFFduuR7vvgw" type="_dODTAC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (currPointer.getNext()==null){
			return null;
		}
		else 
			return currPointer.getNext().getNodeName();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYtD0C_9EeSFFduuR7vvgw" name="setEdge" specification="_dOWN8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYtD0S_9EeSFFduuR7vvgw" name="source" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYtD0i_9EeSFFduuR7vvgw" name="destination" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>((Vertex) source).createEdge((Vertex) destination);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cWG-YC_9EeSFFduuR7vvgw" name="LinkedList" method="_dYQ-8C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cWHlcC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cWHlcS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcU_kC_9EeSFFduuR7vvgw">
                  <body>constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_cWHlci_9EeSFFduuR7vvgw" type="_cV_poC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWIMgC_9EeSFFduuR7vvgw" name="currPos" method="_dYSNEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcU_kS_9EeSFFduuR7vvgw">
                  <body>Returns the current position as an integer value</body>
                </ownedComment>
                <ownedParameter xmi:id="_cWIzkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cWJaoC_9EeSFFduuR7vvgw" name="moveToBegining" method="_dYS0IC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcU_ki_9EeSFFduuR7vvgw">
                  <body>Returns the head pointer</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIy_kC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWNFAC_9EeSFFduuR7vvgw" name="moveToEnd" method="_dYS0Ii_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcVmoC_9EeSFFduuR7vvgw">
                  <body>Returns the tail pointer
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIy_kS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWQIUC_9EeSFFduuR7vvgw" name="length" method="_dYTbMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcVmoS_9EeSFFduuR7vvgw">
                  <body>Returns the size of the list</body>
                </ownedComment>
                <ownedParameter xmi:id="_cWQvYC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cWRWcC_9EeSFFduuR7vvgw" name="clearList" method="_dYUCQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcVmoi_9EeSFFduuR7vvgw">
                  <body>Clears the list</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_cWVA0C_9EeSFFduuR7vvgw" name="remove" method="_dYV3cC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcWNsS_9EeSFFduuR7vvgw">
                  <body>Removes the a node and decrements the length variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_dIzmoC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWYEIC_9EeSFFduuR7vvgw" name="prev" method="_dYWegC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcWNsi_9EeSFFduuR7vvgw">
                  <body>This method provides the moves the current pointer to the previous node
	 * in a singly linked list
	 * @see edu.uncc.cs.bridges.Link#prev()</body>
                </ownedComment>
                <ownedParameter xmi:id="_dI0NsC_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWZ5UC_9EeSFFduuR7vvgw" name="next" method="_dYWegi_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcWNsy_9EeSFFduuR7vvgw">
                  <body>This method returns the next node in the list
	 * @see edu.uncc.cs.bridges.Link#next()</body>
                </ownedComment>
                <ownedParameter xmi:id="_dI0NsS_9EeSFFduuR7vvgw" type="_cVc3EC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cWmGkC_9EeSFFduuR7vvgw" name="moveToPos" method="_dYXFkC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcW0wC_9EeSFFduuR7vvgw">
                  <body>The moveToPos method moves the pointer to the a designated position</body>
                </ownedComment>
                <ownedParameter xmi:id="_cWmtoC_9EeSFFduuR7vvgw" name="aPosition">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cWnUsC_9EeSFFduuR7vvgw" name="getNodeValue" method="_dYXsoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcW0wS_9EeSFFduuR7vvgw">
                  <body>This method returns the node value</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOVm4C_9EeSFFduuR7vvgw" type="_dODTAC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOTKoC_9EeSFFduuR7vvgw" name="insert" method="_dYUpUC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcVmoy_9EeSFFduuR7vvgw">
                  <body>Inserts a node into the list and increments the length of the list</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOTKoS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOTKoi_9EeSFFduuR7vvgw" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOUYwC_9EeSFFduuR7vvgw" name="append" method="_dYVQYC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcWNsC_9EeSFFduuR7vvgw">
                  <body>Appends a node to the list and increments the length variable</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOUYwS_9EeSFFduuR7vvgw" name="aNode" type="_dODTAC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOWN8C_9EeSFFduuR7vvgw" name="setEdge" visibility="private" method="_dYtD0C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcW0wi_9EeSFFduuR7vvgw">
                  <body>This method is setting default edges between nodes
	 * without the possibility of changing any parameters</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOW1AC_9EeSFFduuR7vvgw" name="source" type="_dODTAC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOW1AS_9EeSFFduuR7vvgw" name="destination" type="_dODTAC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cW8r4C_9EeSFFduuR7vvgw" name="Movie">
              <ownedAttribute xmi:id="_dRr10C_9EeSFFduuR7vvgw" name="aMovie" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYwuMC_9EeSFFduuR7vvgw" name="Movie" specification="_cXAWQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYxVQC_9EeSFFduuR7vvgw" name="aMovie">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYxVQS_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.aMovie=aMovie;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYx8UC_9EeSFFduuR7vvgw" name="getName" specification="_cXBkYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYx8US_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return aMovie;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYx8Ui_9EeSFFduuR7vvgw" name="compareTo" specification="_dI6UUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYyjYC_9EeSFFduuR7vvgw" name="anotherMovie" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dYyjYS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return aMovie.compareTo(anotherMovie.getName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYzKcC_9EeSFFduuR7vvgw" name="toString" specification="_cXCygC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYzKcS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return aMovie;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dYzxgC_9EeSFFduuR7vvgw" name="hashCode" specification="_cXDZkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dYzxgS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return aMovie.hashCode();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY0YkC_9EeSFFduuR7vvgw" name="equals" specification="_dOYqMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY0YkS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dY0Yki_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Movie other = (Movie) obj;
		if (aMovie == null) {
			if (other.aMovie != null)
				return false;
		} else if (!aMovie.equals(other.aMovie))
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXAWQC_9EeSFFduuR7vvgw" name="Movie" method="_dYwuMC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cXA9UC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cXA9US_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cXAWQS_9EeSFFduuR7vvgw" name="aMovie">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXA9Ui_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cXBkYC_9EeSFFduuR7vvgw" name="getName" method="_dYx8UC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcXb0C_9EeSFFduuR7vvgw">
                  <body>This method returns the string name</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXBkYS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXCygC_9EeSFFduuR7vvgw" name="toString" method="_dYzKcC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcYp8C_9EeSFFduuR7vvgw">
                  <body>This method returns the string value</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXCygS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXDZkC_9EeSFFduuR7vvgw" name="hashCode" method="_dYzxgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cXEAoC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dI6UUC_9EeSFFduuR7vvgw" name="compareTo" method="_dYx8Ui_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcYC4C_9EeSFFduuR7vvgw">
                  <body>This method implements compareTo for the Movies</body>
                </ownedComment>
                <ownedParameter xmi:id="_dI6UUS_9EeSFFduuR7vvgw" name="anotherMovie" type="_cW8r4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dI6UUi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOYqMC_9EeSFFduuR7vvgw" name="equals" method="_dY0YkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dOYqMS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOZRQC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXHD8C_9EeSFFduuR7vvgw" name="RateLimitException">
              <ownedComment xmi:id="_dcYp8S_9EeSFFduuR7vvgw">
                <body>Throws exception to handle overloading the server to allow the student to stop querying the server and send in their visualizations.
This exception is expected every time the program runs to limit the amount of requests going to Twitter etc.

@author Michael
 *</body>
              </ownedComment>
              <generalization xmi:id="_dObGcC_9EeSFFduuR7vvgw" general="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dRvgMC_9EeSFFduuR7vvgw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRwHQC_9EeSFFduuR7vvgw" value="9071223926318659417L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY1msC_9EeSFFduuR7vvgw" name="RateLimitException" specification="_cXI5IC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY1msS_9EeSFFduuR7vvgw" name="string">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY1msi_9EeSFFduuR7vvgw" type="_cXHD8C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(string);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXI5IC_9EeSFFduuR7vvgw" name="RateLimitException" method="_dY1msC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cXJgMC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cXJgMS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cXI5IS_9EeSFFduuR7vvgw" name="string">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXJgMi_9EeSFFduuR7vvgw" type="_cXHD8C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXLVYC_9EeSFFduuR7vvgw" name="SampleDataGenerator">
              <ownedAttribute xmi:id="_dRwuUC_9EeSFFduuR7vvgw" name="available_friend_names" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dRxVYC_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRx8cS_9EeSFFduuR7vvgw" value="{&#xA;&#x9;&#x9;&quot;Liam&quot;, &quot;Emma&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Noah&quot;, &quot;Olivia&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Ethan&quot;, &quot;Sophia&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Mason&quot;, &quot;Ava&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Jacob&quot;, &quot;Isabella&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Jack&quot;, &quot;Mia&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Lucas&quot;, &quot;Emily&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Jackson&quot;, &quot;Charlotte&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Logan&quot;, &quot;Ella&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Aiden&quot;, &quot;Amelia&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Benjamin&quot;, &quot;Abigail&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;James&quot;, &quot;Madison&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Elijah&quot;, &quot;Lily&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;William&quot;, &quot;Avery&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Jayden&quot;, &quot;Chloe&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Oliver&quot;, &quot;Harper&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Alexander&quot;, &quot;Sofia&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Michael&quot;, &quot;Hannah&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Daniel&quot;, &quot;Addison&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Luke&quot;, &quot;Grace&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Matthew&quot;, &quot;Aubrey&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Ryan&quot;, &quot;Zoey&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Gabriel&quot;, &quot;Zoe&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Henry&quot;, &quot;Layla&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Joshua&quot;, &quot;Evelyn&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Carter&quot;, &quot;Aria&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Owen&quot;, &quot;Natalie&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Caleb&quot;, &quot;Sophie&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Nathan&quot;, &quot;Elizabeth&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Dylan&quot;, &quot;Audrey&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Isaac&quot;, &quot;Ellie&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Connor&quot;, &quot;Lucy&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Andrew&quot;, &quot;Brooklyn&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Eli&quot;, &quot;Victoria&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Wyatt&quot;, &quot;Scarlett&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Hunter&quot;, &quot;Mila&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Max&quot;, &quot;Anna&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Samuel&quot;, &quot;Lillian&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;Evan&quot;, &quot;Leah&quot;,&#x9;    &#x9;&#x9;&#xA;&#x9;&#x9;&quot;David&quot;, &quot;Riley&quot;,&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dRyjgC_9EeSFFduuR7vvgw" name="available_movie_names" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dRzKkC_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRzxoC_9EeSFFduuR7vvgw" value="{&#xA;&#x9;&#x9;&#x9;&quot;The Shawshank Redemption&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Godfather&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Godfather: Part II&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Dark Knight&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Pulp Fiction&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Good, the Bad and the Ugly&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Schindler's List&quot;,&#xA;&#x9;&#x9;&#x9;&quot;12 Angry Men&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Lord of the Rings: The Return of the King&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Fight Club&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Lord of the Rings: The Fellowship of the Ring&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Star Wars: Episode V - The Empire Strikes Back&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Inception&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Forrest Gump&quot;,&#x9;&#xA;&#x9;&#x9;&#x9;&quot;One Flew Over the Cuckoo's Nest&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Lord of the Rings: The Two Towers&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Goodfellas&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Star Wars: Episode IV - A New Hope&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Matrix&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Seven Samurai&quot;,&#xA;&#x9;&#x9;&#x9;&quot;City of God&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Se7en&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Usual Suspects&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Silence of the Lambs&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Once Upon a Time in the West&quot;,&#xA;&#x9;&#x9;&#x9;&quot;It's a Wonderful Life&quot;,&#xA;&#x9;&#x9;&#x9;&quot;L��on: The Professional&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Casablanca&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Life Is Beautiful&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Raiders of the Lost Ark&quot;,&#xA;&#x9;&#x9;&#x9;&quot;American History X&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Psycho&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Rear Window&quot;,&#xA;&#x9;&#x9;&#x9;&quot;City Lights&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Saving Private Ryan&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Spirited Away&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Intouchables&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Memento&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Modern Times&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Terminator 2: Judgment Day&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Sunset Blvd.&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Pianist&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Apocalypse Now&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Green Mile&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Departed&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Gladiator&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Back to the Future&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Alien&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Dark Knight Rises&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Django Unchained&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Prestige&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Lives of Others&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Great Dictator&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Shining&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Cinema Paradiso&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Lion King&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Paths of Glory&quot;,&#xA;&#x9;&#x9;&#x9;&quot;American Beauty&quot;,&#xA;&#x9;&#x9;&#x9;&quot;WALL��E&quot;,&#xA;&#x9;&#x9;&#x9;&quot;North by Northwest&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Am��lie&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Citizen Kane&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Aliens&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Vertigo&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Toy Story 3&quot;,&#xA;&#x9;&#x9;&#x9;&quot;M&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Das Boot&quot;,&#xA;&#x9;&#x9;&#x9;&quot;A Clockwork Orange&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Taxi Driver&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Oldboy&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Double Indemnity&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Princess Mononoke&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Reservoir Dogs&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Star Wars: Episode VI - Return of the Jedi&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Once Upon a Time in America&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Requiem for a Dream&quot;,&#xA;&#x9;&#x9;&#x9;&quot;To Kill a Mockingbird&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Braveheart&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Grave of the Fireflies&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Lawrence of Arabia&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Eternal Sunshine of the Spotless Mind&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Witness for the Prosecution&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Full Metal Jacket&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Singin' in the Rain&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Sting&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Bicycle Thieves&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Monty Python and the Holy Grail&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Amadeus&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Snatch.&quot;,&#xA;&#x9;&#x9;&#x9;&quot;All About Eve&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Rashomon&quot;,&#xA;&#x9;&#x9;&#x9;&quot;L.A. Confidential&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Apartment&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Treasure of the Sierra Madre&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Some Like It Hot&quot;,&#xA;&#x9;&#x9;&#x9;&quot;For a Few Dollars More&quot;,&#xA;&#x9;&#x9;&#x9;&quot;The Third Man&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Indiana Jones and the Last Crusade&quot;,&#xA;&#x9;&#x9;&#x9;&quot;Inglourious Basterds&quot;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dR0YsC_9EeSFFduuR7vvgw" name="available_actor_names" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dR0_wC_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR0_wi_9EeSFFduuR7vvgw" value="{&#xA;&#x9;&#x9;&quot;Jack Nicholson&quot;,&#xA;&#x9;&#x9;&quot;Ralph Fiennes&quot;,&#xA;&#x9;&#x9;&quot;Daniel Day-Lewis&quot;,&#xA;&#x9;&#x9;&quot;Robert De Niro&quot;,&#xA;&#x9;&#x9;&quot;Al Pacino&quot;,&#xA;&#x9;&#x9;&quot;Dustin Hoffman&quot;,&#xA;&#x9;&#x9;&quot;Tom Hanks&quot;,&#xA;&#x9;&#x9;&quot;Brad Pitt&quot;,&#xA;&#x9;&#x9;&quot;Anthony Hopkins&quot;,&#xA;&#x9;&#x9;&quot;Marlon Brando&quot;,&#xA;&#x9;&#x9;&quot;Jeremy Irons&quot;,&#xA;&#x9;&#x9;&quot;Denzel Washington&quot;,&#xA;&#x9;&#x9;&quot;Gene Hackman&quot;,&#xA;&#x9;&#x9;&quot;Jeff Bridges&quot;,&#xA;&#x9;&#x9;&quot;Tim Robbins&quot;,&#xA;&#x9;&#x9;&quot;Henry Fonda&quot;,&#xA;&#x9;&#x9;&quot;William Hurt&quot;,&#xA;&#x9;&#x9;&quot;Kevin Costner&quot;,&#xA;&#x9;&#x9;&quot;Clint Eastwood&quot;,&#xA;&#x9;&#x9;&quot;Leonardo DiCaprio&quot;,&#xA;&#x9;&#x9;&quot;Mel Gibson&quot;,&#xA;&#x9;&#x9;&quot;Robert Duvall&quot;,&#xA;&#x9;&#x9;&quot;Samuel L. Jackson&quot;,&#xA;&#x9;&#x9;&quot;Tommy Lee Jones&quot;,&#xA;&#x9;&#x9;&quot;Kevin Spacey&quot;,&#xA;&#x9;&#x9;&quot;Nicolas Cage&quot;,&#xA;&#x9;&#x9;&quot;Kevin Kline&quot;,&#xA;&#x9;&#x9;&quot;Morgan Freeman&quot;,&#xA;&#x9;&#x9;&quot;Michael Caine&quot;,&#xA;&#x9;&#x9;&quot;Russell Crowe&quot;,&#xA;&#x9;&#x9;&quot;Bruce Willis&quot;,&#xA;&#x9;&#x9;&quot;Johnny Depp&quot;,&#xA;&#x9;&#x9;&quot;Ben Kingsley&quot;,&#xA;&#x9;&#x9;&quot;Steve McQueen&quot;,&#xA;&#x9;&#x9;&quot;Tom Cruise&quot;,&#xA;&#x9;&#x9;&quot;Heath Ledger&quot;,&#xA;&#x9;&#x9;&quot;Philip Seymour Hoffman&quot;,&#xA;&#x9;&#x9;&quot;John Malkovich&quot;,&#xA;&#x9;&#x9;&quot;Christian Bale&quot;,&#xA;&#x9;&#x9;&quot;Richard Dreyfuss&quot;,&#xA;&#x9;&#x9;&quot;Jason Robards&quot;,&#xA;&#x9;&#x9;&quot;Colin Firth&quot;,&#xA;&#x9;&#x9;&quot;George Clooney&quot;,&#xA;&#x9;&#x9;&quot;Edward Norton&quot;,&#xA;&#x9;&#x9;&quot;Sean Connery&quot;,&#xA;&#x9;&#x9;&quot;Yves Montand&quot;,&#xA;&#x9;&#x9;&quot;Richard Gere&quot;,&#xA;&#x9;&#x9;&quot;Gary Oldman&quot;,&#xA;&#x9;&#x9;&quot;Harrison Ford&quot;,&#xA;&#x9;&#x9;&quot;Matt Damon&quot;,&#xA;&#x9;&#x9;&quot;John Gielgud&quot;,&#xA;&#x9;&#x9;&quot;Joe Pesci&quot;,&#xA;&#x9;&#x9;&quot;Paul Newman&quot;,&#xA;&#x9;&#x9;&quot;Woody Harrelson&quot;,&#xA;&#x9;&#x9;&quot;John Hurt&quot;,&#xA;&#x9;&#x9;&quot;Sean Penn&quot;,&#xA;&#x9;&#x9;&quot;Christopher Walken&quot;,&#xA;&#x9;&#x9;&quot;Mickey Rourke&quot;,&#xA;&#x9;&#x9;&quot;Peter O'Toole&quot;,&#xA;&#x9;&#x9;&quot;Michael Douglas&quot;,&#xA;&#x9;&#x9;&quot;Willem Dafoe&quot;,&#xA;&#x9;&#x9;&quot;Charlton Heston&quot;,&#xA;&#x9;&#x9;&quot;Forest Whitaker&quot;,&#xA;&#x9;&#x9;&quot;James Coburn&quot;,&#xA;&#x9;&#x9;&quot;Liam Neeson&quot;,&#xA;&#x9;&#x9;&quot;Will Smith&quot;,&#xA;&#x9;&#x9;&quot;Robin Williams&quot;,&#xA;&#x9;&#x9;&quot;Keanu Reeves&quot;,&#xA;&#x9;&#x9;&quot;Harvey Keitel&quot;,&#xA;&#x9;&#x9;&quot;Michael Madsen&quot;,&#xA;&#x9;&#x9;&quot;Kevin Bacon&quot;,&#xA;&#x9;&#x9;&quot;Ed Harris&quot;,&#xA;&#x9;&#x9;&quot;Alain Delon&quot;,&#xA;&#x9;&#x9;&quot;Chris Cooper&quot;,&#xA;&#x9;&#x9;&quot;G��rard Depardieu&quot;,&#xA;&#x9;&#x9;&quot;Justin Theroux&quot;,&#xA;&#x9;&#x9;&quot;Nick Nolte&quot;,&#xA;&#x9;&#x9;&quot;Val Kilmer&quot;,&#xA;&#x9;&#x9;&quot;Joaquin Phoenix&quot;,&#xA;&#x9;&#x9;&quot;Jared Leto&quot;,&#xA;&#x9;&#x9;&quot;Laurence Fishburne&quot;,&#xA;&#x9;&#x9;&quot;Antonio Banderas&quot;,&#xA;&#x9;&#x9;&quot;John Travolta&quot;,&#xA;&#x9;&#x9;&quot;John Goodman&quot;,&#xA;&#x9;&#x9;&quot;Arnold Schwarzenegger&quot;,&#xA;&#x9;&#x9;&quot;Adrien Brody&quot;,&#xA;&#x9;&#x9;&quot;Michael Keaton&quot;,&#xA;&#x9;&#x9;&quot;Billy Bob Thornton&quot;,&#xA;&#x9;&#x9;&quot;Hugo Weaving&quot;,&#xA;&#x9;&#x9;&quot;Sam Shepard&quot;,&#xA;&#x9;&#x9;&quot;Jude Law&quot;,&#xA;&#x9;&#x9;&quot;Geoffrey Rush&quot;,&#xA;&#x9;&#x9;&quot;Roberto Benigni&quot;,&#xA;&#x9;&#x9;&quot;J��rgen Prochnow&quot;,&#xA;&#x9;&#x9;&quot;Alec Baldwin&quot;,&#xA;&#x9;&#x9;&quot;Joseph Fiennes&quot;,&#xA;&#x9;&#x9;&quot;Sebastian Koch&quot;,&#xA;&#x9;&#x9;&quot;F. Murray Abraham&quot;,&#xA;&#x9;&#x9;&quot;Javier Bardem&quot;,&#xA;&#x9;&#x9;&quot;John Wayne&quot;,&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dR1m0C_9EeSFFduuR7vvgw" name="available_tweets" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dR2N4C_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR208C_9EeSFFduuR7vvgw" value="{&#xA;&#x9;&#x9;&quot;My house is full of traps.&quot;,&#xA;&#x9;&#x9;&quot;There is a horse on aisle five.&quot;,&#xA;&#x9;&#x9;&quot;Beat jet lag by skipping a couple of meals before you travel: &quot;,&#xA;&#x9;&#x9; &quot;Peeling shallots is a pain, but here's the secret: Blanch them in water first:  &quot;,&#xA;&#x9;&#x9; &quot;Disable Android's full screen keyboard and see what you're typing with this Xposed module:  &quot;,&#xA;&#x9;&#x9; &quot;You don't need to be an artist to use basic design principles effectively in every day life: &quot;,&#xA;&#x9;&#x9; &quot;Here's how a debt settlement can affect your taxes: &quot;,&#xA;&#x9;&#x9; &quot;TorrenTV streams torrents to your Apple TV while they download:  &quot;,&#xA;&#x9;&#x9; &quot;Timeful (free for iOS) recommends how to schedule your calendar for to-dos and good habits:  &quot;,&#xA;&#x9;&#x9; &quot;So now that we have this new DIY blog: what kind of projects would you like to see? Let us know here: &quot;,&#xA;&#x9;&#x9; &quot;Build a DIY water misting rack to keep your backyard (and you) cool in the summer: &quot;,&#xA;&#x9;&#x9; &quot;Going grocery shopping after work ends today? Stop, you might spend more than you should: &quot;,&#xA;&#x9;&#x9; &quot;Not sure if you can use an image you found on the internet? This flow chart will tell you: &quot;,&#xA;&#x9;&#x9; &quot;Today's featured bag is packed tight with all kinds of fancy gadgets:  &quot;,&#xA;&#x9;&#x9; &quot;Dried beans are tasty and cheap, but you have to soak them before cooking. This cheat sheet tells you how long: &quot;,&#xA;&#x9;&#x9; &quot;Need to share hotel or tethered Wi-Fi? This tiny adapter makes your laptop a base station:  &quot;,&#xA;&#x9;&#x9; &quot;CyberGhost is one of our favorite VPNs, and now that have a client for the Mac:  &quot;,&#xA;&#x9;&#x9; &quot;How to effectively work and communicate with people who are smarter than you:  &quot;,&#xA;&#x9;&#x9; &quot;Speaking in public? Win over your audience from the get-go by opening with a puzzle:  &quot;,&#xA;&#x9;&#x9; &quot;Own your attention, it\'s all you really have.&quot;,&#xA;&#x9;&#x9; &quot;Looking to get started with DIY electronics? This list demystifies all those crazy components:  &quot;,&#xA;&#x9;&#x9; &quot;Have a small space for a workshop? No worries, here's how to make the most of it: &quot;,&#xA;&#x9;&#x9; &quot;Ever wonder why Comcast has that obnoxious two-hour repair window they're always late for? Here you go: &quot;,&#xA;&#x9;&#x9; &quot;Need help creating the perfect presentation? Come talk with Nancy Duarte of @Duarte right now! &quot;,&#xA;&#x9;&#x9; &quot;Motivation for Chrome reminds you of your age--counting up while you waste time--to fight procrastination: &quot;,&#xA;&#x9;&#x9; &quot;Flying to Europe isn't cheap, but these airlines are the least expensive: &quot;,&#xA;&#x9;&#x9; &quot;Remember, before you set an out-of-office, warn the person you're directing people to? It's only fair: &quot;,&#xA;&#x9;&#x9; &quot;Slide Dial provides swipe access to your Android dialer from any app: &quot;,&#xA;&#x9;&#x9; &quot;Should you let that certification expire just because you don't use it? Let's take a look:  &quot;,&#xA;&#x9;&#x9; &quot;Introducing two new Lifehacker sub-blogs: @WayfarerLH (travel) and @WorkshopLH (DIY)! Read more here: &quot;,&#xA;&#x9;&#x9; &quot;This afternoon we'll be talking with an expert about how to create and deliver the perfect presentation. 12pm PT! &quot;,&#xA;&#x9;&#x9; &quot;You (probably) don\'t have one, perfect, 'soul mate' of a job: &quot;,&#xA;&#x9;&#x9; &quot;How do you determine the statute of limitations on your debts? And what does that mean, anyway? &quot;,&#xA;&#x9;&#x9; &quot;Some bank accounts offer financial incentives to help reach your savings goals: &quot;,&#xA;&#x9;&#x9; &quot;If you're having trouble investing in your future, you might need to give yourself some short-term consequences: &quot;,&#xA;&#x9;&#x9; &quot;Free app Poppy gives email popup notifications on Android with quick preview/reply/delete:  &quot;,&#xA;&#x9;&#x9; &quot;When you open the fridge, a light comes on &amp;amp; goes off when you close it. For $5, you can do the same for your cooler: &quot;,&#xA;&#x9;&#x9; &quot;How firefighters sort patients can help you sort your email inbox faster: &quot;,&#xA;&#x9;&#x9; &quot;Just like you would 'practice yoga', 'practice workouts' for a long-lasting attitude to fitness: &quot;,&#xA;&#x9;&#x9; &quot;Use this flowchart to know what type of procrastinator you are (and what to do about it):  &quot;,&#xA;&#x9;&#x9; &quot;Remember the 'Jesus Pose' to connect with your audience when you give a speech:  &quot;,&#xA;&#x9;&#x9; &quot;PDF too big to email? Shrink PDFs from any browser with SmallPDF:  &quot;,&#xA;&#x9;&#x9; &quot;Check out the best questions and answers from this week's open thread at @HackerspaceBlog: &quot;,&#xA;&#x9;&#x9; &quot;Get on a flight attendant's good side by lending them a pen...says a flight attendant: &quot;,&#xA;&#x9;&#x9; &quot;When you proofread your work, change the font temporarily. It can help you notice mistakes: &quot;,&#xA;&#x9;&#x9; &quot;Don't agree to resign without negotiating key benefits: &quot;,&#xA;&#x9;&#x9; &quot;In the market for a thin, light, powerful laptop? One of these Ultrabooks will do:  &quot;,&#xA;&#x9;&#x9; &quot;If you're receiving an award on stage, accept it with your left hand. Here's why: &quot;,&#xA;&#x9;&#x9; &quot;Here were our top downloads this week: &quot;,&#xA;&#x9;&#x9; &quot;Make your own portable battery charger for smartphones and tablets: &quot;,&#xA;&#x9;&#x9; &quot;Here's a better way to put that lime in your beer: use a knife. &quot;,&#xA;&#x9;&#x9; &quot;Obligation + Vacation = Oblication. Don't be afraid to say no to these sneaky budget-killers. &quot;,&#xA;&#x9;&#x9; &quot;If your last email got ignored, don\'t 'bump' the thread--follow up with new information: &quot;,&#xA;&#x9;&#x9; &quot;Ride your bike barefoot with a sponge on each pedal:  &quot;,&#xA;&#x9;&#x9; &quot;Create an 'accountability chart' to track your productivity and stay on task: &quot;,&#xA;&#x9;&#x9; &quot;Pin up these food infographics in your kitchen or save them to your phone:  &quot;,&#xA;&#x9;&#x9; &quot;Not sure if you can use that photo on your blog? This chart explains everything about the Creative Commons license: &quot;,&#xA;&#x9;&#x9; &quot;Heading outdoors or camping this weekend? Be prepared:  &quot;,&#xA;&#x9;&#x9; &quot;Dungeons &amp;amp; Dragons can make you a better storyteller:  &quot;,&#xA;&#x9;&#x9; &quot;Not sure what went wrong with your cake? Consult this chart:  &quot;,&#xA;&#x9;&#x9; &quot;A claw hammer and a pair of vice grips can get a broken nail out, no problem:  &quot;,&#xA;&#x9;&#x9; &quot;Just say no to new projects when you return from vacation (at least for a day or two): &quot;,&#xA;&#x9;&#x9; &quot;It's legal to unlock your cell phone again. Here's what you need to know: &quot;,&#xA;&#x9;&#x9; &quot;Build this amazing little MIDI controller using an Arduino: &quot;,&#xA;&#x9;&#x9; &quot;What historical figures do you want to see productivity tips from? &quot;,&#xA;&#x9;&#x9; &quot;Increase your chances of getting better customer service from Comcast (and maybe other companies): &quot;,&#xA;&#x9;&#x9; &quot;Meeting new people, eating well on a budget, and cleaning up our closets were just some of our top posts this week: &quot;,&#xA;&#x9;&#x9; &quot;Want to check into a hotel earlier than the 2pm-3pm set time? Try just telling them when you're arriving: &quot;,&#xA;&#x9;&#x9; &quot;Grab 30 Android apps, normally $100, for free from Amazon ASAP:  &quot;,&#xA;&#x9;&#x9; &quot;Don't check the time if you wake up at night--you'll get better rest, says this sleep expert:  &quot;,&#xA;&#x9;&#x9; &quot;XBMC rebrands and renames itself - it's now Kodi Entertainment Center:  &quot;,&#xA;&#x9;&#x9; &quot;30-day challenges are a great way to break out of your comfort zone. Here are six challenges to get you started: &quot;,&#xA;&#x9;&#x9; &quot;Switch between apps with a single tap using Last App Switcher for Android: &quot;,&#xA;&#x9;&#x9; &quot;Organize your under-sink storage with desktop in-trays:  &quot;,&#xA;&#x9;&#x9; &quot;Seven important lessons we could all learn from world religions:  &quot;,&#xA;&#x9;&#x9; &quot;Not all clutter is bad, if you can't afford to replace it after it's gone: &quot;,&#xA;&#x9;&#x9; &quot;A beginner's guide to using credit card rewards for travel: &quot;,&#xA;&#x9;&#x9; &quot;Gmail's canned messages are an even better way to choose from multiple signatures in your email: &quot;,&#xA;&#x9;&#x9; &quot;Don't include all your work in your portfolio. Just the stuff you're the most satisfied with: &quot;,&#xA;&#x9;&#x9; &quot;Build your own backyard DIY dunk bucket:  &quot;,&#xA;&#x9;&#x9; &quot;Are you ready for home ownership? Mortgage Hippo tests you to find out:  &quot;,&#xA;&#x9;&#x9; &quot;Bone conducting headphones are surprisingly easy to make. You learn a lot about speakers too:  &quot;,&#xA;&#x9;&#x9; &quot;It's clear skies on this desktop. Here's how to make your computer look like this:  &quot;,&#xA;&#x9;&#x9; &quot;Ten malware removal apps went through months of rigorous testing.  Who came out on top?  &quot;,&#xA;&#x9;&#x9; &quot;Decorate the ideal cake and cookies with an oral syringe filled with frosting:  &quot;,&#xA;&#x9;&#x9; &quot;If you don't like being asked what you do for a living, it might be time to change course:  &quot;,&#xA;&#x9;&#x9; &quot;Love public radio? NPR One is a great app that provides and endless stream of curated news stories: &quot;,&#xA;&#x9;&#x9; &quot;What to do when you feel too embarrassed to exercise: &quot;,&#xA;&#x9;&#x9; &quot;Use so many cloud services you can't keep track of your files? This Mac app helps: &quot;,&#xA;&#x9;&#x9; &quot;The order you present your information matters. Create an information hierarchy when sharing info: &quot;,&#xA;&#x9;&#x9; &quot;Have a company you'd love to work for? Be an advocate--you'll get noticed quickly: &quot;,&#xA;&#x9;&#x9; &quot;Worth a try: Find out if you can get free school supplies from these organizations:  &quot;,&#xA;&#x9;&#x9; &quot;This awesome, free book will teach you everything you need to know about JavaScript:  &quot;,&#xA;&#x9;&#x9; &quot;Running even just 5 minutes a day could help you live longer:  &quot;,&#xA;&#x9;&#x9; &quot;August starts tomorrow! Here are the best things to buy for deals in August: &quot;,&#xA;&#x9;&#x9; &quot;Easy Uninstaller clears space on your Android by batch removing apps and their leftover files:  &quot;,&#xA;&#x9;&#x9; &quot;One of our favorite to-do apps, @Wunderlist, just got a huge update! Here's what's new:  &quot;,&#xA;&#x9;&#x9; &quot;Think you can't customize the looks and functionality of a Mac? Think again: &quot;,&#xA;&#x9;&#x9; &quot;Create refill station for your next outdoor party you don't have to run to the house for plates, napkins, and forks: &quot;,&#xA;&#x9;&#x9; &quot;Confidence and arrogance sometimes look alike, but they're very different. Here's how to tell: &quot;,&#xA;&#x9;&#x9; &quot;Free Android app Unclouded sorts Google Drive or Dropbox by size, category or duplicates:  &quot;,&#xA;&#x9;&#x9; &quot;Popular music recognition app @Shazam is now available for free on Mac OS X:  &quot;,&#xA;&#x9;&#x9; &quot;We're on the hunt for the best Ultrabooks (thin, powerful laptops.) Which are the best?  &quot;,&#xA;&#x9;&#x9; &quot;A few trays and baskets are all you need to start living in a clutter-free, clean home: &quot;,&#xA;&#x9;&#x9; &quot;Looking for new music? Here are the best services you're probably not using (but should be):  &quot;,&#xA;&#x9;&#x9; &quot;The Met just uploaded 400,000 images from its collection. So happy Wallpaper Wednesday!  &quot;,&#xA;&#x9;&#x9; &quot;Pick the second cheapest glass on the menu and other tips for ordering wine:  &quot;,&#xA;&#x9;&#x9; &quot;Credit Karma already tracks and protects your finances. Now they're offering free weekly credit reports. Seriously: &quot;,&#xA;&#x9;&#x9; &quot;Amazon Prime subcriber? Choose no-rush shipping and earn $1 in instant video credit per order:  &quot;,&#xA;&#x9;&#x9; &quot;Egg shells in your bowl? Wet your fingers before reaching in to grab them:  &quot;,&#xA;&#x9;&#x9; &quot;Eight power networking tips to help you make more meaningful connections: &quot;,&#xA;&#x9;&#x9; &quot;If you're putting things away in storage, learn how to pack them away properly with this:  &quot;,&#xA;&#x9;&#x9; &quot;This DIY USB charger can be powered by just about anything from solar panels to car batteries:  &quot;,&#xA;&#x9;&#x9; &quot;BitTorrent just opened up invitations to the pre-alpha of its new anonymous, serverless chat client, Bleep: &quot;,&#xA;&#x9;&#x9; &quot;We spoke with the @PlexApp development team to learn the history behind the app: &quot;,&#xA;&#x9;&#x9; &quot;Back to our old format today with a speedy external drive, vacuum-packed wine, gadget chargers, and more #deals. &quot;,&#xA;&#x9;&#x9; &quot;Ever wanted to create your own Google Now voice command? Now you can. Here's how: &quot;,&#xA;&#x9;&#x9; &quot;This guide from the government tells you how to prepare to retire: &quot;,&#xA;&#x9;&#x9; &quot;Learn how to eat well on just $35 a week:  &quot;,&#xA;&#x9;&#x9; &quot;Sleeping away from home? Here's how to get a great night's sleep wherever you are:  &quot;,&#xA;&#x9;&#x9; &quot;Save time in useless meetings and writing emails--Teamreporter gets everyone up to date for you, automatically: &quot;,&#xA;&#x9;&#x9; &quot;We love Audacity, but if you need something lighter and easier, try Ocenaudio:  &quot;,&#xA;&#x9;&#x9; &quot;Looking to add style and storage to a small space? Try room dividers with storage like these:  &quot;,&#xA;&#x9;&#x9; &quot;Clean your closet by making quick decisions with this handy flowchart:  &quot;,&#xA;&#x9;&#x9; &quot;Blab quickly sends video messages; the other guy doesn't even need the app installed:  &quot;,&#xA;&#x9;&#x9; &quot;Gym clothes stink (yes, even after washing) so keep them separate by picking them in only two colors: &quot;,&#xA;&#x9;&#x9; &quot;Want to use Amazon's Subscribe and Save but don't know where to start? We're building a list of the best items: &quot;,&#xA;&#x9;&#x9; &quot;Sick of manually switching between OS X partitions? Here's an AppleScript to make it easier: &quot;,&#xA;&#x9;&#x9; &quot;No rolling pin? No problem! Use an empty wine or liquor bottle instead:  &quot;,&#xA;&#x9;&#x9; &quot;What video games or DLC give the best return on investment? This interactive chart shows you:  &quot;,&#xA;&#x9;&#x9; &quot;Dadhacker - Do you have enough will power? - &quot;,&#xA;&#x9;&#x9; &quot;Wondering what old accessories will work with that new Raspberry Pi model? Thankfully, most of them: &quot;,&#xA;&#x9;&#x9; &quot;Instagram will soon be launching their own ephemeral photo messaging app, named Bolt: &quot;,&#xA;&#x9;&#x9; &quot;Why creative side projects are good for you:  &quot;,&#xA;&#x9;&#x9; &quot;They say opposites attract, but they also annoy each other pretty quickly. Here's why and how to deal with it: &quot;,&#xA;&#x9;&#x9; &quot;This data might help find out someone's age from their first name (and, more importantly, shows it can be done): &quot;,&#xA;&#x9;&#x9; &quot;AppDowner makes it easy to install old versions of Android apps if you don't like the bloat that comes with new ones: &quot;,&#xA;&#x9;&#x9; &quot;Don't use Dropbox as your sole backup solution:  &quot;,&#xA;&#x9;&#x9; &quot;Want to learn Linux? This course is normally more than $2,000, but it's free now: &quot;,&#xA;&#x9;&#x9; &quot;OneNote is getting a few significant updates for Mac and iPhone/iPad: &quot;,&#xA;&#x9;&#x9; &quot;The best productivity tricks you can learn from rock stars:  &quot;,&#xA;&#x9;&#x9; &quot;Sunburnt and no aloe around? Crack open the fridge and use milk or yogurt to soothe the burn:  &quot;,&#xA;&#x9;&#x9; &quot;Jam-packed #deals post today, with Galaxy Tab Pro, UE Mini Boom, gaming gear, and more.  &quot;,&#xA;&#x9;&#x9; &quot;.@Asana for the iPhone and iPad got a major overhaul and looks great! Heres what's new:  &quot;,&#xA;&#x9;&#x9; &quot;Transform a crappy patio umbrella into a $300 designer lookalike on the cheap:  &quot;,&#xA;&#x9;&#x9; &quot;Hang out with a nine year old for a while and you learn a few things about life: &quot;,&#xA;&#x9;&#x9; &quot;No Wake On Charge stops your Samsung's screen lighting up when charging: &quot;,&#xA;&#x9;&#x9; &quot;Spotify just added a surprisingly exciting equalizer to its iOS app  &quot;,&#xA;&#x9;&#x9; &quot;You should rethink these outdated retirement rules of thumb: &quot;,&#xA;&#x9;&#x9; &quot;Just because you have a gas grill doesn't mean you can't get wood smoked flavor! @TestKitchen shows us how: &quot;,&#xA;&#x9;&#x9; &quot;Your giant American refrigerator is making you fat and poor &quot;,&#xA;&#x9;&#x9; &quot;Yes, you can talk pay with coworkers, and no, they can't force you to resign. These and other office falsehoods: &quot;,&#xA;&#x9;&#x9; &quot;Write emails with 'If...Then' statements and your back-and-forths will greatly reduce:  &quot;,&#xA;&#x9;&#x9; &quot;Get Wunderlist in a tiny window docked to your screen with Wunderlist Chrome Panel:  &quot;,&#xA;&#x9;&#x9; &quot;What's the weather like in Italy in June? Find out and share with Climatology for Android:  &quot;,&#xA;&#x9;&#x9; &quot;These are the generic foods and ingredients professional chefs choose to buy over brand names: &quot;,&#xA;&#x9;&#x9; &quot;Just because you have a gas grill doesn't mean you can't get wood smoked flavor! @TestKitchen shows us how: &quot;,&#xA;&#x9;&#x9; &quot;Our featured bag this week is actually three bags, packed with everything a photographer needs  &quot;,&#xA;&#x9;&#x9; &quot;Use the Army Ranger Roll technique to save space packing your sweatpants or pajama bottoms:  &quot;,&#xA;&#x9;&#x9; &quot;Basic home security systems might not be giving you as much protection as you think:  &quot;,&#xA;&#x9;&#x9; &quot;The Moto Stream is a pretty awesome way to add feature-heavy Bluetooth to your car: &quot;,&#xA;&#x9;&#x9; &quot;Avoiding alcohol can help keep those pesky mosquitoes at bay:  &quot;,&#xA;&#x9;&#x9; &quot;Sick of the OS X dock? This app stuffs all your dock icons into the menu bar: &quot;,&#xA;&#x9;&#x9; &quot;Practice self-compassion to improve how you feel about yourself:  &quot;,&#xA;&#x9;&#x9; &quot;Looking for some advice from a friend? Here's how to ask so you get useful info: &quot;,&#xA;&#x9;&#x9; &quot;Diligence isn\'t a personality type. It\'s a skill you learn.&quot;,&#xA;&#x9;&#x9; &quot;Come ask @DickTalens of @Fitocracy about how you can stay fit even if you lead a busy life: &quot;,&#xA;&#x9;&#x9; &quot;Wondering how good your company's 401k is? This chart looks at the U.S.'s top 250 companies and compares: &quot;,&#xA;&#x9;&#x9; &quot;Floatify lets you create customizable pop-up notifications on Android: &quot;,&#xA;&#x9;&#x9; &quot;Brian Eno's Oblique Strategies cards help you overcome creative blocks:  &quot;,&#xA;&#x9;&#x9; &quot;Don't get tricked into double-tipping your waiter on vacation: &quot;,&#xA;&#x9;&#x9; &quot;Meeting new people? Here's how to make a good impression:  &quot;,&#xA;&#x9;&#x9; &quot;This afternoon we have a live Q&amp;amp;A with @DickTalens on how workaholics can still stay in shape and exercise. 12pm PT! &quot;,&#xA;&#x9;&#x9; &quot;Crazy fines from your homeowner's association for a less-than-perfect lawn? Paint it and avoid the fees: &quot;,&#xA;&#x9;&#x9; &quot;Four creative ways to use your printer that aren't just plain old paper:  &quot;,&#xA;&#x9;&#x9; &quot;This DIY wine glass rack looks great, and is super-easy to make:  &quot;,&#xA;&#x9;&#x9; &quot;If you have ten minutes, you have time for these three decluttering techniques: &quot;,&#xA;&#x9;&#x9; &quot;Soaking up some sun? @adafruit's DIY UV sensor hat tells you when to reapply sunscreen:  &quot;,&#xA;&#x9;&#x9; &quot;Speak a website's name to switch to that tab in Chrome with free Tabs Board extension:  &quot;,&#xA;&#x9;&#x9; &quot;Skillets are better than saucepans for poaching eggs; and vinegar is the magic ingredient:  &quot;,&#xA;&#x9;&#x9; &quot;Avoid the 'rush hour' of business travellers and you'll save a lot of money on hotel bookings: &quot;,&#xA;&#x9;&#x9; &quot;Are glass screen protectors better than plastic ones?  &quot;,&#xA;&#x9;&#x9; &quot;Ever want to know what Uber drivers think of you? This script will tell you:  &quot;,&#xA;&#x9;&#x9; &quot;Try 'Tabless Thursdays' to encourage single tasking, just one day a week: &quot;,&#xA;&#x9;&#x9; &quot;If you're a current (or former) member of the military,h ere's a big list of places you can get a military discount: &quot;,&#xA;&#x9;&#x9; &quot;Check out the best from this week's open thread at @HackerspaceBlog: &quot;,&#xA;&#x9;&#x9; &quot;Some jobs are too good to be true. Know the warning signs of a job scam: &quot;,&#xA;&#x9;&#x9; &quot;f you can, use your audience to prove a point--not a slide in your presentation. &quot;,&#xA;&#x9;&#x9; &quot;This is a pretty interesting tool: Answer a few questions and find the city that matches your political beliefs best. &quot;,&#xA;&#x9;&#x9; &quot;Looking for faster, easier downloads? Try these five great Usenet providers:  &quot;,&#xA;&#x9;&#x9; &quot;If you want the perfect egg salad, you should use your hands: &quot;,&#xA;&#x9;&#x9; &quot;Lifehacker Packs, antivirus apps, Android security, and more: Here were this week's top downloads. &quot;,&#xA;&#x9;&#x9; &quot;Solidify your career path with the G+P+V formula: Gifts+Passions+Values. &quot;,&#xA;&#x9;&#x9; &quot;Running out of iCloud space? Change your backup settings on iOS:  &quot;,&#xA;&#x9;&#x9; &quot;Get a good deal on Craigslist by searching for key phrases, like 'leaving the country:' &quot;,&#xA;&#x9;&#x9; &quot;Take an appreciation break to boost your self-esteem: &quot;,&#xA;&#x9;&#x9; &quot;Trying to pitch an idea to someone? Lunch meetings are ideal: &quot;,&#xA;&#x9;&#x9; &quot;Ditch the sugar packets: Fix an uneven chair leg with a wine cork.&quot;&#xA;&#x9;&#x9; }"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY200C_9EeSFFduuR7vvgw" name="getFriendsLikeness" specification="_cXNxoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY200S_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY200i_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY200y_9EeSFFduuR7vvgw" type="_dFbigC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>List&lt;Follower> aList=getFriends(name, max);
			Map&lt;Follower, Double> aMap = new HashMap&lt;>();
			for (Follower friend: aList){
				aMap.put(friend, Math.abs((friend+name).hashCode()%100.0));
			}
			return aMap;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY4C8C_9EeSFFduuR7vvgw" name="getFriends" specification="_cXQN4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY4C8S_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4C8i_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4C8y_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY4C9C_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> names =  getChoices(name, available_friend_names, max, 5, false);
		List&lt;Follower> followers  = new ArrayList&lt;>();
		for (String n : names)
			followers.add(new Follower(n));
		return followers;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY4qAC_9EeSFFduuR7vvgw" name="getTwitterTimeline" specification="_cXRcAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY4qAS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4qAi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4qAy_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY4qBC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> tweet_texts =  getChoices(name, available_tweets, max, 20, false);
		List&lt;Tweet> tweets  = new ArrayList&lt;>();
		for (String t : tweet_texts)
			tweets.add(new Tweet(t, new Date(Math.abs(t.hashCode()))));
		return tweets;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY5REC_9EeSFFduuR7vvgw" name="getCast" specification="_cXTRMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY5RES_9EeSFFduuR7vvgw" name="movie">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY5REi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY5REy_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY5RFC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> actors=getChoices(movie, available_actor_names, max, 7, true);
		List&lt;Actor> theActors= new ArrayList&lt;>();
		for (String str: actors)
			theActors.add(new Actor(str));
		return theActors;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY54IC_9EeSFFduuR7vvgw" name="getMovies" specification="_cXVGYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY54IS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY54Ii_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY54Iy_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY54JC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> movies=getChoices(name, available_movie_names, max, 15, true);
		List &lt;Movie> theMovies = new ArrayList&lt;>();
		for (String str: movies)
			theMovies.add(new Movie(str));
		return theMovies;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY7GQC_9EeSFFduuR7vvgw" name="pickOneOf" specification="_cXWUgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY7GQS_9EeSFFduuR7vvgw" name="choices">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY7GQi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7GQy_9EeSFFduuR7vvgw" name="hash">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7GRC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// In Java, % can be negative.
		// Force it to be positive.
		// But don't use abs() since that skews the result.
		int h = hash % choices.length;
		if (h &lt; 0)
			h = h + choices.length;
		return choices[h];
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY7tUC_9EeSFFduuR7vvgw" name="getChoices" specification="_cXYJsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY7tUS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7tUi_9EeSFFduuR7vvgw" name="choices">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY7tUy_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7tVC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7tVS_9EeSFFduuR7vvgw" name="average">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY7tVi_9EeSFFduuR7vvgw" name="include_self">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY8UYC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY8UYS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;String> friends = new ArrayList&lt;>();
		int hash = name == null ? 17 : name.hashCode();
		// (do .. while) to be kind, so everyone has at least 1 friend.
		do {
			String candidate = pickOneOf(choices, hash);
			
			if (friends.contains(candidate)
					|| ((!include_self) &amp;&amp; candidate.equals(name))) {
				// Oops, already have that friend (or it's me)
				// Keep the hash changing
				hash += 1;
			} else {
				friends.add(candidate);
				// Seed the next round
				hash = friends.hashCode();				
			}
		} while (friends.size() &lt; max &amp;&amp; hash % average != 0);
		return friends;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dY87cC_9EeSFFduuR7vvgw" name="main" specification="_cXb0EC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dY9igC_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dY9igS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.println(getFriends(&quot;Dylan&quot;, 5));
		System.out.println(getCast(&quot;The Shawshank Redemption&quot;, 20));
		System.out.println(getMovies(&quot;Isaac&quot;, 20));
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXNxoC_9EeSFFduuR7vvgw" name="getFriendsLikeness" isStatic="true" method="_dY200C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcZ4EC_9EeSFFduuR7vvgw">
                  <body>This method generates random weights for edges
	 * @name Name of the node
	 * @max Maximum number of friends
	 * @return Returns the map of weights corresponding to the edges connected to a specific node</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXNxoS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXNxoi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOcUkC_9EeSFFduuR7vvgw" type="_dFbigC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cXQN4C_9EeSFFduuR7vvgw" name="getFriends" isStatic="true" method="_dY4C8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcZ4ES_9EeSFFduuR7vvgw">
                  <body>Pick some friends, consistently.
	 * This is a function: identical calls generate identical results.
	 * @param name	Any name
	 * @param max	Maximum number of names to return 
	 * @return about 5 names, up to max, chosen from a list of common names</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXQN4S_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXQN4i_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXQ08C_9EeSFFduuR7vvgw" type="_cUf00C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXQ08S_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXRcAC_9EeSFFduuR7vvgw" name="getTwitterTimeline" isStatic="true" method="_dY4qAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcafIC_9EeSFFduuR7vvgw">
                  <body>Pick some tweets (most of which are from Lifehacker, others from XKCD.
	 * @param name The name of the twitter user
	 * @param max  Maximum number of tweets
	 * @return about 20 tweets, up to max, chosen from a list</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXSDEC_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXSDES_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXSDEi_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXSDEy_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXTRMC_9EeSFFduuR7vvgw" name="getCast" isStatic="true" method="_dY5REC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcafIS_9EeSFFduuR7vvgw">
                  <body>Pick some actors for a given movie.
	 * A list of actor names might be better.
	 * 
	 * @param movie		The name of the movie
	 * @param max		The maximum number of actors
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXTRMS_9EeSFFduuR7vvgw" name="movie">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXT4QC_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXT4QS_9EeSFFduuR7vvgw" type="_cMK_QC_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXT4Qi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXVGYC_9EeSFFduuR7vvgw" name="getMovies" isStatic="true" method="_dY54IC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcafIi_9EeSFFduuR7vvgw">
                  <body>Pick some movies an actor played in.
	 * @param name		The name of the actor
	 * @param max		The maximum number of movies
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXVGYS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXVGYi_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXVGYy_9EeSFFduuR7vvgw" type="_cW8r4C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXVtcC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXWUgC_9EeSFFduuR7vvgw" name="pickOneOf" visibility="private" isStatic="true" method="_dY7GQC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcbGMC_9EeSFFduuR7vvgw">
                  <body>Pick one of the names given a hash
	 * The reason for this is that you can easily pick from either list.
	 * @param available_friend_names
	 * @param hash
	 * @return a String from the list</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXWUgS_9EeSFFduuR7vvgw" name="choices">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXXioC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXW7kC_9EeSFFduuR7vvgw" name="hash">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXW7kS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXYJsC_9EeSFFduuR7vvgw" name="getChoices" isStatic="true" method="_dY7tUC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcbGMS_9EeSFFduuR7vvgw">
                  <body>Generic graph generator, using a friend network as analogy.
	 * This is a function: identical calls generate identical results.
	 * 
	 * @param name		String used as a random seed.
	 * @param choices	Choices of 'friends'
	 * @param max		Maximum number of 'friends'
	 * @param average	lambda of friend count exponential distribution
	 * @param include_self	If `choices` contains `name`, should `name` be kept?
	 * @return	About `average` names (up to `max`, but always at least 1), \
	 * chosen from `choices`, except possibly `name` if it is in `choices` \
	 * and `include_self` is false.</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXYJsS_9EeSFFduuR7vvgw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXYwwC_9EeSFFduuR7vvgw" name="choices">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXbNAC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXYwwS_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXYwwi_9EeSFFduuR7vvgw" name="average">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXYwwy_9EeSFFduuR7vvgw" name="include_self">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXZX0C_9EeSFFduuR7vvgw" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXZX0S_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXb0EC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_dY87cC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcbtQC_9EeSFFduuR7vvgw">
                  <body>Debugging test function for Sample Data Generator
	 * 
	 * This should be removed when Bridges is released.
	 * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXb0ES_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cXcbIC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXfecC_9EeSFFduuR7vvgw" name="StackEdge">
              <generalization xmi:id="_dJFTcC_9EeSFFduuR7vvgw" general="_cJnagC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dR6fUC_9EeSFFduuR7vvgw" name="edgeOutgoing" type="_cXjI0C_9EeSFFduuR7vvgw" association="_dcc7YC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZAl0C_9EeSFFduuR7vvgw" name="StackEdge" specification="_dJC3MC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZAl0S_9EeSFFduuR7vvgw" name="source" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZAl0i_9EeSFFduuR7vvgw" name="destination" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZAl0y_9EeSFFduuR7vvgw" type="_cXfecC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(source, destination, &quot;&quot;);
		
		edgeOutgoing = destination;		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dJC3MC_9EeSFFduuR7vvgw" name="StackEdge" method="_dZAl0C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dJEFUC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dJEFUS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dJDeQC_9EeSFFduuR7vvgw" name="source" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJDeQS_9EeSFFduuR7vvgw" name="destination" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJEFUi_9EeSFFduuR7vvgw" type="_cXfecC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXjI0C_9EeSFFduuR7vvgw" name="StackNode">
              <generalization xmi:id="_dJI90S_9EeSFFduuR7vvgw" general="_cLFaIC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dR7tcC_9EeSFFduuR7vvgw" name="nodeOutgoing" visibility="private" type="_cXfecC_9EeSFFduuR7vvgw" association="_dedtkS_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZBz8C_9EeSFFduuR7vvgw" name="StackNode" specification="_cXjv4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZBz8S_9EeSFFduuR7vvgw" name="nodeIdentifier">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZBz8i_9EeSFFduuR7vvgw" type="_cXjI0C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(nodeIdentifier);
				
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZCbAC_9EeSFFduuR7vvgw" name="setEdge" specification="_dJGhkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZCbAS_9EeSFFduuR7vvgw" name="n" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>//TODO make identifier if needed
		this.nodeOutgoing = new StackEdge(this, n);//returns an edge pointing to the next node
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZDCEC_9EeSFFduuR7vvgw" name="getOutgoing" specification="_cXk-AC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZDCES_9EeSFFduuR7vvgw" type="_cXfecC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>return this.nodeOutgoing;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZDpIC_9EeSFFduuR7vvgw" name="setNextNode" specification="_dJHvsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZDpIS_9EeSFFduuR7vvgw" name="n" type="_cXjI0C_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(this == null || n == null){
			throw new Exception(&quot;New node not created, one or more nodes are NULL.&quot;);
		}else{
			this.setEdge(n);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZEQMC_9EeSFFduuR7vvgw" name="getNextNode" specification="_cXmMIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZEQMS_9EeSFFduuR7vvgw" type="_cXjI0C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(this.nodeOutgoing == null){
			return null;
		}else return this.nodeOutgoing.getEdgeOutgoing();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXjv4C_9EeSFFduuR7vvgw" name="StackNode" method="_dZBz8C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cXkW8S_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cXkW8i_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcewkC_9EeSFFduuR7vvgw">
                  <body>Creates a new StackNode.
	 * 
	 * @param nodeIdentifier The name of the new StackNode.</body>
                </ownedComment>
                <ownedParameter xmi:id="_cXkW8C_9EeSFFduuR7vvgw" name="nodeIdentifier">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXkW8y_9EeSFFduuR7vvgw" type="_cXjI0C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cXk-AC_9EeSFFduuR7vvgw" name="getOutgoing" method="_dZDCEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcewki_9EeSFFduuR7vvgw">
                  <body>Returns the connected StackEdge to the calling StackNode.
	 * 
	 * @return The connected StackEdge.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJHIoC_9EeSFFduuR7vvgw" type="_cXfecC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cXmMIC_9EeSFFduuR7vvgw" name="getNextNode" method="_dZEQMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcfXoS_9EeSFFduuR7vvgw">
                  <body>Returns the next node via the connected StackEdge.
	 * 
	 * @return The next StackNode in the stack.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJI90C_9EeSFFduuR7vvgw" type="_cXjI0C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJGhkC_9EeSFFduuR7vvgw" name="setEdge" visibility="private" method="_dZCbAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcewkS_9EeSFFduuR7vvgw">
                  <body>Creates a StackEdge and connects it to the calling StackNode and the passed StackNode.
	 * 
	 * @param n The StackNode that is being connected to.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJGhkS_9EeSFFduuR7vvgw" name="n" type="_cXjI0C_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJHvsC_9EeSFFduuR7vvgw" name="setNextNode" method="_dZDpIC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcfXoC_9EeSFFduuR7vvgw">
                  <body>Creates the connecting StackNode and the resulting StackEdge.
	 * 
	 * @param n The next StackNode in the stack.
	 * @throws Exception Verifies the calling and passed StackNodes are not null.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJHvsS_9EeSFFduuR7vvgw" name="n" type="_cXjI0C_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXpPcC_9EeSFFduuR7vvgw" name="Tweet">
              <ownedAttribute xmi:id="_dR-JsC_9EeSFFduuR7vvgw" name="content">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dR-wwC_9EeSFFduuR7vvgw" name="date" type="_dGpqgS_9EeSFFduuR7vvgw" association="_dcf-sC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZGFYC_9EeSFFduuR7vvgw" name="Tweet" specification="_dOfX4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZGFYS_9EeSFFduuR7vvgw" name="content">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZGFYi_9EeSFFduuR7vvgw" name="date2" type="_dGpqgS_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZGFYy_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.content = content;
		this.date = date2;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZHTgC_9EeSFFduuR7vvgw" name="Tweet" specification="_cXrEoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZHTgS_9EeSFFduuR7vvgw" name="content">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZHTgi_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>this.content = content;
		this.date = new Date();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZH6kC_9EeSFFduuR7vvgw" name="hashCode" specification="_cXrrsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZH6kS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((content == null) ? 0 : content.hashCode());
		result = prime * result + ((date == null) ? 0 : date.hashCode());
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZIhoC_9EeSFFduuR7vvgw" name="equals" specification="_dOgmAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZIhoS_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZIhoi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Tweet other = (Tweet) obj;
		if (content == null) {
			if (other.content != null)
				return false;
		} else if (!content.equals(other.content))
			return false;
		if (date == null) {
			if (other.date != null)
				return false;
		} else if (!date.equals(other.date))
			return false;
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZJvwC_9EeSFFduuR7vvgw" name="toString" specification="_cXs50i_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZJvwS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return &quot;Tweet [content=&quot; + content + &quot;, date=&quot; + date + &quot;]&quot;;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXrEoC_9EeSFFduuR7vvgw" name="Tweet" method="_dZHTgC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cXrEoi_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cXrEoy_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cXrEoS_9EeSFFduuR7vvgw" name="content">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cXrEpC_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cXrrsC_9EeSFFduuR7vvgw" name="hashCode" method="_dZH6kC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cXsSwC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cXs50i_9EeSFFduuR7vvgw" name="toString" method="_dZJvwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cXtg4C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dOfX4C_9EeSFFduuR7vvgw" name="Tweet" method="_dZGFYC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dOf-8C_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dOf-8S_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dOfX4S_9EeSFFduuR7vvgw" name="content">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dOfX4i_9EeSFFduuR7vvgw" name="date2" type="_dGpqgS_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOf-8i_9EeSFFduuR7vvgw" type="_cXpPcC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOgmAC_9EeSFFduuR7vvgw" name="equals" method="_dZIhoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dOhNEC_9EeSFFduuR7vvgw" name="obj" type="_dM7RoC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOhNES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cXxLQC_9EeSFFduuR7vvgw" name="Validation">
              <ownedAttribute xmi:id="_dSBNAC_9EeSFFduuR7vvgw" name="COLOR_NAMES" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dSB0EC_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSCbIC_9EeSFFduuR7vvgw" value="new HashSet&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dSDCMC_9EeSFFduuR7vvgw" name="COLOR_PATTERNS" isLeaf="true" isStatic="true" type="_dHQugS_9EeSFFduuR7vvgw" isReadOnly="true" association="_dee7sS_9EeSFFduuR7vvgw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dSDCMS_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSDpQC_9EeSFFduuR7vvgw" value="new HashSet&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dSEQUC_9EeSFFduuR7vvgw" name="NODE_SHAPES" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dSEQUS_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSE3YC_9EeSFFduuR7vvgw" value="new HashSet&lt;>()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZLk8C_9EeSFFduuR7vvgw" name="_initializer1" specification="_cXzngC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>COLOR_PATTERNS.add(Pattern.compile(&quot;#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})&quot;));
		//TODO: Support more colors
		COLOR_NAMES.addAll(Arrays.asList(new String[] {
				&quot;aliceblue&quot;,
				&quot;antiquewhite&quot;,
				&quot;aqua&quot;,
				&quot;aquamarine&quot;,
				&quot;azure&quot;,
				&quot;beige&quot;,
				&quot;bisque&quot;,
				&quot;black&quot;,
				&quot;blanchedalmond&quot;,
				&quot;blue&quot;,
				&quot;blueviolet&quot;,
				&quot;brown&quot;,
				&quot;burlywood&quot;,
				&quot;cadetblue&quot;,
				&quot;chartreuse&quot;,
				&quot;chocolate&quot;,
				&quot;coral&quot;,
				&quot;cornflowerblue&quot;,
				&quot;cornsilk&quot;,
				&quot;crimson&quot;,
				&quot;cyan&quot;,
				&quot;darkblue&quot;,
				&quot;darkcyan&quot;,
				&quot;darkgoldenrod&quot;,
				&quot;darkgray&quot;,
				&quot;darkgreen&quot;,
				&quot;darkgrey&quot;,
				&quot;darkkhaki&quot;,
				&quot;darkmagenta&quot;,
				&quot;darkolivegreen&quot;,
				&quot;darkorange&quot;,
				&quot;darkorchid&quot;,
				&quot;darkred&quot;,
				&quot;darksalmon&quot;,
				&quot;darkseagreen&quot;,
				&quot;darkslateblue&quot;,
				&quot;darkslategray&quot;,
				&quot;darkslategrey&quot;,
				&quot;darkturquoise&quot;,
				&quot;darkviolet&quot;,
				&quot;deeppink&quot;,
				&quot;deepskyblue&quot;,
				&quot;dimgray&quot;,
				&quot;dimgrey&quot;,
				&quot;dodgerblue&quot;,
				&quot;firebrick&quot;,
				&quot;floralwhite&quot;,
				&quot;forestgreen&quot;,
				&quot;fuchsia&quot;,
				&quot;gainsboro&quot;,
				&quot;ghostwhite&quot;,
				&quot;gold&quot;,
				&quot;goldenrod&quot;,
				&quot;gray&quot;,
				&quot;green&quot;,
				&quot;greenyellow&quot;,
				&quot;grey&quot;,
				&quot;honeydew&quot;,
				&quot;hotpink&quot;,
				&quot;indianred&quot;,
				&quot;indigo&quot;,
				&quot;ivory&quot;,
				&quot;khaki&quot;,
				&quot;lavender&quot;,
				&quot;lavenderblush&quot;,
				&quot;lawngreen&quot;,
				&quot;lemonchiffon&quot;,
				&quot;lightblue&quot;,
				&quot;lightcoral&quot;,
				&quot;lightcyan&quot;,
				&quot;lightgoldenrodyellow&quot;,
				&quot;lightgray&quot;,
				&quot;lightgreen&quot;,
				&quot;lightgrey&quot;,
				&quot;lightpink&quot;,
				&quot;lightsalmon&quot;,
				&quot;lightseagreen&quot;,
				&quot;lightskyblue&quot;,
				&quot;lightslategray&quot;,
				&quot;lightslategrey&quot;,
				&quot;lightsteelblue&quot;,
				&quot;lightyellow&quot;,
				&quot;lime&quot;,
				&quot;limegreen&quot;,
				&quot;linen&quot;,
				&quot;magenta&quot;,
				&quot;maroon&quot;,
				&quot;mediumaquamarine&quot;,
				&quot;mediumblue&quot;,
				&quot;mediumorchid&quot;,
				&quot;mediumpurple&quot;,
				&quot;mediumseagreen&quot;,
				&quot;mediumslateblue&quot;,
				&quot;mediumspringgreen&quot;,
				&quot;mediumturquoise&quot;,
				&quot;mediumvioletred&quot;,
				&quot;midnightblue&quot;,
				&quot;mintcream&quot;,
				&quot;mistyrose&quot;,
				&quot;moccasin&quot;,
				&quot;navajowhite&quot;,
				&quot;navy&quot;,
				&quot;oldlace&quot;,
				&quot;olive&quot;,
				&quot;olivedrab&quot;,
				&quot;orange&quot;,
				&quot;orangered&quot;,
				&quot;orchid&quot;,
				&quot;palegoldenrod&quot;,
				&quot;palegreen&quot;,
				&quot;paleturquoise&quot;,
				&quot;palevioletred&quot;,
				&quot;papayawhip&quot;,
				&quot;peachpuff&quot;,
				&quot;peru&quot;,
				&quot;pink&quot;,
				&quot;plum&quot;,
				&quot;powderblue&quot;,
				&quot;purple&quot;,
				&quot;red&quot;,
				&quot;rosybrown&quot;,
				&quot;royalblue&quot;,
				&quot;saddlebrown&quot;,
				&quot;salmon&quot;,
				&quot;sandybrown&quot;,
				&quot;seagreen&quot;,
				&quot;seashell&quot;,
				&quot;sienna&quot;,
				&quot;silver&quot;,
				&quot;skyblue&quot;,
				&quot;slateblue&quot;,
				&quot;slategray&quot;,
				&quot;slategrey&quot;,
				&quot;snow&quot;,
				&quot;springgreen&quot;,
				&quot;steelblue&quot;,
				&quot;tan&quot;,
				&quot;teal&quot;,
				&quot;thistle&quot;,
				&quot;tomato&quot;,
				&quot;turquoise&quot;,
				&quot;violet&quot;,
				&quot;wheat&quot;,
				&quot;white&quot;,
				&quot;whitesmoke&quot;,
				&quot;yellow&quot;,
				&quot;yellowgreen&quot;
		}));
		NODE_SHAPES.addAll(Arrays.asList(new String[]{
				&quot;circle&quot;,
				&quot;rect&quot;
		}));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZMzEC_9EeSFFduuR7vvgw" name="validateColor" specification="_cX1csC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZMzES_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (COLOR_NAMES.contains(color)) {
			// Named color
			return;
		} else {
			for (Pattern p : COLOR_PATTERNS) {
				if (p.matcher(color).matches()) {
					return;
				}
			}
		}
		throw new InvalidValueException(&quot;Invalid color' &quot; + color + &quot;'. Expected&quot;
				+ &quot;CSS color name, or #RRGGBB or #RGB formats.&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZOBMC_9EeSFFduuR7vvgw" name="validateShape" specification="_cX3R4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZOBMS_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (NODE_SHAPES.contains(shape)) {
			return;
		} else {
			throw new InvalidValueException(&quot;Invalid shape' &quot; + shape + &quot;'. Expected&quot;
					+ &quot;one of: &quot; + NODE_SHAPES);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZOoQC_9EeSFFduuR7vvgw" name="validateOpacity" specification="_cX4gAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZOoQS_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if(val >= 0.0 &amp;&amp; val &lt;= 1.0){
			return;
		}else{
			throw new InvalidValueException(&quot;Invalid value' &quot; + val + &quot;'. Expected&quot;
					+ &quot; a value between 0.0 and 1.0.&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZPPUC_9EeSFFduuR7vvgw" name="validateSize" specification="_cX6VMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZPPUS_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if(val >= 0.0 &amp;&amp; val &lt;= 50.0){
			return;
		}else{
			throw new InvalidValueException(&quot;Invalid value' &quot; + val + &quot;'. Expected&quot;
					+ &quot; a value between 0.0 and 50.0.&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cXzngC_9EeSFFduuR7vvgw" name="_initializer1" isStatic="true" method="_dZLk8C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cXzngS_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cX0OkC_9EeSFFduuR7vvgw" key="init"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_cX1csC_9EeSFFduuR7vvgw" name="validateColor" isStatic="true" method="_dZMzEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cX1csS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cX3R4C_9EeSFFduuR7vvgw" name="validateShape" isStatic="true" method="_dZOBMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cX3R4S_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cX4gAC_9EeSFFduuR7vvgw" name="validateOpacity" isStatic="true" method="_dZOoQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cX5HEC_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cX6VMC_9EeSFFduuR7vvgw" name="validateSize" isStatic="true" method="_dZPPUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cX6VMS_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cYBC4C_9EeSFFduuR7vvgw" name="Vertex">
              <ownedComment xmi:id="_dcia8C_9EeSFFduuR7vvgw">
                <body>An implementation of AbstractVertex with HashMap for adjacency.
 
@author Sean Gallagher</body>
              </ownedComment>
              <generalization xmi:id="_dJqiQS_9EeSFFduuR7vvgw" general="_cLFaIC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSGskC_9EeSFFduuR7vvgw" name="currVertexIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSGskS_9EeSFFduuR7vvgw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dSH6sC_9EeSFFduuR7vvgw" name="curr" type="_cLFaIC_9EeSFFduuR7vvgw" association="_degJ0S_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSKW8C_9EeSFFduuR7vvgw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dSMMIC_9EeSFFduuR7vvgw" name="currEdgeIndex">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSMzMC_9EeSFFduuR7vvgw" value="-1"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZREgC_9EeSFFduuR7vvgw" name="Vertex" specification="_dOkQYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZREgS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZREgi_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZREgy_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super(identifier);

		outgoing = new ArrayList&lt;AbstractEdge&lt;T>>();//creates empty list of connected edges

		
		//adds a vertex to the map	
		graph.vertices.put(identifier, this);		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZRrkC_9EeSFFduuR7vvgw" name="createEdge" specification="_dJY1cC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZRrkS_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZRrki_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//identifier is to be used internally to find the Edges later
		AbstractEdge&lt;T> temp=getEdge(v2);
		if (temp==null){
			String ident = this.getIdentifier() +&quot;To&quot;+ v2.getIdentifier();
			return new Edge(this, v2, ident);
		}
		return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZS5sC_9EeSFFduuR7vvgw" name="createEdge" specification="_dJdG4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZS5sS_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZS5si_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZS5sy_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//identifier is to be used internally to find the Edges later
		createEdge(v2);
		this.getEdge(v2).setWeight(weight);
		return this.getEdge(v2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZTgwC_9EeSFFduuR7vvgw" name="createEdge" specification="_dJh_YC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZTgwS_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZTgwi_9EeSFFduuR7vvgw" name="randWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZTgwy_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//identifier is to be used internally to find the Edges later
			createEdge(v2);
			this.getEdge(v2).setWeight(this, v2, randWeight);
			return this.getEdge(v2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZUH0C_9EeSFFduuR7vvgw" name="getEdge" specification="_dJlpwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZUH0S_9EeSFFduuR7vvgw" name="v2" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dZUH0i_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>for(int i = 0; i &lt; this.outgoing.size(); i++){ 
			AbstractEdge&lt;T> anEdge=this.outgoing.get(i);
				if(anEdge.destination.compareTo(v2)==0){				
					return this.outgoing.get(i);
			}
		}		
		return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZUu4C_9EeSFFduuR7vvgw" name="next" specification="_cYSIoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZUu4S_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZUu4i_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (anIndex&lt;0 || anIndex>=outgoing.size())
			return null;
		AbstractEdge&lt;T> anEdge =this.outgoing.get(anIndex); 
		if(anEdge.eOutgoing.get(0).equals(this))
			return curr=anEdge.eOutgoing.get(1); //returns the vertex corresponding to edge destination
											// where .get(0) is the vertex source for the edge (equivalent to the parent)
		return curr=anEdge.eOutgoing.get(0); 		//vice versa, if the destination is actually the current vector it returns the source
											//after all, GraphVisualizer is an undirected graph
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZVV8C_9EeSFFduuR7vvgw" name="next" specification="_cYVzAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZVV8S_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (currVertexIndex==-1 &amp;&amp; !this.outgoing.isEmpty()){
			currVertexIndex=0;
		}
		if(currVertexIndex!=-1 &amp;&amp; currVertexIndex!=this.outgoing.size()){
			return this.next(currVertexIndex++);}
		else 
			return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZV9AC_9EeSFFduuR7vvgw" name="setColor" specification="_cYY2UC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZV9AS_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZV9Ai_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setColor(color);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZXLIC_9EeSFFduuR7vvgw" name="setShape" specification="_cYdu0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZXLIS_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZXLIi_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setShape(shape);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZXyMC_9EeSFFduuR7vvgw" name="setSize" specification="_cYj1cC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZXyMS_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZXyMi_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setSize(pixels);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZYZQC_9EeSFFduuR7vvgw" name="setOpacity" specification="_cYpVAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZYZQS_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZYZQi_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>super.setOpacity(opacity);
		return this;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZZnYC_9EeSFFduuR7vvgw" name="getNeighbors" specification="_cYwCsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZZnYS_9EeSFFduuR7vvgw" type="_dJVyIC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Collection edges = new HashSet();
		//Iterator i = new this.outgoing.iterator();
		
		edges.addAll(this.outgoing);
		if (!edges.isEmpty())
			return edges;
		return null;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZaOcC_9EeSFFduuR7vvgw" name="nextEdge" specification="_cYzGAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZaOcS_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (this.outgoing.isEmpty() || ++currEdgeIndex == this.outgoing.size()){
			currEdgeIndex = -1; //the counter is reset 
			return null;
		}
		
		return this.outgoing.get(currEdgeIndex);
			
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cYSIoC_9EeSFFduuR7vvgw" name="next" method="_dZUu4C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjpEi_9EeSFFduuR7vvgw">
                  <body>This method returns the next child of the current vertex as specified by the index integer value
	 * if the index value is above or below the number of children vertices it returns null
	 * @param anIndex represents the index of the child vertex
	 * @return AbstractVertex</body>
                </ownedComment>
                <ownedParameter xmi:id="_cYSIoS_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJotEC_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYVzAC_9EeSFFduuR7vvgw" name="next" method="_dZVV8C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjpEy_9EeSFFduuR7vvgw">
                  <body>This method returns the next child of the current vertex
	 * If no children nodes are present it returns null
	 * it also keeps track of the last next() method call and returns the following child
	 * @return AbstractVertex representing the next child of the currrent vertex</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJotES_9EeSFFduuR7vvgw" type="_cLFaIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYY2UC_9EeSFFduuR7vvgw" name="setColor" method="_dZV9AC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cYY2US_9EeSFFduuR7vvgw" name="color">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJpUIC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYdu0C_9EeSFFduuR7vvgw" name="setShape" method="_dZXLIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cYdu0S_9EeSFFduuR7vvgw" name="shape">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJpUIS_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYj1cC_9EeSFFduuR7vvgw" name="setSize" method="_dZXyMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cYj1cS_9EeSFFduuR7vvgw" name="pixels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJp7MC_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYpVAC_9EeSFFduuR7vvgw" name="setOpacity" method="_dZYZQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cYp8EC_9EeSFFduuR7vvgw" name="opacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJp7MS_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYwCsC_9EeSFFduuR7vvgw" name="getNeighbors" method="_dZZnYC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dck3MC_9EeSFFduuR7vvgw">
                  <body>This method returns a collection of exiting edges emerging from the current vertex
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOmFkC_9EeSFFduuR7vvgw" type="_dJVyIC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cYzGAC_9EeSFFduuR7vvgw" name="nextEdge" method="_dZaOcC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dck3MS_9EeSFFduuR7vvgw">
                  <body>This method returns the next unvisited edge from the current vertex's list of emerging edges
	 * if the list is empty (no edges) it returns null
	 * if the method is called repeatedly one can iterate, one edge at a time, through the entire list of existing edges
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJqiQC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJY1cC_9EeSFFduuR7vvgw" name="createEdge" method="_dZRrkC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjCAC_9EeSFFduuR7vvgw">
                  <body>Creates an edge between the calling vertex and a passed vertex.
	 * 
	 * @param v2 The second vertex that edge is between.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJZcgC_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJbRsC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJdG4C_9EeSFFduuR7vvgw" name="createEdge" method="_dZS5sC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjCAS_9EeSFFduuR7vvgw">
                  <body>Creates an edge between the calling vertex and a passed vertex.
	 * It attaches the weight attribute to an Edge
	 * @param v2 The second vertex that edge is between.
	 * @param weight Contains the weight value as a double</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJdG4S_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJdt8C_9EeSFFduuR7vvgw" name="weight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJe8ES_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJh_YC_9EeSFFduuR7vvgw" name="createEdge" method="_dZTgwC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjpEC_9EeSFFduuR7vvgw">
                  <body>Creates an edge between the calling vertex and a passed vertex.
	 * It attaches the weight attribute to an Edge and assigns it a random value
	 * @param v2 The second vertex that edge is between.
	 * @param weight Contains the weight value as a string &quot;randWeight&quot;, later 
	 * transformed in a random double between 0.0-9.0</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJh_YS_9EeSFFduuR7vvgw" name="v2" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJh_Yi_9EeSFFduuR7vvgw" name="randWeight">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dJj0kC_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dJlpwC_9EeSFFduuR7vvgw" name="getEdge" method="_dZUH0C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcjpES_9EeSFFduuR7vvgw">
                  <body>Returns the Edge between two Vertices.
	 * 
	 * @param v2 The second vertex.
	 * @return The associated Edge.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dJlpwS_9EeSFFduuR7vvgw" name="v2" type="_cLFaIC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dJm34C_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dOkQYC_9EeSFFduuR7vvgw" name="Vertex" method="_dZREgC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_dOk3cC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dOk3cS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcia8S_9EeSFFduuR7vvgw">
                  <body>Creates and vertex and adds it to the graph.
	 * @param identifier Name of the vertex.
	 * @param graph The graph the vertex is added to.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dOkQYS_9EeSFFduuR7vvgw" name="identifier" type="_dMqy8C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOkQYi_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dOk3ci_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cZSOMC_9EeSFFduuR7vvgw" name="Visualizer" isAbstract="true">
              <ownedComment xmi:id="_dck3Mi_9EeSFFduuR7vvgw">
                <body>Visualizer interface to be implemented by
GraphVisualizer, StackVisualizer, perhaps more.
@author Sean Gallagher
 *</body>
              </ownedComment>
              <ownedOperation xmi:id="_cZS1QC_9EeSFFduuR7vvgw" name="getRepresentation" visibility="protected" isAbstract="true">
                <ownedComment xmi:id="_dcleQC_9EeSFFduuR7vvgw">
                  <body>JSON exporting interface to be called internally by Bridges
	 * @returns a complete, valid JSON object (not array) for uploading</body>
                </ownedComment>
                <ownedParameter xmi:id="_cZTcUC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cZUDYC_9EeSFFduuR7vvgw" name="outputLog">
              <generalization xmi:id="_dOxEsC_9EeSFFduuR7vvgw" general="_dOn6wC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSS50C_9EeSFFduuR7vvgw" name="capturedStream" visibility="protected" isStatic="true" type="_dOpv8C_9EeSFFduuR7vvgw" association="_dehX8C_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSUvAC_9EeSFFduuR7vvgw" name="newOutputStream" visibility="protected" isStatic="true" type="_dOpv8C_9EeSFFduuR7vvgw" association="_deimEC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSVWES_9EeSFFduuR7vvgw" name="logStream" visibility="protected" isStatic="true" type="_dOpv8C_9EeSFFduuR7vvgw" association="_dej0MC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSWkMS_9EeSFFduuR7vvgw" name="logFile" visibility="protected" isStatic="true" type="_dOszQC_9EeSFFduuR7vvgw" association="_delpYC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSXyUC_9EeSFFduuR7vvgw" name="temp" visibility="protected" isStatic="true" type="_dOuocC_9EeSFFduuR7vvgw" association="_deoFoC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSYZYS_9EeSFFduuR7vvgw" name="aPathToLog" visibility="protected" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZef4C_9EeSFFduuR7vvgw" name="outputLog" specification="_cZXGsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZef4S_9EeSFFduuR7vvgw" type="_cZUDYC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>try{
			newOutputStream = System.out;
			logFile = new FileOutputStream(generatedPath(), true);
			logStream = new PrintStream(logFile);
			
			splitStream();
			recordLog();
			
			
		}  catch (FileNotFoundException e) {
			System.out.println(&quot;An error occured while logging the output errors. Log file not available.&quot;);
			e.printStackTrace();
		}  catch (Exception e){
			System.out.println(&quot;An error occured while trying to record the output.&quot;);
			e.printStackTrace();
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZfG8C_9EeSFFduuR7vvgw" name="generatedPath" specification="_cZXtwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZfG8S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>aPathToLog = System.getProperty(&quot;user.home&quot;)+ File.separator+&quot;bridgesLog.txt&quot;;
		return aPathToLog;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZhjMC_9EeSFFduuR7vvgw" name="splitStream" specification="_cZY74C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp = new ByteArrayOutputStream();
		PrintStream Stre = new PrintStream(temp);
		System.setErr(Stre);
		System.setOut(Stre);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZiKQC_9EeSFFduuR7vvgw" name="recordLog" specification="_cZZi8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZiKQS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>try {
			java.util.Date date= new java.util.Date();
			logStream.println();
			logStream.print(new Timestamp(date.getTime()));
			logStream.println();
			
		} catch (Exception e){
			System.out.println(&quot;Log to file.&quot;);
			e.printStackTrace();
		} 
		return true;	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZixUC_9EeSFFduuR7vvgw" name="returnStream" specification="_cZaKAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZixUS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>//
		this.write(temp.toString().getBytes());
			this.flush();	
			this.close();
			System.setOut(newOutputStream);
			System.setErr(newOutputStream);
			System.out.println();
			this.logMessage();
			System.out.println();
			return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZjYYC_9EeSFFduuR7vvgw" name="write" specification="_cZbYIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZjYYS_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>newOutputStream.write(b);
		logStream.write(b);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZkmgC_9EeSFFduuR7vvgw" name="write" specification="_cZfCgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZkmgS_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dZkmgi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>newOutputStream.write(b);
		logStream.write(b);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZlNkC_9EeSFFduuR7vvgw" name="write" specification="_cZis4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZlNkS_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dZlNki_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZlNky_9EeSFFduuR7vvgw" name="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dZlNlC_9EeSFFduuR7vvgw" name="lenght">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>newOutputStream.write(b, a, lenght);
		logStream.write(b, a, lenght);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZmbsC_9EeSFFduuR7vvgw" name="close" specification="_cZoMcC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>logStream.close();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZnCwC_9EeSFFduuR7vvgw" name="flush" specification="_cZqosC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>newOutputStream.flush();
		logStream.flush();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZnp0C_9EeSFFduuR7vvgw" name="logMessage" specification="_cZtE8C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Logger logger = Logger.getLogger(&quot;bridges.logging&quot;);
		 	logger.info(&quot;The log file is found here: &quot; + aPathToLog);
		  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cZXGsC_9EeSFFduuR7vvgw" name="outputLog" method="_dZef4C_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cZXGsS_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cZXGsi_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_cZXGsy_9EeSFFduuR7vvgw" type="_cZUDYC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cZXtwC_9EeSFFduuR7vvgw" name="generatedPath" visibility="private" method="_dZfG8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZYU0C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZY74C_9EeSFFduuR7vvgw" name="splitStream" isStatic="true" method="_dZhjMC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cZZi8C_9EeSFFduuR7vvgw" name="recordLog" method="_dZiKQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZZi8S_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZaKAC_9EeSFFduuR7vvgw" name="returnStream" method="_dZixUC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZaKAS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZbYIC_9EeSFFduuR7vvgw" name="write" method="_dZjYYC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZb_MC_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZfCgC_9EeSFFduuR7vvgw" name="write" method="_dZkmgC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZfCgS_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZgQoC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZis4C_9EeSFFduuR7vvgw" name="write" method="_dZlNkC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cZis4S_9EeSFFduuR7vvgw" name="b">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cZkiES_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cZjT8C_9EeSFFduuR7vvgw" name="a">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cZjT8S_9EeSFFduuR7vvgw" name="lenght">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cZoMcC_9EeSFFduuR7vvgw" name="close" method="_dZmbsC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cZqosC_9EeSFFduuR7vvgw" name="flush" method="_dZnCwC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cZtE8C_9EeSFFduuR7vvgw" name="logMessage" method="_dZnp0C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cfoGwC_9EeSFFduuR7vvgw" name="AbstractVertexTest">
              <eAnnotations xmi:id="_cfot0C_9EeSFFduuR7vvgw" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_cfot0S_9EeSFFduuR7vvgw" source="codegen">
                  <details xmi:id="_cfot0i_9EeSFFduuR7vvgw" key="codegenDirectory" value="/bridges/src/test"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_dc188S_9EeSFFduuR7vvgw">
                <body>@author mihai mehedint
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dUOMcC_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_dfFYoC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUQBoS_9EeSFFduuR7vvgw" name="testVertex1" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfGmwC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUR20S_9EeSFFduuR7vvgw" name="aFollower" visibility="package" isStatic="true" type="_cUf00C_9EeSFFduuR7vvgw" association="_dfHN0S_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUTsAC_9EeSFFduuR7vvgw" name="testVertex2" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfIb8S_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUWIQC_9EeSFFduuR7vvgw" name="testVertex" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfJqES_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da-7wC_9EeSFFduuR7vvgw" name="setUpBeforeClass" specification="_cfpU4C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>graph = new GraphVisualizer&lt;Object>();
		aFollower = new Follower(&quot;vertex1&quot;);
		testVertex1 = new Vertex&lt;>(aFollower, graph);
		testVertex2 = new Vertex&lt;String>(&quot;vertex2&quot;, graph);
		testVertex = new Vertex&lt;String>(&quot;vertex1&quot;, graph);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da_i0C_9EeSFFduuR7vvgw" name="testHashCode" specification="_cfrxIC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The hashcode generated a different number.&quot;, 3.5163422E8, 31+testVertex1.getIdentifier().hashCode(), 0.00001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da_i0S_9EeSFFduuR7vvgw" name="testAbstractVertex" specification="_cfs_QS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The vertex was not created.&quot;,testVertex1);
		assertNotEquals(&quot;There is an error in creating different vertex objects.&quot;,testVertex1, testVertex2);
		assertNotSame(&quot;The vertices refer to the same object&quot;,testVertex1, testVertex2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbAJ4C_9EeSFFduuR7vvgw" name="testGetIdentifier" specification="_cftmUi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The string identifier of vertex is null.&quot;,testVertex1.getIdentifier());
		assertEquals(&quot;The identifier has an unexpected value.&quot;, &quot;vertex1&quot;, testVertex1.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbAJ4S_9EeSFFduuR7vvgw" name="testGetColor" specification="_cfu0cS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The default color of vertex is not set ot black&quot;, &quot;black&quot;, testVertex1.getColor());
		testVertex1.setColor(&quot;red&quot;);
		assertEquals(&quot;The setColor() of vertex is not working of getColor() returns the wrog color.&quot;, &quot;red&quot;, testVertex1.getColor());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbAw8C_9EeSFFduuR7vvgw" name="testSetColor" specification="_cfwCkC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>testVertex1.setColor(&quot;yellow&quot;);
		assertEquals(&quot;The setColor() of vertex is not working of getColor() returns the wrog color.&quot;, &quot;yellow&quot;, testVertex1.getColor());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbAw8S_9EeSFFduuR7vvgw" name="testGetShape" specification="_cfxQsS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The default shape is not set correctly.&quot;, &quot;circle&quot;, testVertex1.getShape());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbAw8i_9EeSFFduuR7vvgw" name="testSetShape" specification="_cf0UAC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>testVertex1.setShape(&quot;rect&quot;);
		assertEquals(&quot;The default shape is not set correctly.&quot;, &quot;rect&quot;, testVertex1.getShape());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbBYAC_9EeSFFduuR7vvgw" name="testGetSize" specification="_cf1iIC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The default size has an unexpected value.&quot;, 1, testVertex1.getSize(), 0.00001);
		testVertex1.setSize(0.6);
		assertEquals(&quot;The getSize() or setSize() method doesn't work.&quot;, 0.6, testVertex1.getSize(), 0.00001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbBYAS_9EeSFFduuR7vvgw" name="testSetSize" specification="_cf2JMi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>testVertex1.setSize(0.6);
		assertEquals(&quot;The getSize() or setSize() method doesn't work.&quot;, 0.6, testVertex1.getSize(), 0.00001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbB_EC_9EeSFFduuR7vvgw" name="testGetOpacity" specification="_cf3XUi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The default value of opacity is not set correctly.&quot;, 1.0, testVertex1.getOpacity(), 0.00001);
		testVertex1.setOpacity(0.2);
		assertEquals(&quot;The setOpacity() or getOpacity() methods gives an unexpected result.&quot;, 0.2, testVertex1.getOpacity(), 0.00001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbB_ES_9EeSFFduuR7vvgw" name="testSetOpacity" specification="_cf3-Yy_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>testVertex1.setOpacity(0.2);
		assertEquals(&quot;The setOpacity() or getOpacity() methods gives an unexpected result.&quot;, 0.2, testVertex1.getOpacity(), 0.00001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbCmIC_9EeSFFduuR7vvgw" name="testEqualsObject" specification="_cf5MgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertFalse(&quot;The vertex objects are equal.&quot;, testVertex1.equals(testVertex2));
		assertTrue(&quot;The vertex objects are not equal.&quot;, testVertex.equals(testVertex1));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbCmIS_9EeSFFduuR7vvgw" name="testGetRepresentation" specification="_cf5zki_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The representation returns a null object&quot;, testVertex1.getRepresentation());
		System.out.println(testVertex1.getRepresentation());
		assertEquals(&quot;The getRepresentation returns a malformed JSON string.&quot;, 
				&quot;\{\&quot;color\&quot;: \&quot;red\&quot;, \&quot;opacity\&quot;: \&quot;0.2\&quot;, \&quot;size\&quot;: \&quot;0.6\&quot;, \&quot;name\&quot;: \&quot;vertex1\&quot;\}&quot;, testVertex1.getRepresentation());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dbDNMC_9EeSFFduuR7vvgw" name="testCompareTo" specification="_cf6aoy_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractVertex&lt;Follower> nullVertex = null;
		Follower aFirstFollower = new Follower(&quot;aTest1&quot;);
		AbstractVertex&lt;Follower> vertex1 = new Vertex&lt;>(aFirstFollower, graph);
		Follower aSecondFollower = new Follower(&quot;aTest2&quot;);
		AbstractVertex&lt;Follower> vertex2 = new Vertex&lt;>(aSecondFollower, graph);
		assertEquals(&quot;The comparison to a null vertex is not 0.&quot;, 0, vertex1.compareTo(nullVertex));
		assertNotEquals(&quot;The comparison to a null vertex is not 0.&quot;, 0, vertex1.compareTo(vertex2));
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cfpU4C_9EeSFFduuR7vvgw" name="setUpBeforeClass" isStatic="true" method="_da-7wC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfrxIC_9EeSFFduuR7vvgw" name="testHashCode" isLeaf="true" method="_da_i0C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfs_QS_9EeSFFduuR7vvgw" name="testAbstractVertex" isLeaf="true" method="_da_i0S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cftmUi_9EeSFFduuR7vvgw" name="testGetIdentifier" isLeaf="true" method="_dbAJ4C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfu0cS_9EeSFFduuR7vvgw" name="testGetColor" isLeaf="true" method="_dbAJ4S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfwCkC_9EeSFFduuR7vvgw" name="testSetColor" isLeaf="true" method="_dbAw8C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfxQsS_9EeSFFduuR7vvgw" name="testGetShape" isLeaf="true" method="_dbAw8S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf0UAC_9EeSFFduuR7vvgw" name="testSetShape" isLeaf="true" method="_dbAw8i_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf1iIC_9EeSFFduuR7vvgw" name="testGetSize" isLeaf="true" method="_dbBYAC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf2JMi_9EeSFFduuR7vvgw" name="testSetSize" isLeaf="true" method="_dbBYAS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf3XUi_9EeSFFduuR7vvgw" name="testGetOpacity" isLeaf="true" method="_dbB_EC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf3-Yy_9EeSFFduuR7vvgw" name="testSetOpacity" isLeaf="true" method="_dbB_ES_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf5MgC_9EeSFFduuR7vvgw" name="testEqualsObject" isLeaf="true" method="_dbCmIC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf5zki_9EeSFFduuR7vvgw" name="testGetRepresentation" isLeaf="true" method="_dbCmIS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cf6aoy_9EeSFFduuR7vvgw" name="testCompareTo" isLeaf="true" method="_dbDNMC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dMqy8C_9EeSFFduuR7vvgw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dNLJQC_9EeSFFduuR7vvgw" name="Ident"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dODTAC_9EeSFFduuR7vvgw" name="E"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_dcc7YC_9EeSFFduuR7vvgw" name="" memberEnd="_dR6fUC_9EeSFFduuR7vvgw _dcdicC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dcdicC_9EeSFFduuR7vvgw" name="" type="_cXfecC_9EeSFFduuR7vvgw" association="_dcc7YC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dcf-sC_9EeSFFduuR7vvgw" name="" memberEnd="_dR-wwC_9EeSFFduuR7vvgw _dcf-sS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dcf-sS_9EeSFFduuR7vvgw" name="" type="_cXpPcC_9EeSFFduuR7vvgw" association="_dcf-sC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd4ewC_9EeSFFduuR7vvgw" name="" memberEnd="_dd4ewS_9EeSFFduuR7vvgw _cVGRwC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd4ewS_9EeSFFduuR7vvgw" name="" type="_cVFDoC_9EeSFFduuR7vvgw" association="_dd4ewC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd6T8C_9EeSFFduuR7vvgw" name="" memberEnd="_dd6T8S_9EeSFFduuR7vvgw _dPrDoC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd6T8S_9EeSFFduuR7vvgw" name="" type="_cJnagC_9EeSFFduuR7vvgw" association="_dd6T8C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd7iES_9EeSFFduuR7vvgw" name="" memberEnd="_dd7iEi_9EeSFFduuR7vvgw _dP00oS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd7iEi_9EeSFFduuR7vvgw" name="" type="_cJnagC_9EeSFFduuR7vvgw" association="_dd7iES_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd8wMS_9EeSFFduuR7vvgw" name="" memberEnd="_dd8wMi_9EeSFFduuR7vvgw _dP3Q4S_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd8wMi_9EeSFFduuR7vvgw" name="" type="_cJnagC_9EeSFFduuR7vvgw" association="_dd8wMS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd9-US_9EeSFFduuR7vvgw" name="" memberEnd="_dd9-Ui_9EeSFFduuR7vvgw _dP6UMC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd9-Ui_9EeSFFduuR7vvgw" name="" type="_cLFaIC_9EeSFFduuR7vvgw" association="_dd9-US_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dd_McS_9EeSFFduuR7vvgw" name="" memberEnd="_dd_Mci_9EeSFFduuR7vvgw _dP8wcC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dd_Mci_9EeSFFduuR7vvgw" name="" type="_cLFaIC_9EeSFFduuR7vvgw" association="_dd_McS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deAakC_9EeSFFduuR7vvgw" name="" memberEnd="_deAakS_9EeSFFduuR7vvgw _dQBB4C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deAakS_9EeSFFduuR7vvgw" name="" type="_cMfIUC_9EeSFFduuR7vvgw" association="_deAakC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deBosC_9EeSFFduuR7vvgw" name="" memberEnd="_deBosS_9EeSFFduuR7vvgw _dQDeIC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deBosS_9EeSFFduuR7vvgw" name="" type="_cM-QgC_9EeSFFduuR7vvgw" association="_deBosC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deC20C_9EeSFFduuR7vvgw" name="" memberEnd="_deC20S_9EeSFFduuR7vvgw _dQYOQC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deC20S_9EeSFFduuR7vvgw" name="" type="_cN_kMC_9EeSFFduuR7vvgw" association="_deC20C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deEE8C_9EeSFFduuR7vvgw" name="" memberEnd="_deEE8S_9EeSFFduuR7vvgw _dQb4oC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deEE8S_9EeSFFduuR7vvgw" name="" type="_cN_kMC_9EeSFFduuR7vvgw" association="_deEE8C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deF6IC_9EeSFFduuR7vvgw" name="" memberEnd="_deF6IS_9EeSFFduuR7vvgw _dQp7EC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deF6IS_9EeSFFduuR7vvgw" name="" type="_cQMjoC_9EeSFFduuR7vvgw" association="_deF6IC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deHIQC_9EeSFFduuR7vvgw" name="" memberEnd="_deHIQS_9EeSFFduuR7vvgw _dQzFAC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deHIQS_9EeSFFduuR7vvgw" name="" type="_cRMCIC_9EeSFFduuR7vvgw" association="_deHIQC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deI9cS_9EeSFFduuR7vvgw" name="" memberEnd="_deI9ci_9EeSFFduuR7vvgw _dQ8O8C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deI9ci_9EeSFFduuR7vvgw" name="" type="_cSqo0C_9EeSFFduuR7vvgw" association="_deI9cS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deLZsS_9EeSFFduuR7vvgw" name="" memberEnd="_deLZsi_9EeSFFduuR7vvgw _dRC8oC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deLZsi_9EeSFFduuR7vvgw" name="" type="_cS7HgC_9EeSFFduuR7vvgw" association="_deLZsS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deN18C_9EeSFFduuR7vvgw" name="" memberEnd="_deN18S_9EeSFFduuR7vvgw _dRFY4C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deN18S_9EeSFFduuR7vvgw" name="" type="_cTP3oC_9EeSFFduuR7vvgw" association="_deN18C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deQSMC_9EeSFFduuR7vvgw" name="" memberEnd="_deQSMS_9EeSFFduuR7vvgw _dROi0C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deQSMS_9EeSFFduuR7vvgw" name="" type="_cU1zEC_9EeSFFduuR7vvgw" association="_deQSMC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deSHYS_9EeSFFduuR7vvgw" name="" memberEnd="_deSHYi_9EeSFFduuR7vvgw _dRUCYC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deSHYi_9EeSFFduuR7vvgw" name="" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deSHYS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deVKsC_9EeSFFduuR7vvgw" name="" memberEnd="_deVKsS_9EeSFFduuR7vvgw _dRVQgC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deVKsS_9EeSFFduuR7vvgw" name="" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deVKsC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deW_4C_9EeSFFduuR7vvgw" name="" memberEnd="_deW_4S_9EeSFFduuR7vvgw _dRXswC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deW_4S_9EeSFFduuR7vvgw" name="" type="_cVc3EC_9EeSFFduuR7vvgw" association="_deW_4C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deZcIC_9EeSFFduuR7vvgw" name="" memberEnd="_deZcIS_9EeSFFduuR7vvgw _dRclQC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deZcIS_9EeSFFduuR7vvgw" name="" type="_cV_poC_9EeSFFduuR7vvgw" association="_deZcIC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deaDMS_9EeSFFduuR7vvgw" name="" memberEnd="_deaDMi_9EeSFFduuR7vvgw _dRfBgC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deaDMi_9EeSFFduuR7vvgw" name="" type="_cV_poC_9EeSFFduuR7vvgw" association="_deaDMS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_debRUS_9EeSFFduuR7vvgw" name="" memberEnd="_debRUi_9EeSFFduuR7vvgw _dRhdwC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_debRUi_9EeSFFduuR7vvgw" name="" type="_cV_poC_9EeSFFduuR7vvgw" association="_debRUS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_decfcS_9EeSFFduuR7vvgw" name="" memberEnd="_decfci_9EeSFFduuR7vvgw _dRjS8C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_decfci_9EeSFFduuR7vvgw" name="" type="_cV_poC_9EeSFFduuR7vvgw" association="_decfcS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dedtkS_9EeSFFduuR7vvgw" name="" memberEnd="_dedtki_9EeSFFduuR7vvgw _dR7tcC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dedtki_9EeSFFduuR7vvgw" name="" type="_cXjI0C_9EeSFFduuR7vvgw" association="_dedtkS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dee7sS_9EeSFFduuR7vvgw" name="" memberEnd="_dee7si_9EeSFFduuR7vvgw _dSDCMC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dee7si_9EeSFFduuR7vvgw" name="" type="_cXxLQC_9EeSFFduuR7vvgw" association="_dee7sS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_degJ0S_9EeSFFduuR7vvgw" name="" memberEnd="_degJ0i_9EeSFFduuR7vvgw _dSH6sC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_degJ0i_9EeSFFduuR7vvgw" name="" type="_cYBC4C_9EeSFFduuR7vvgw" association="_degJ0S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dehX8C_9EeSFFduuR7vvgw" name="" memberEnd="_dehX8S_9EeSFFduuR7vvgw _dSS50C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dehX8S_9EeSFFduuR7vvgw" name="" type="_cZUDYC_9EeSFFduuR7vvgw" association="_dehX8C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deimEC_9EeSFFduuR7vvgw" name="" memberEnd="_deimES_9EeSFFduuR7vvgw _dSUvAC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deimES_9EeSFFduuR7vvgw" name="" type="_cZUDYC_9EeSFFduuR7vvgw" association="_deimEC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dej0MC_9EeSFFduuR7vvgw" name="" memberEnd="_dej0MS_9EeSFFduuR7vvgw _dSVWES_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dej0MS_9EeSFFduuR7vvgw" name="" type="_cZUDYC_9EeSFFduuR7vvgw" association="_dej0MC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_delpYC_9EeSFFduuR7vvgw" name="" memberEnd="_delpYS_9EeSFFduuR7vvgw _dSWkMS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_delpYS_9EeSFFduuR7vvgw" name="" type="_cZUDYC_9EeSFFduuR7vvgw" association="_delpYC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deoFoC_9EeSFFduuR7vvgw" name="" memberEnd="_deoFoS_9EeSFFduuR7vvgw _dSXyUC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deoFoS_9EeSFFduuR7vvgw" name="" type="_cZUDYC_9EeSFFduuR7vvgw" association="_deoFoC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfFYoC_9EeSFFduuR7vvgw" name="" memberEnd="_dfFYoS_9EeSFFduuR7vvgw _dUOMcC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfFYoS_9EeSFFduuR7vvgw" name="" type="_cfoGwC_9EeSFFduuR7vvgw" association="_dfFYoC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfGmwC_9EeSFFduuR7vvgw" name="" memberEnd="_dfGmwS_9EeSFFduuR7vvgw _dUQBoS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfGmwS_9EeSFFduuR7vvgw" name="" type="_cfoGwC_9EeSFFduuR7vvgw" association="_dfGmwC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfHN0S_9EeSFFduuR7vvgw" name="" memberEnd="_dfHN0i_9EeSFFduuR7vvgw _dUR20S_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfHN0i_9EeSFFduuR7vvgw" name="" type="_cfoGwC_9EeSFFduuR7vvgw" association="_dfHN0S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfIb8S_9EeSFFduuR7vvgw" name="" memberEnd="_dfIb8i_9EeSFFduuR7vvgw _dUTsAC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfIb8i_9EeSFFduuR7vvgw" name="" type="_cfoGwC_9EeSFFduuR7vvgw" association="_dfIb8S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfJqES_9EeSFFduuR7vvgw" name="" memberEnd="_dfJqEi_9EeSFFduuR7vvgw _dUWIQC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfJqEi_9EeSFFduuR7vvgw" name="" type="_cfoGwC_9EeSFFduuR7vvgw" association="_dfJqES_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfK4MS_9EeSFFduuR7vvgw" name="" memberEnd="_dfK4Mi_9EeSFFduuR7vvgw _dbhuUC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfK4Mi_9EeSFFduuR7vvgw" name="" type="_cJnagC_9EeSFFduuR7vvgw" association="_dfK4MS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfMGUC_9EeSFFduuR7vvgw" name="" memberEnd="_dfMGUS_9EeSFFduuR7vvgw _dbvwwC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfMGUS_9EeSFFduuR7vvgw" name="" type="_cM-QgC_9EeSFFduuR7vvgw" association="_dfMGUC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfNUcC_9EeSFFduuR7vvgw" name="" memberEnd="_dfNUcS_9EeSFFduuR7vvgw _dcHkMC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfNUcS_9EeSFFduuR7vvgw" name="" type="_cSqo0C_9EeSFFduuR7vvgw" association="_dfNUcC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfN7gS_9EeSFFduuR7vvgw" name="" memberEnd="_dfN7gi_9EeSFFduuR7vvgw _dcLOkS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfN7gi_9EeSFFduuR7vvgw" name="" type="_cS7HgC_9EeSFFduuR7vvgw" association="_dfN7gS_9EeSFFduuR7vvgw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_bu2xIC_9EeSFFduuR7vvgw" name="bridgesdrivers">
            <packagedElement xmi:type="uml:Class" xmi:id="_cZ-xwC_9EeSFFduuR7vvgw" name="AbstractEdgeTest">
              <ownedComment xmi:id="_dcnTcC_9EeSFFduuR7vvgw">
                <body>@author mihai
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dSegAC_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_deossS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSfuIS_9EeSFFduuR7vvgw" name="bob" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dep60S_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSiKYC_9EeSFFduuR7vvgw" name="exception" type="_dKCVsS_9EeSFFduuR7vvgw" association="_derI8S_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dSiKYS_9EeSFFduuR7vvgw" value="ExpectedException.none()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dcn6gC_9EeSFFduuR7vvgw" name="jane" visibility="package" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfOikS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcpIoC_9EeSFFduuR7vvgw" name="bill" visibility="package" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfPwsS_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZrUMC_9EeSFFduuR7vvgw" name="setUpBeforeClass" specification="_caB1EC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>graph=new GraphVisualizer&lt;>();
		bob = new Vertex(&quot;Bob&quot;, graph);
		jane = new Vertex(&quot;Jane&quot;, graph);
		bill = new Vertex(&quot;Bill&quot;, graph);
		bob.createEdge(jane);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZr7QC_9EeSFFduuR7vvgw" name="testAbstractEdgeAbstractVertexAbstractVertexString" specification="_caGGgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The edge value is null.&quot;, bob.getEdge(jane));
		bill.createEdge(jane);
		assertNull(&quot;The reversed edge value is not null.&quot;, jane.getEdge(bill));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZsiUC_9EeSFFduuR7vvgw" name="testAbstractEdgeString" specification="_caIiwS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>jane.createEdge(bob,&quot;randWeight&quot;);
		assertNotEquals(&quot;The edge value was not set correctly.&quot;, 1, jane.getEdge(bob).getWeight(), 0.0001);
		assertEquals(&quot;The default edge value is not 1.&quot;,1, bob.getEdge(jane).getWeight(),0.0001);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZtJYC_9EeSFFduuR7vvgw" name="testGetIdentifier" specification="_caLmEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The vertex identifier is null.&quot;, bob.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZtJYS_9EeSFFduuR7vvgw" name="testGetWeight" specification="_caOpYC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>jane.createEdge(bob,&quot;randWeight&quot;);
		assertNotEquals(&quot;The edge value was not set correctly.&quot;, 1, jane.getEdge(bob).getWeight(), 0.0001);
		jane.createEdge(bob, 12);
		assertEquals(&quot;The edge value was not set correctly.&quot;, 12, jane.getEdge(bob).getWeight(), 0.0001);
		assertEquals(&quot;The default edge value is not 1.&quot;,1, bob.getEdge(jane).getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZtwcC_9EeSFFduuR7vvgw" name="testSetWeightDouble" specification="_caRFoi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>jane.createEdge(bob,&quot;randWeight&quot;);
		assertNotEquals(&quot;The edge value was not set correctly.&quot;, 1, jane.getEdge(bob).getWeight(), 0.0001);
		jane.createEdge(bob, 12.3);
		assertEquals(&quot;The edge value was not set correctly.&quot;, 12.3, jane.getEdge(bob).getWeight(), 0.0001);
		assertEquals(&quot;The default edge value is not 1.&quot;,1, bob.getEdge(jane).getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZuXgC_9EeSFFduuR7vvgw" name="testSetWeightAbstractVertexAbstractVertexString" specification="_caTh4S_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>jane.createEdge(bob,&quot;randWeight&quot;);
		assertNotEquals(&quot;The edge value was not set correctly.&quot;, 1, jane.getEdge(bob).getWeight(), 0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZuXgS_9EeSFFduuR7vvgw" name="testGetColor" specification="_caV-IC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge&lt;Follower> edge1 = bob.getEdge(jane).setColor(&quot;red&quot;);
		assertEquals(&quot;The edge color is not correctly set.&quot;,&quot;red&quot;,edge1.getColor());
		assertNotNull(&quot;The color attribute is null.&quot;,edge1.getColor());
		
		AbstractEdge&lt;Follower> edge2 = (new Vertex(&quot;x&quot;,graph)).createEdge(new Vertex(&quot;y&quot;, graph));
		assertEquals(&quot;The edge attribute is not null&quot;,&quot;&quot; ,edge2.getColor());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZu-kC_9EeSFFduuR7vvgw" name="testSetColor" specification="_caZBcC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge&lt;Follower> edge1 = bob.getEdge(jane).setColor(&quot;red&quot;);
		assertEquals(&quot;The edge color is not correctly set.&quot;,&quot;red&quot;,edge1.getColor());
		assertNotNull(&quot;The color attribute is null.&quot;,edge1.getColor());
		
		AbstractEdge&lt;Follower> edge2 = (new Vertex(&quot;x&quot;,graph)).createEdge(new Vertex(&quot;y&quot;, graph));
		assertEquals(&quot;The edge attribute is not null&quot;,&quot;&quot; ,edge2.getColor());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZvloC_9EeSFFduuR7vvgw" name="testGetDash" specification="_cacEwC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The dash pattern was not set correctly.&quot;, &quot;&quot;, bob.getEdge(jane).getDash());
		bob.getEdge(jane).setDash(new double[]{5,10,5});
		assertEquals(&quot;The dash pattern was not set correctly.&quot;, &quot;5.0,10.0,5.0&quot;, bob.getEdge(jane).getDash());
		assertNotNull(&quot;The dash pattern is null&quot;, bob.getEdge(jane).getDash());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZvloS_9EeSFFduuR7vvgw" name="testSetDash" specification="_cad58C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge&lt;Follower> edge2 = (new Vertex(&quot;x&quot;,graph)).createEdge(new Vertex(&quot;y&quot;, graph));
		assertEquals(&quot;The dash parameter was empty&quot;, &quot;&quot;, edge2.getDash());
		assertEquals(&quot;The dash pattern was not set correctly.&quot;, &quot;5.0,10.0,5.0&quot;, bob.getEdge(jane).getDash());
		bob.getEdge(jane).setDash(new double[]{});
		assertEquals(&quot;The dash pattern was not set correctly.&quot;, &quot;5.0,10.0,5.0&quot;, bob.getEdge(jane).getDash());
		bob.getEdge(jane).setDash(new double[]{1,2,3});
		assertEquals(&quot;The dash pattern was not set correctly.&quot;, &quot;1.0,2.0,3.0&quot;, bob.getEdge(jane).getDash());
		assertNotNull(&quot;The dash pattern is null&quot;, bob.getEdge(jane).getDash());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZwMsC_9EeSFFduuR7vvgw" name="testGetWidth" specification="_cafIEi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The default width parameter (value 1.0) is not set correctly.&quot;,1.0 ,bob.getEdge(jane).getWidth(), 0.0001);
		bob.getEdge(jane).setWidth(0);
		assertEquals(&quot;The width parameter is not set correctly.&quot;,0 ,bob.getEdge(jane).getWidth(), 0.0001);
		bob.getEdge(jane).setWidth(12.4);
		assertEquals(&quot;The width parameter is not set correctly.&quot;,12.4 ,bob.getEdge(jane).getWidth(), 0.0001);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZwzwC_9EeSFFduuR7vvgw" name="testSetWidth" specification="_cahkUi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>bob.getEdge(jane).setWidth(0);
		assertEquals(&quot;The width parameter is not set correctly.&quot;,0 ,bob.getEdge(jane).getWidth(), 0.0001);
		bob.getEdge(jane).setWidth(12.4);
		assertEquals(&quot;The width parameter is not set correctly.&quot;,12.4 ,bob.getEdge(jane).getWidth(), 0.0001);
		
		boolean thrown = true;
		exception.expect(InvalidValueException.class);
			bob.getEdge(jane).setWidth(-12.4);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZwzwS_9EeSFFduuR7vvgw" name="testGetOpacity" specification="_cajZgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The opacity default value is not set to 1.&quot;, 1.0, bob.getEdge(jane).getOpacity(), 0.0001);
		bob.getEdge(jane).setOpacity(0.1);
		assertEquals(&quot;The opacity attribute is incorrect.&quot;, 0.1, bob.getEdge(jane).getOpacity(), 0.0001);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZxa0C_9EeSFFduuR7vvgw" name="testSetOpacity" specification="_cal1wC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>bob.getEdge(jane).setOpacity(0.5);
		assertEquals(&quot;The opacity attribute is incorrect.&quot;, 0.5, bob.getEdge(jane).getOpacity(), 0.0001);
		exception.expect(InvalidValueException.class);
		bob.getEdge(jane).setOpacity(-1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZxa0S_9EeSFFduuR7vvgw" name="testGetRepresentation" specification="_canq8i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;GetRepresentation returned a null value.&quot;, bob.getEdge(jane).getRepresentation());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZyB4C_9EeSFFduuR7vvgw" name="testCompareTo" specification="_capgIS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Vertex&lt;Follower> vertex3 = new Vertex(&quot;vertex3&quot;, graph);
		Vertex&lt;Follower> vertex4 = new Vertex(&quot;vertex4&quot;, graph);
		vertex3.createEdge(vertex4);
		AbstractEdge&lt;Follower> edge5 = null;
		assertEquals(&quot;The compareTo with null returned a anexpected value.&quot;, 0,vertex3.getEdge(vertex4).compareTo(edge5));
		bob.createEdge(vertex3);
		assertNotEquals(&quot;The compareTo with null returned a anexpected value.&quot;, 0,vertex3.getEdge(vertex4).compareTo(bob.getEdge(vertex3)));
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_caB1EC_9EeSFFduuR7vvgw" name="setUpBeforeClass" isStatic="true" method="_dZrUMC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caGGgC_9EeSFFduuR7vvgw" name="testAbstractEdgeAbstractVertexAbstractVertexString" isLeaf="true" method="_dZr7QC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caIiwS_9EeSFFduuR7vvgw" name="testAbstractEdgeString" isLeaf="true" method="_dZsiUC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caLmEC_9EeSFFduuR7vvgw" name="testGetIdentifier" isLeaf="true" method="_dZtJYC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caOpYC_9EeSFFduuR7vvgw" name="testGetWeight" isLeaf="true" method="_dZtJYS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caRFoi_9EeSFFduuR7vvgw" name="testSetWeightDouble" isLeaf="true" method="_dZtwcC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caTh4S_9EeSFFduuR7vvgw" name="testSetWeightAbstractVertexAbstractVertexString" isLeaf="true" method="_dZuXgC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caV-IC_9EeSFFduuR7vvgw" name="testGetColor" isLeaf="true" method="_dZuXgS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_caZBcC_9EeSFFduuR7vvgw" name="testSetColor" isLeaf="true" method="_dZu-kC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cacEwC_9EeSFFduuR7vvgw" name="testGetDash" isLeaf="true" method="_dZvloC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cad58C_9EeSFFduuR7vvgw" name="testSetDash" isLeaf="true" method="_dZvloS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cafIEi_9EeSFFduuR7vvgw" name="testGetWidth" isLeaf="true" method="_dZwMsC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cahkUi_9EeSFFduuR7vvgw" name="testSetWidth" isLeaf="true" method="_dZwzwC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cajZgC_9EeSFFduuR7vvgw" name="testGetOpacity" isLeaf="true" method="_dZwzwS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cal1wC_9EeSFFduuR7vvgw" name="testSetOpacity" isLeaf="true" method="_dZxa0C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_canq8i_9EeSFFduuR7vvgw" name="testGetRepresentation" isLeaf="true" method="_dZxa0S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_capgIS_9EeSFFduuR7vvgw" name="testCompareTo" isLeaf="true" method="_dZyB4C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ca1tYC_9EeSFFduuR7vvgw" name="ActorTest">
              <ownedComment xmi:id="_dcq90C_9EeSFFduuR7vvgw">
                <body>@author mihai
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dSnp8C_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_desXEC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSr7YC_9EeSFFduuR7vvgw" name="anActor" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_detlMC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSuXoC_9EeSFFduuR7vvgw" name="ac" visibility="package" isStatic="true" type="_cMK_QC_9EeSFFduuR7vvgw" association="_deuMQS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSvlwC_9EeSFFduuR7vvgw" name="sameActor" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_devaYS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSxa8S_9EeSFFduuR7vvgw" name="anotherActor" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dewogC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dSz3MC_9EeSFFduuR7vvgw" name="anEmptyActor" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dexPkS_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ26YC_9EeSFFduuR7vvgw" name="setUpBeforeClass" specification="_ca5XwC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>ac = new Actor(&quot;Bob&quot;);
		Actor sameAc = new Actor(&quot;Bob&quot;);
		graph = new GraphVisualizer&lt;>();
		anActor = new Vertex&lt;>(ac, graph);
		sameActor = new Vertex&lt;>(sameAc, graph);
		Actor anotherAc = new Actor(&quot;Jane&quot;);
		anotherActor = new Vertex&lt;>(anotherAc, graph);
		Actor anEmptyAc = new Actor(&quot;&quot;);
		anEmptyActor = new Vertex(anEmptyAc, graph);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ26YS_9EeSFFduuR7vvgw" name="testHashCode" specification="_ca-3UC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The vertex created is a null object.&quot;, anActor);
		assertNotEquals(&quot;The hashcode identifier returns 31 corresponding to a vertex with no identifier.&quot;, 31, anActor.hashCode(),0.00001);
		assertEquals(&quot;The hashcode identifier does not return 31 corresponding to a vertex with no identifier.&quot;, 31, anEmptyActor.hashCode(),0.00001);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ3hcC_9EeSFFduuR7vvgw" name="testActor" specification="_cbB6oC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The name of the actor is not set correctly.&quot;, &quot;Bob&quot;, anActor.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ4IgC_9EeSFFduuR7vvgw" name="testGetName" specification="_cbDv0i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;The GetName method returned a null value.&quot;, ac.getName());
		assertEquals(&quot;The GetName method did not return the expected value.&quot;, &quot;Bob&quot;, ac.getName());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ4vkC_9EeSFFduuR7vvgw" name="testCompareTo" specification="_cbGMEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotEquals(&quot;The actor vertices are equal.&quot;, 0, anActor.compareTo(anotherActor));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ4vkS_9EeSFFduuR7vvgw" name="testEqualsObject" specification="_cbHaMi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertFalse(&quot;The vertices objects are equal&quot;, anActor.equals(anotherActor));
		assertTrue(&quot;The 2 vertices are not equal.&quot;, anActor.equals(sameActor));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ5WoC_9EeSFFduuR7vvgw" name="testToString" specification="_cbJ2cC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The ToString method did not return the expected result.&quot;,&quot;Bob&quot;,anActor.getIdentifier());
		assertEquals(&quot;The ToString method did not return the expected result.&quot;,&quot;Bob&quot;,anActor.getIdentifier());
		assertEquals(&quot;The ToString method did not return the expected result.&quot;,&quot;&quot;,anEmptyActor.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ca5XwC_9EeSFFduuR7vvgw" name="setUpBeforeClass" isStatic="true" method="_dZ26YC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ca70AC_9EeSFFduuR7vvgw" name="setUp" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ca-3UC_9EeSFFduuR7vvgw" name="testHashCode" isLeaf="true" method="_dZ26YS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbB6oC_9EeSFFduuR7vvgw" name="testActor" isLeaf="true" method="_dZ3hcC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbDv0i_9EeSFFduuR7vvgw" name="testGetName" isLeaf="true" method="_dZ4IgC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbGMEC_9EeSFFduuR7vvgw" name="testCompareTo" isLeaf="true" method="_dZ4vkC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbHaMi_9EeSFFduuR7vvgw" name="testEqualsObject" isLeaf="true" method="_dZ4vkS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbJ2cC_9EeSFFduuR7vvgw" name="testToString" isLeaf="true" method="_dZ5WoC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cbaVIC_9EeSFFduuR7vvgw" name="AllTests"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_cbdYcC_9EeSFFduuR7vvgw" name="AllTestsCommandLine">
              <ownedAttribute xmi:id="_dS5WwC_9EeSFFduuR7vvgw" name="classTests" isStatic="true" type="_dKY7AS_9EeSFFduuR7vvgw" association="_deydsC_9EeSFFduuR7vvgw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dS590C_9EeSFFduuR7vvgw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dS7zAC_9EeSFFduuR7vvgw" value="{AbstractEdgeTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AbstractVertexTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ActorTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;BSTNodeTest.class, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EdgeTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SampleDataGeneratorTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;StackNodeTest.class,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VertexTest.class}"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ8Z8C_9EeSFFduuR7vvgw" name="main" specification="_cbfNoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dZ8Z8S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dZ8Z8i_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>outputLog theLog = new outputLog();
		
	    for(int i=0;i&lt;classTests.length;i++){
	    		Result aClassTest = JUnitCore.runClasses(classTests[i]);
	    		for (Failure aClassFailure : aClassTest.getFailures())
	    			System.out.println(aClassFailure.toString());
	    }
	    
	    theLog.returnStream();

	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cbfNoC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_dZ8Z8C_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cbf0sC_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cbf0sS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cbjfEC_9EeSFFduuR7vvgw" name="BSTNodeTest">
              <ownedAttribute xmi:id="_dS9oMC_9EeSFFduuR7vvgw" name="root" visibility="package" isStatic="true" type="_cM-QgC_9EeSFFduuR7vvgw" association="_dezEwS_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dS-PQC_9EeSFFduuR7vvgw" value="new BSTNode(&quot;Bob&quot;, 6)"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ9BAC_9EeSFFduuR7vvgw" name="beforeClass" specification="_cblUQC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>root.setLeftChild(new BSTNode(&quot;Steve&quot;, 2));
		root.setRightChild(new BSTNode(&quot;John&quot;, 10));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ9oEC_9EeSFFduuR7vvgw" name="testGetVal" specification="_cbnwgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(6, root.getVal());

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ9oES_9EeSFFduuR7vvgw" name="testSetLeftChild" specification="_cbo-oi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>root.setLeftChild(new BSTNode(&quot;asdsffdgd&quot;, 6));
		assertNotNull(root.getLeftChild());
		assertEquals(2,  root.getLeftChild().getVal());
		

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ-PIC_9EeSFFduuR7vvgw" name="testGetLeftChild" specification="_cbra4C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;Steve&quot;, root.getLeftChild().getIdentifier());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ-PIS_9EeSFFduuR7vvgw" name="testGetLeftEdge" specification="_cbtQEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(root.getLeftEdge());

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ-2MC_9EeSFFduuR7vvgw" name="testSetRightChild" specification="_cbvFQC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(root.getRightChild());
		assertEquals(10,  root.getRightChild().getVal());

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ-2MS_9EeSFFduuR7vvgw" name="testGetRightChild" specification="_cbwTYC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;John&quot;, root.getRightChild().getIdentifier());

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dZ_dQC_9EeSFFduuR7vvgw" name="testGetRightEdge" specification="_cbxhgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(root.getRightEdge());

	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cblUQC_9EeSFFduuR7vvgw" name="beforeClass" isStatic="true" method="_dZ9BAC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbnwgC_9EeSFFduuR7vvgw" name="testGetVal" isLeaf="true" method="_dZ9oEC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbo-oi_9EeSFFduuR7vvgw" name="testSetLeftChild" isLeaf="true" method="_dZ9oES_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbra4C_9EeSFFduuR7vvgw" name="testGetLeftChild" isLeaf="true" method="_dZ-PIC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbtQEC_9EeSFFduuR7vvgw" name="testGetLeftEdge" isLeaf="true" method="_dZ-PIS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbvFQC_9EeSFFduuR7vvgw" name="testSetRightChild" isLeaf="true" method="_dZ-2MC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbwTYC_9EeSFFduuR7vvgw" name="testGetRightChild" isLeaf="true" method="_dZ-2MS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cbxhgC_9EeSFFduuR7vvgw" name="testGetRightEdge" isLeaf="true" method="_dZ_dQC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cb4PMC_9EeSFFduuR7vvgw" name="EdgeTest">
              <ownedAttribute xmi:id="_dTArgC_9EeSFFduuR7vvgw" name="gv" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_de0S4S_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTB5oS_9EeSFFduuR7vvgw" name="Bob" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_de1hAC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTDHwS_9EeSFFduuR7vvgw" name="Jane" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_de2IES_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTE88C_9EeSFFduuR7vvgw" name="temp" visibility="package" isStatic="true" type="_cJnagC_9EeSFFduuR7vvgw" association="_de3WMC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daB5gC_9EeSFFduuR7vvgw" name="setUp" specification="_cb75kC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>gv =new GraphVisualizer();
		Bob = new Vertex(&quot;Bob&quot;,gv);
		Jane = new Vertex(&quot;Jane&quot;,gv);
		temp=Bob.createEdge(Jane, 12.3);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daB5gS_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexString" specification="_cb_j8C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp=Bob.createEdge(Jane,15);
		assertEquals(&quot;The destination vertex is different than expected&quot;,temp, Bob.getEdge(Jane));
		assertEquals(&quot;The value of edge weight does not match the expected value.&quot;, 15, temp.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daCgkC_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexStringDouble" specification="_ccBZIS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The destination vertex is different than expected&quot;,temp, Bob.getEdge(Jane));
		assertNull(&quot;The edge is not null&quot;, Jane.getEdge(Bob));
		assertEquals(&quot;The value of edge weight does not match the expected value.&quot;, 12.3, temp.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daDHoC_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexStringString" specification="_ccDOUS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bob.createEdge(Jane,&quot;randWeight&quot;);
		assertEquals(&quot;The destination vertex is different than expected&quot;,temp, Bob.getEdge(Jane));
		assertNull(&quot;The edge is not null&quot;, Jane.getEdge(Bob));
		assertEquals(&quot;The value of edge weight does not match the expected value.&quot;, 5, temp.getWeight(),5);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daDHoS_9EeSFFduuR7vvgw" name="testAbstractEdgeAbstractVertexAbstractVertexString" specification="_ccFDgC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;The destination vertex is different than expected&quot;,temp, Bob.getEdge(Jane));
		assertNull(&quot;The edge is not null&quot;, Jane.getEdge(Bob));
		assertEquals(&quot;The value of edge weight does not match the expected value.&quot;, 12.3, temp.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daDusC_9EeSFFduuR7vvgw" name="testAbstractEdgeString" specification="_ccG4sC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractVertex Jack = new Vertex(&quot;Jack&quot;, gv);
		AbstractEdge tempRandom = new Edge(Bob, Jack,&quot;randWeight&quot;);
		AbstractEdge  tempNull = new Edge(Bob, Jack,&quot;rand&quot;);
		assertNotNull(&quot;The weight parameter is Null&quot;,tempRandom.getWeight());
		assertEquals(&quot;The weight parameter is null&quot;,1, tempNull.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daEVwC_9EeSFFduuR7vvgw" name="testGetIdentifier" specification="_ccIt4i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;Incorrect identifier.&quot;, &quot;BobToJane&quot;,temp.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daEVwS_9EeSFFduuR7vvgw" name="testGetWeight" specification="_ccLKIC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge anEdge = Bob.createEdge(new Vertex(&quot;Bill&quot;, gv));
		assertEquals(&quot;The edge weight is not set. Weight is 1 by default.&quot;, 1,anEdge.getWeight(), 0.0001);
		assertEquals(&quot;The edge weight parameter has an unexpected value by GetWeight method.&quot;, 12.3, temp.getWeight(), 0.0001);
		Bob.getEdge(Jane).setWeight(20);
		assertEquals(&quot;The edge weight parameter is incorrect.&quot;,20,temp.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daE80C_9EeSFFduuR7vvgw" name="testSetWeightDouble" specification="_ccNmYC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge anEdge = Bob.createEdge(new Vertex(&quot;Bill&quot;, gv));
		assertEquals(&quot;The edge weight is not set. Weight is 1 by default.&quot;, 1,anEdge.getWeight(), 0.0001);
		assertEquals(&quot;The edge weight parameter is incorrect.&quot;,12.3,temp.getWeight(),0.0001);
		Bob.getEdge(Jane).setWeight(20);
		assertEquals(&quot;The edge weight parameter is incorrect.&quot;,20,temp.getWeight(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daFj4C_9EeSFFduuR7vvgw" name="testSetWeightAbstractVertexAbstractVertexString" specification="_ccQCoC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setWeight(Bob,Jane,&quot;randWeight&quot;);
		//assertEquals(&quot;The double value of edge weight is incorrect&quot;, ,temp.weight);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daFj4S_9EeSFFduuR7vvgw" name="testGetColor" specification="_ccR30i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setColor(&quot;blue&quot;);
		assertEquals(&quot;The set color is incorrect&quot;,&quot;blue&quot;,temp.getColor());
		assertNotNull(&quot;The set color is incorrect&quot;,temp.getColor());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daGK8C_9EeSFFduuR7vvgw" name="testSetColor" specification="_ccTtAC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setColor(&quot;blue&quot;);
		assertEquals(&quot;The set color is incorrect&quot;,&quot;blue&quot;,temp.getColor());
		assertNotNull(&quot;The set color is incorrect&quot;,temp.getColor());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daGyAC_9EeSFFduuR7vvgw" name="testGetDash" specification="_ccViMS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>double [] dash={5.0, 10.0,5.0};
		StringBuilder sb = new StringBuilder(&quot;&quot;);
		for (double aDash : dash) {
			sb.append(aDash);
			sb.append(',');
		}
		sb.deleteCharAt(sb.length()-1);
		String str= sb.toString();
		temp.setDash(dash);
		
		for(double aDouble:dash)
		assertNotNull(&quot;The dash string is null.&quot;,temp.getDash());
		assertNotEquals(&quot;The dash string is empty.&quot;,&quot;&quot;,temp.getDash());
		assertEquals(&quot;The dash array is not set properly.&quot;,str,temp.getDash());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daHZEC_9EeSFFduuR7vvgw" name="testSetDash" specification="_ccX-cC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>double [] dash={5.0, 10.0, 5.0};
		StringBuilder sb = new StringBuilder(&quot;&quot;);
		for (double aDash : dash) {
			sb.append(aDash);
			sb.append(',');
		}
		sb.deleteCharAt(sb.length()-1);
		String str= sb.toString();
		temp.setDash(dash);
		
		for(double aDouble:dash)
		assertNotNull(&quot;The dash string is null.&quot;,temp.getDash());
		assertNotEquals(&quot;The dash string is empty.&quot;,&quot;&quot;,temp.getDash());
		assertEquals(&quot;The dash array is not set properly.&quot;,str,temp.getDash());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daIAIC_9EeSFFduuR7vvgw" name="testGetWidth" specification="_ccZzoS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setWidth(10.2);
		assertEquals(&quot;The width value is not set properly.&quot;,10.2,temp.getWidth(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daIAIS_9EeSFFduuR7vvgw" name="testSetWidth" specification="_cccP4C_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setWidth(10.2);
		assertEquals(&quot;The width value is not set corectly.&quot;,10.2,temp.getWidth(),0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daInMC_9EeSFFduuR7vvgw" name="testGetOpacity" specification="_cceFEC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setOpacity(0.4);
		assertNotNull(&quot;The opacity was not set.&quot;,temp.getOpacity());
		assertEquals(&quot;The opacity is not set correctly&quot;,0.4, temp.getOpacity(), 0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daJOQC_9EeSFFduuR7vvgw" name="testSetOpacity" specification="_ccghUC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>temp.setOpacity(0.1);
		assertNotNull(&quot;The opacity was not set.&quot;,temp.getOpacity());
		assertEquals(&quot;The opacity is not set correctly&quot;, 0.1, temp.getOpacity(), 0.0001);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daJOQS_9EeSFFduuR7vvgw" name="testGetRepresentation" specification="_cciWgi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(&quot;Representation is null&quot;,gv);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daJ1UC_9EeSFFduuR7vvgw" name="testCompareTo" specification="_cckLsS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>AbstractEdge aNullEdge=null;
		AbstractEdge anEdge=Bob.createEdge(new Vertex(&quot;jack&quot;,gv));
		assertEquals(&quot;The expected null edge is not null.&quot;,0,temp.compareTo(aNullEdge));
		assertNotEquals(&quot;The compareTo method is not returning the correct value&quot;, 0, anEdge.compareTo(temp));
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cb75kC_9EeSFFduuR7vvgw" name="setUp" method="_daB5gC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cb_j8C_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexString" isLeaf="true" method="_daB5gS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccBZIS_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexStringDouble" isLeaf="true" method="_daCgkC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccDOUS_9EeSFFduuR7vvgw" name="testEdgeAbstractVertexAbstractVertexStringString" isLeaf="true" method="_daDHoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccFDgC_9EeSFFduuR7vvgw" name="testAbstractEdgeAbstractVertexAbstractVertexString" isLeaf="true" method="_daDHoS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccG4sC_9EeSFFduuR7vvgw" name="testAbstractEdgeString" isLeaf="true" method="_daDusC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccIt4i_9EeSFFduuR7vvgw" name="testGetIdentifier" isLeaf="true" method="_daEVwC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccLKIC_9EeSFFduuR7vvgw" name="testGetWeight" isLeaf="true" method="_daEVwS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccNmYC_9EeSFFduuR7vvgw" name="testSetWeightDouble" isLeaf="true" method="_daE80C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccQCoC_9EeSFFduuR7vvgw" name="testSetWeightAbstractVertexAbstractVertexString" isLeaf="true" method="_daFj4C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccR30i_9EeSFFduuR7vvgw" name="testGetColor" isLeaf="true" method="_daFj4S_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccTtAC_9EeSFFduuR7vvgw" name="testSetColor" isLeaf="true" method="_daGK8C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccViMS_9EeSFFduuR7vvgw" name="testGetDash" isLeaf="true" method="_daGyAC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccX-cC_9EeSFFduuR7vvgw" name="testSetDash" isLeaf="true" method="_daHZEC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccZzoS_9EeSFFduuR7vvgw" name="testGetWidth" isLeaf="true" method="_daIAIC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cccP4C_9EeSFFduuR7vvgw" name="testSetWidth" isLeaf="true" method="_daIAIS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cceFEC_9EeSFFduuR7vvgw" name="testGetOpacity" isLeaf="true" method="_daInMC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ccghUC_9EeSFFduuR7vvgw" name="testSetOpacity" isLeaf="true" method="_daJOQC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cciWgi_9EeSFFduuR7vvgw" name="testGetRepresentation" isLeaf="true" method="_daJOQS_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cckLsS_9EeSFFduuR7vvgw" name="testCompareTo" isLeaf="true" method="_daJ1UC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ccvK0C_9EeSFFduuR7vvgw" name="HelloWorld">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daOGwC_9EeSFFduuR7vvgw" name="main" specification="_ccxnEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daOGwS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_daOGwi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>GraphVisualizer&lt;Follower> gv = new GraphVisualizer&lt;>();
		Bridge.init(0, &quot;693144430396&quot;, gv, &quot;mmehedin@uncc.edu&quot;);
		//Bridge.setServerURL(&quot;http://edu.uncc.cs.bridges.cs.uncc.edu&quot;);
		
		Vertex&lt;Follower> HelloWorld = new Vertex(&quot;HelloWorld&quot;, gv);
		
		Vertex&lt;Follower> HiWorld = new Vertex(&quot;Back&quot;, gv);
		Vertex&lt;Follower> Bob = new Vertex(&quot;Bob&quot;, gv);
		Vertex&lt;Follower> Steve = new Vertex(&quot;Steve&quot;, gv);
		
		AbstractEdge&lt;Follower> anEdge=HelloWorld.createEdge(HiWorld);
		HelloWorld.createEdge(Bob,12);
		HelloWorld.createEdge(Bob,1);
		Steve.createEdge(HelloWorld);
		
		Steve.createEdge(Bob);
		
		Vertex&lt;Follower> John = new Vertex(&quot;John&quot;, gv);
		
		Vertex&lt;Follower> Dave = new Vertex(&quot;Dave&quot;, gv);
		
		//John.createEdge(Dave);

		Dave.createEdge(John,&quot;hashCodeWeight&quot;);
		
		Dave.getEdge(John).setColor(&quot;red&quot;);//works
		Dave.getEdge(John).setWidth(5);//works
		Dave.getEdge(John).setDash(new double[]{5, 10, 5});//works
		//Dave.getEdge(Dave).setOpacity(.1);//doesn't work unless the edge is created first
		Dave.setShape(&quot;Square&quot;);
		Bob.setShape(&quot;Square&quot;);//works
		Bob.setColor(&quot;pink&quot;);//works
		Bob.setOpacity(1);// works
		Bob.setSize(20);//works
		
		Bridge.complete();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ccxnEC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_daOGwC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ccxnES_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cczcQS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cc2fkC_9EeSFFduuR7vvgw" name="LinkedListDriver">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daPU4C_9EeSFFduuR7vvgw" name="main" specification="_cc470C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daPU4S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_daPU4i_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub
		outputLog theLog = new outputLog();
		LinkedList&lt;Object> aList= new LinkedList&lt;>();
		
		Bridge.init(0, &quot;602077858353&quot;, aList.list, &quot;mmehedin@uncc.edu&quot;);
		Bridge.setServerURL(&quot;http://bridges.cs.uncc.edu&quot;);
		
		aList.insert(&quot;A&quot;, 1);
		aList.insert(&quot;B&quot;, 1);
		aList.append(&quot;C&quot;);
		
		Bridge.complete();
		
		theLog.returnStream();

	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cc470C_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_daPU4C_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cc470S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cc6J8C_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cc7_IC_9EeSFFduuR7vvgw" name="RandomGraph">
              <generalization xmi:id="_dK1m8C_9EeSFFduuR7vvgw" general="_cU1zEC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTMRsC_9EeSFFduuR7vvgw" name="graph" visibility="protected" type="_cU1zEC_9EeSFFduuR7vvgw" association="_de4kUC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTOt8C_9EeSFFduuR7vvgw" name="root" visibility="protected" type="_cYBC4C_9EeSFFduuR7vvgw" association="_de5ycC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTRKMC_9EeSFFduuR7vvgw" name="numberOfChildren" visibility="package" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTRKMS_9EeSFFduuR7vvgw" value="30"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dTS_YC_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls" visibility="package" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTTmcC_9EeSFFduuR7vvgw" value="10"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daQjAC_9EeSFFduuR7vvgw" name="RandomGraph" specification="_cdBesC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daQjAS_9EeSFFduuR7vvgw" type="_cc7_IC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>graph = new GraphVisualizer&lt;T>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daRKEC_9EeSFFduuR7vvgw" name="randomVertex" specification="_dKr18C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daRKES_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daRKEi_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (graph==null || graph.vertices.size()==0) 
			throw new IllegalArgumentException
			(&quot;No vertices were added to graph or graph was not initialized!&quot;);
		Collection&lt;AbstractVertex&lt;Follower>> vertices= graph.vertices.values();
		Object[] i= vertices.toArray();

		return (Vertex&lt;Follower>)i[new Random().nextInt(vertices.size())];
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daRxIC_9EeSFFduuR7vvgw" name="randomColor" specification="_cdD68C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daRxIS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Object [] a=Validation.COLOR_NAMES.toArray();
		return a[new Random().nextInt(a.length)].toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daSYMC_9EeSFFduuR7vvgw" name="populate" specification="_dKwHYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daSYMS_9EeSFFduuR7vvgw" name="root" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daSYMi_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daSYMy_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_daSYNC_9EeSFFduuR7vvgw" type="_cU1zEC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (max!=0){
			Vertex&lt;Follower> aVertex=root;
			AbstractEdge&lt;Follower> anEdge;
			String aColor =randomColor();
			//System.out.println(max);
			
			List&lt;Follower>	temp= Bridge.getAssociations((Follower)root.getIdentifier(), numberOfChildren);
			Set&lt;Map.Entry&lt;String, AbstractVertex&lt;Follower>>> existingVertices=graph.vertices.entrySet();
			for(int i=0; i&lt;temp.size();i++){
				if (!existingVertices.contains(temp.get(i))){ 
					aVertex=new Vertex&lt;Follower>(temp.get(i), graph).setColor(aColor);
					root.createEdge(aVertex, &quot;hashCodeWeight&quot;).setOpacity(0.2);
				}
				else{
					aVertex=(Vertex&lt;Follower>)graph.vertices.get(temp.get(i));
					root.createEdge(aVertex,&quot;hashCodeWeight&quot;).setColor(aColor).setOpacity(0.2);
				}	
			}
			populate(randomVertex(graph),graph,--max);
			
			//randomly connect vertices to increase complexity
			
			for (int i=1; i&lt;10;i++){
				randomVertex(graph).createEdge(randomVertex(graph),&quot;hashCodeWeight&quot;).setOpacity(0.2);;
			}
			
		}
		return graph;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daTmUC_9EeSFFduuR7vvgw" name="setNumberOfCalls" specification="_cdHlUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daTmUS_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_daTmUi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.numberOfRecursiveCalls=numberOfRecursiveCalls;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daU0cC_9EeSFFduuR7vvgw" name="setNumberOfChildren" specification="_cdJagC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daU0cS_9EeSFFduuR7vvgw" name="numberOfChildren">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_daU0ci_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.numberOfChildren=numberOfChildren;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cdBesC_9EeSFFduuR7vvgw" name="RandomGraph" method="_daQjAC_9EeSFFduuR7vvgw">
                <eAnnotations xmi:id="_cdCFwC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_cdCFwS_9EeSFFduuR7vvgw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_dcuoMC_9EeSFFduuR7vvgw">
                  <body>Constructor
	 * @param root holds the root node</body>
                </ownedComment>
                <ownedParameter xmi:id="_cdCs0C_9EeSFFduuR7vvgw" type="_cc7_IC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_cdD68C_9EeSFFduuR7vvgw" name="randomColor" isStatic="true" method="_daRxIC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcuoMi_9EeSFFduuR7vvgw">
                  <body>The randomColor method selects a random color from the available
	 * list of colors found in Validation.java
	 * @return a color name as a string value</body>
                </ownedComment>
                <ownedParameter xmi:id="_cdEiAC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cdHlUC_9EeSFFduuR7vvgw" name="setNumberOfCalls" method="_daTmUC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcvPQC_9EeSFFduuR7vvgw">
                  <body>Sets the number of recursive calls made
	 * @param numberOfRecursiveCalls
	 * @return the current number of calls</body>
                </ownedComment>
                <ownedParameter xmi:id="_cdHlUS_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cdIMYC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cdJagC_9EeSFFduuR7vvgw" name="setNumberOfChildren" method="_daU0cC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcvPQS_9EeSFFduuR7vvgw">
                  <body>Sets the number of children a node has
	 * @param numberOfChildren
	 * @return the number of children</body>
                </ownedComment>
                <ownedParameter xmi:id="_cdJagS_9EeSFFduuR7vvgw" name="numberOfChildren">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cdKBkC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dKr18C_9EeSFFduuR7vvgw" name="randomVertex" method="_daRKEC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcuoMS_9EeSFFduuR7vvgw">
                  <body>The randomVertex method selects a random Vertex from an existing graph
	 * @param graph - references an already populated graph
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dKr18S_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dKtrIS_9EeSFFduuR7vvgw" type="_cYBC4C_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dKwHYC_9EeSFFduuR7vvgw" name="populate" method="_daSYMC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dcuoMy_9EeSFFduuR7vvgw">
                  <body>This method populates the graph
	 * @param root this holds the current parent root value while generating children nodes
	 * @param graph holds the current graph reference
	 * @param max is the number of recursive calls made
	 * @return Returns a populated graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_dKwHYS_9EeSFFduuR7vvgw" name="root" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dKwucC_9EeSFFduuR7vvgw" name="graph" type="_cU1zEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dKwucS_9EeSFFduuR7vvgw" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dKyjoC_9EeSFFduuR7vvgw" type="_cU1zEC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cdWO0C_9EeSFFduuR7vvgw" name="RandomGraphGenerator">
              <ownedAttribute xmi:id="_dTWCsC_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTWpwC_9EeSFFduuR7vvgw" value="10"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daXQsC_9EeSFFduuR7vvgw" name="main" specification="_cdYrEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daXQsS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_daXQsi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>outputLog aLog = new outputLog();
			
		// create a new graph
		RandomGraph&lt;Follower> graph = new RandomGraph&lt;Follower>();
		//initiate bridges
		Bridge.init(1, &quot;1157177351793&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
		//create the root node
		Vertex&lt;Follower> root= new Vertex&lt;Follower>(new Follower(&quot;Riley&quot;),graph);
		root.setSize(10);
		root.setColor(&quot;red&quot;);
		
		//populate the graph with sampleGenerator data
		graph.populate(root,graph,numberOfRecursiveCalls);
		
		Bridge.complete();
		
		aLog.returnStream();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cdYrEC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_daXQsC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cdYrES_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cdagQS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cdeKoC_9EeSFFduuR7vvgw" name="SampleDataGeneratorTest">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daYe0C_9EeSFFduuR7vvgw" name="testGetFriends" specification="_cdfYwC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>List&lt;Follower> names = new ArrayList&lt;>();
		names.add(new Follower(&quot;Elizabeth&quot;));
		assertEquals(names, SampleDataGenerator.getFriends(&quot;Joey&quot;, 5));
		
		// Empty
		assertEquals(5, SampleDataGenerator.getFriends(&quot;&quot;, 5).size());
		
		// Null
		assertEquals(5, SampleDataGenerator.getFriends(null, 5).size());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daZF4C_9EeSFFduuR7vvgw" name="testGetCast" specification="_cdhN8i_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>List&lt;Actor> names = new ArrayList&lt;>();
		names.add(new Actor(&quot;Val Kilmer&quot;));
		names.add(new Actor(&quot;Christian Bale&quot;));
		assertEquals(names, SampleDataGenerator.getCast(&quot;Pulp Fiction&quot;, 5));
		
		// Empty
		assertEquals(5, SampleDataGenerator.getCast(&quot;&quot;, 5).size());
		
		// Null
		assertEquals(2, SampleDataGenerator.getCast(null, 5).size());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daaUAC_9EeSFFduuR7vvgw" name="testGetMovies" specification="_cdjqMC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>List&lt;Movie> names = new ArrayList&lt;>();
		names.add(new Movie(&quot;Paths of Glory&quot;));
		names.add(new Movie(&quot;It's a Wonderful Life&quot;));
		names.add(new Movie(&quot;American Beauty&quot;));
		names.add(new Movie(&quot;Monty Python and the Holy Grail&quot;));
		assertEquals(names, SampleDataGenerator.getMovies(&quot;Joey&quot;, 5));
		
		// Empty
		assertEquals(5, SampleDataGenerator.getMovies(&quot;&quot;, 5).size());
		
		// Null
		assertEquals(5, SampleDataGenerator.getMovies(null, 5).size());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daa7EC_9EeSFFduuR7vvgw" name="testGetTwitterTimeline" specification="_cdk4Ui_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>List&lt;Tweet> tweets = new ArrayList&lt;>();
		tweets.add(new Tweet(&quot;Paths of Glory&quot;));
		tweets.add(new Tweet(&quot;It's a Wonderful Life&quot;));
		tweets.add(new Tweet(&quot;American Beauty&quot;));
		tweets.add(new Tweet(&quot;Monty Python and the Holy Grail&quot;));
		assertEquals(tweets, SampleDataGenerator.getTwitterTimeline(&quot;Joey&quot;, 5));
		
		// Empty
		assertEquals(5, SampleDataGenerator.getTwitterTimeline(&quot;&quot;, 5).size());
		
		// Null
		assertEquals(5, SampleDataGenerator.getTwitterTimeline(null, 5).size());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cdfYwC_9EeSFFduuR7vvgw" name="testGetFriends" method="_daYe0C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdhN8i_9EeSFFduuR7vvgw" name="testGetCast" method="_daZF4C_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdjqMC_9EeSFFduuR7vvgw" name="testGetMovies" method="_daaUAC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdk4Ui_9EeSFFduuR7vvgw" name="testGetTwitterTimeline" method="_daa7EC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cdn7oC_9EeSFFduuR7vvgw" name="StackNodeTest">
              <ownedAttribute xmi:id="_dTZtEC_9EeSFFduuR7vvgw" name="root" visibility="package" isStatic="true" type="_cXjI0C_9EeSFFduuR7vvgw" association="_de6ZgS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcv2UC_9EeSFFduuR7vvgw" name="top" visibility="package" type="_cXjI0C_9EeSFFduuR7vvgw" association="_dfSM8C_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dacwQC_9EeSFFduuR7vvgw" name="beforeClass" specification="_cdpJwC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>root = new StackNode(&quot;Steve&quot;);
		top = root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dacwQS_9EeSFFduuR7vvgw" name="testSetNextNode" specification="_cdq-8S_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>top.setNextNode(new StackNode(&quot;John&quot;));
		top = top.getNextNode();
		top.setNextNode(new StackNode(&quot;Bob&quot;));
		top = top.getNextNode();
		assertEquals(&quot;John&quot;, root.getNextNode().getIdentifier());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dadXUC_9EeSFFduuR7vvgw" name="testGetOutgoing" specification="_cdtbMC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(root.getOutgoing());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dad-YC_9EeSFFduuR7vvgw" name="testGetNextNode" specification="_cdupUi_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertNotNull(root.getNextNode());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dad-YS_9EeSFFduuR7vvgw" name="testGetNodeIdentifier" specification="_cdxFkC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>assertEquals(&quot;Bob&quot;, top.getIdentifier());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cdpJwC_9EeSFFduuR7vvgw" name="beforeClass" isStatic="true" method="_dacwQC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdq-8S_9EeSFFduuR7vvgw" name="testSetNextNode" isLeaf="true" method="_dacwQS_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdtbMC_9EeSFFduuR7vvgw" name="testGetOutgoing" isLeaf="true" method="_dadXUC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdupUi_9EeSFFduuR7vvgw" name="testGetNextNode" isLeaf="true" method="_dad-YC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cdxFkC_9EeSFFduuR7vvgw" name="testGetNodeIdentifier" isLeaf="true" method="_dad-YS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cd8rwC_9EeSFFduuR7vvgw" name="TreeDiver">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dafzkC_9EeSFFduuR7vvgw" name="main" specification="_cd_IAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dagaoC_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dagaoS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>TreeVisualizer tree = new TreeVisualizer();//Creating tree structure
		
		//Bridge.init(0, &quot;796340034401&quot;, tree);//UNCC
		Bridge.init(0, &quot;1157177351793&quot;, tree, &quot;mmehedin@uncc.edu&quot;);//Heroku
		Bridge.setServerURL(&quot;http://bridges-cs.herokuapp.com&quot;);
		//Bridge.setServerURL(&quot;http://bridges.cs.uncc.edu&quot;);
		
		tree.insert(new BSTNode(&quot;Root, 12&quot;, 12));
		//System.out.println(&quot;Root: &quot; + tree.getRoot().getIdentifier());
		
		tree.insert(new BSTNode(&quot;Steve, 15&quot;, 15));		
		//System.out.println(&quot;Right Child: &quot; + tree.getRoot().getRightChild().getIdentifier());		
		
		tree.insert(new BSTNode(&quot;D, 18&quot;, 18));
		
		tree.insert(new BSTNode(&quot;John, 10&quot;, 10));
		//System.out.println(&quot;Left Child: &quot; + tree.getRoot().getLeftChild().getIdentifier());
		
		tree.insert(new BSTNode(&quot;Frank, 11&quot;, 11));		
		//System.out.println(&quot;Left-Right Child: &quot; + tree.getRoot().getLeftChild().getRightChild().getIdentifier());
		
		tree.insert(new BSTNode(&quot;Dave, 8&quot;, 8));
		
		tree.insert(new BSTNode(&quot;C, 13&quot;, 13));
		
		tree.insert(new BSTNode(&quot;Chris, 5&quot;, 5));
		
		tree.insert(new BSTNode(&quot;Ada, 1&quot;, 1));

		tree.insert(new BSTNode(&quot;Betsy, 7&quot;, 7));
		
		tree.insert(new BSTNode(&quot;B, 6&quot;, 6));
		
		//tree.getRoot().setColor(&quot;red&quot;);
		
		tree.fMax();
		
		//System.out.println(&quot;Is the number found: &quot; + tree.find(7));
		tree.fMin();
		//tree.rMin();
		//System.out.println(&quot;Minimum is &quot; + tree.fMin());		
	
		//System.out.println(&quot;Maximum is &quot; + tree.fMax());
		//tree.getRoot().getRightEdge().setColor(&quot;yellow&quot;);
		Bridge.complete();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cd_IAC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_dafzkC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cd_IAS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cd_vEC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ceCLUC_9EeSFFduuR7vvgw" name="testMultipleDisplay">
              <ownedAttribute xmi:id="_dTfzsC_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTgawC_9EeSFFduuR7vvgw" value="10"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dahBsC_9EeSFFduuR7vvgw" name="main" specification="_ceFOoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dahBsS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dahBsi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>outputLog aLog = new outputLog();
			
		// create a new graph
		RandomGraph&lt;Follower> graph = new RandomGraph&lt;Follower>();
		
		//create the root node
		Vertex&lt;Follower> root= new Vertex&lt;Follower>(new Follower(&quot;Riley&quot;),graph);
		root.setSize(10);
		root.setColor(&quot;red&quot;);
		
		//populate the graph with sampleGenerator data
		graph.populate(root,graph,numberOfRecursiveCalls);
		//initiate bridges
		Bridge.init(1, &quot;1157177351793&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
		Bridge.complete();
		
		aLog.returnStream();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceFOoC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_dahBsC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ceFOoS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ceHD0S_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ceKuMC_9EeSFFduuR7vvgw" name="Twitter">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daiP0C_9EeSFFduuR7vvgw" name="main" specification="_ceMjYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daiP0S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_daiP0i_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>GraphVisualizer&lt;T> gv = new GraphVisualizer&lt;>();
		
		// Assignment, API key, visualizer, username
		Bridge.init(0, &quot;693144430396&quot;, gv, &quot;mmehedin@uncc.edu&quot;);
		
		Deque&lt;Vertex&lt;Follower>> frontier = new ArrayDeque&lt;>();
		Map&lt;String, Vertex&lt;Follower>> visited = new HashMap&lt;>();
		
		// Any actual user on Twitter
		Follower name = new Follower(&quot;Joey&quot;); 
		Vertex&lt;Follower> joey = new Vertex(name, gv);
		
		frontier.add(joey);
		visited.put(name.getName(), joey);
		
		for (int expands=0; expands &lt; 10 &amp;&amp; !frontier.isEmpty(); expands++) {
			Vertex&lt;Follower> source = frontier.pop();
			for (Follower friend_name : Bridge.getAssociations(source.getIdentifier(), 50)) {
				
				Vertex&lt;Follower> target = visited.get(friend_name);
				if (target == null) {
					target = new Vertex(friend_name, gv);
					visited.put(friend_name.getName(), target);
					frontier.add(target);
				}
				source.createEdge(target);
				
			}
			frontier.remove(source);
		}
		
		Bridge.complete();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceMjYC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_daiP0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ceNKcC_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ceOYkS_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cePmsC_9EeSFFduuR7vvgw" name="TwitterWithEdgeWeights">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dajd8C_9EeSFFduuR7vvgw" name="main" specification="_ceRb4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dajd8S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dajd8i_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>GraphVisualizer&lt;Follower> gv = new GraphVisualizer&lt;>();

		Bridge.init(0, &quot;693144430396&quot;, gv, &quot;mmehedin@uncc.edu&quot;);
		int expands_remaining = 10;
		
		Deque&lt;Vertex&lt;Follower>> frontier = new ArrayDeque&lt;>();
		Map&lt;String, Vertex&lt;Follower>> visited = new HashMap&lt;>();
		Map&lt;String, Vertex&lt;Follower>> parent_of = new HashMap&lt;>();
		//actual user on Twitter
		Follower name = new Follower(&quot;Joey&quot;);
		//the 
		Vertex&lt;Follower> joey = new Vertex(name, gv);
		//make it easier to find the 'root'
		joey.setSize(20);
		joey.setColor(&quot;orange&quot;);
		
		Vertex&lt;Follower> source;
		
		frontier.add(joey);
		visited.put(name.getName(),  joey);
		
		while ((!frontier.isEmpty()) &amp;&amp; expands_remaining > 0) {
			source = frontier.pop();
			for (Follower friend_name : Bridge.getAssociations(source.getIdentifier(),50)) {
				
				Vertex&lt;Follower> target = visited.get(friend_name);
				if (target == null) {
					target = new Vertex(friend_name, gv);
					parent_of.put(target.getIdentifier().getName(), source);
					// The student's do this part for fun! :P
					target.setSize(source.getSize() -4);
					visited.put(friend_name.getName(), target);
					frontier.add(target);
				}

				source.createEdge(target,&quot;randWeight&quot;);
			}
			frontier.remove(source);
			expands_remaining -= 1;
		}
		
		Bridge.complete();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceRb4C_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_dajd8C_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ceRb4S_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ceSqAC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ceUfMC_9EeSFFduuR7vvgw" name="VertexTest">
              <ownedAttribute xmi:id="_dTi3AC_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cU1zEC_9EeSFFduuR7vvgw" association="_de7noS_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTjeEC_9EeSFFduuR7vvgw" value="new GraphVisualizer()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dTksMC_9EeSFFduuR7vvgw" name="Bob" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_de81wC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcxrgC_9EeSFFduuR7vvgw" name="Steve" visibility="package" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfV3UC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dcy5oC_9EeSFFduuR7vvgw" name="John" visibility="package" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfYTkS_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dalTIC_9EeSFFduuR7vvgw" name="BeforeClass" specification="_ceWUYC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bob = new Vertex(&quot;Bob&quot;, graph );
		Steve = new Vertex(&quot;Steve&quot;, graph);
		John = new Vertex(&quot;John&quot;, graph);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dal6MC_9EeSFFduuR7vvgw" name="testCreateEdge" specification="_ceXigS_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>Bob.createEdge(Steve);
		assertNotNull(Bob.getEdge(Steve));
		Steve.createEdge(John);
		assertNotNull(John.getEdge(Steve));
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceWUYC_9EeSFFduuR7vvgw" name="BeforeClass" isStatic="true" method="_dalTIC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_ceXigS_9EeSFFduuR7vvgw" name="testCreateEdge" isLeaf="true" method="_dal6MC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cedCEC_9EeSFFduuR7vvgw" name="minHeapDriver">
              <generalization xmi:id="_dLNaYC_9EeSFFduuR7vvgw" general="_ceihoC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_danvYC_9EeSFFduuR7vvgw" name="main" specification="_ceeQMC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_danvYS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_danvYi_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>outputLog theLog = new outputLog();
		
		graph = new RandomGraph&lt;>();
		//initiate bridges
		Bridge.init(1, &quot;1157177351793&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
		root= new Vertex&lt;>(new Follower(&quot;Riley&quot;),graph);
		root.setSize(10);
		root.setColor(&quot;red&quot;);
		
		graph.setNumberOfChildren(4);
		//populate the graph with sampleGenerator data
		graph.populate(root,graph,numberOfRecursiveCalls);		
		//System.out.println(&quot;This is the edge: &quot;+root.getEdge(root.next()).getIdentifier()+&quot; &quot;+root.getEdge(root.next()).getWeight());		
		
		createHeap(minHeap, root);
		
		System.out.println(&quot;Created a minHeap using the edges emerging from root: &quot;);
		print(minHeap);
		System.out.println(&quot;\nThis is a minHeap: &quot; + isHeap(minHeap,1));
		System.out.println();
		
		//Performing the heap sort using the minimum heap 
		heapSort(minHeap,minHeap.size()-1);
		
		//printing the sorted edge values in descending order
		//System.out.println(&quot;Sorted: &quot;+minHeapSorted);
		System.out.println(&quot;Sorted minHeap: \n&quot;);
		print(minHeapSorted);
		
		//remove minHeap
		//minHeapSorted.add(0, null);
		//System.out.println(&quot;Sorted: &quot;+minHeapSorted);
		//removeHeap(minHeapSorted,minHeapSorted.size()-1);
		
		minHeapSorted.get(0).setColor(&quot;red&quot;).setOpacity(1);
		Bridge.complete();
		
		theLog.returnStream();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceeQMC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_danvYC_9EeSFFduuR7vvgw" raisedException="_dGf5gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cee3QC_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cefeUC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ceihoC_9EeSFFduuR7vvgw" name="minHeapEdges">
              <ownedAttribute xmi:id="_dTsA8C_9EeSFFduuR7vvgw" name="numberOfRecursiveCalls" visibility="package" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTsA8S_9EeSFFduuR7vvgw" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dTt2IC_9EeSFFduuR7vvgw" name="graph" visibility="package" isStatic="true" type="_cc7_IC_9EeSFFduuR7vvgw" association="_de9c0S_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dTw5cC_9EeSFFduuR7vvgw" name="minHeap" visibility="package" isStatic="true" type="_dGlZEC_9EeSFFduuR7vvgw" association="_de-q8S_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dTyHkS_9EeSFFduuR7vvgw" value="new ArrayList&lt;AbstractEdge&lt;Follower>>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dTz8wC_9EeSFFduuR7vvgw" name="minHeapSorted" visibility="package" isStatic="true" type="_dGlZEC_9EeSFFduuR7vvgw" association="_de_5EC_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dT1x8C_9EeSFFduuR7vvgw" value="new ArrayList&lt;AbstractEdge&lt;Follower>>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dT3AEC_9EeSFFduuR7vvgw" name="root" visibility="package" isStatic="true" type="_cYBC4C_9EeSFFduuR7vvgw" association="_dfAgIS_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dT6DYC_9EeSFFduuR7vvgw" name="heapElements" visibility="package" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dT6qcC_9EeSFFduuR7vvgw" value="0"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dao9gC_9EeSFFduuR7vvgw" name="print" specification="_dO-gEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dao9gS_9EeSFFduuR7vvgw" name="aHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>for (AbstractEdge&lt;Follower> F:aHeap)
				if(F!=null)
					System.out.println(F.getIdentifier()+&quot; &quot;+&quot; Edge value is: &quot;+F.getWeight());
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dapkkC_9EeSFFduuR7vvgw" name="removeHeap" specification="_dPA8UC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dapkkS_9EeSFFduuR7vvgw" name="aHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dapkki_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dapkky_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(anIndex==1){
			System.out.println(aHeap.get(1).getIdentifier()+&quot; &quot;+aHeap.get(1).getWeight());
			reHeap(aHeap,1);
			print(aHeap);
			return aHeap.remove(anIndex);
		} 
		else{
			swap(1,anIndex);
			aHeap.remove(anIndex);
			reHeap(aHeap,1);
			print(aHeap);
			return removeHeap(aHeap, aHeap.size()-1);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daqLoC_9EeSFFduuR7vvgw" name="collectTopElement" specification="_dPEmsC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daqLoS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daqLoi_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (minHeap.isEmpty())
			return null;
		
		AbstractEdge&lt;Follower> aMinEdge = minHeap.get(1);
		swap(1,minHeap.size()-1);
		minHeap.remove(minHeap.size()-1);
		reHeap(minHeap,1);
		
		return aMinEdge;			
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daqysC_9EeSFFduuR7vvgw" name="swap" specification="_ceooQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daqysS_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_daqysi_9EeSFFduuR7vvgw" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>AbstractEdge&lt;Follower> temp=minHeap.get(i);
		 minHeap.set(i, minHeap.get(j));
		 minHeap.set(j, temp);
	 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_darZwC_9EeSFFduuR7vvgw" name="getValue" specification="_ceqdcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_darZwS_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_darZwi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>return minHeap.get(i).getWeight();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dasA0C_9EeSFFduuR7vvgw" name="isHeap" specification="_dPHqAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dasA0S_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dasA0i_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dasA0y_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (2*i>minHeap.size()-1 || 2*i+1>minHeap.size()-1)
			return true;
		else if (getValue(i)>Math.max(getValue(2*i),getValue(2*i+1))){
			return false;
		}
		return isHeap(minHeap,2*i) &amp;&amp; isHeap(minHeap,2*i+1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dasn4C_9EeSFFduuR7vvgw" name="reHeap" specification="_dPKtUC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dasn4S_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dasn4i_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dasn4y_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if (i==minHeap.size()-1 || i*2>minHeap.size()-1|| (i*2+1>minHeap.size()-1))
			 return minHeap;
		 
  		boolean leftSmaller=true;  //left child is smaller than the right
		 if (minHeap.get(i*2+1)!=null &amp;&amp; getValue(i*2)>getValue(i*2+1))
			 leftSmaller=false;    //right child is larger
		 if (leftSmaller &amp;&amp; getValue(i)>getValue(i*2)){
			 swap(i,i*2);
			 i*=2;
			 reHeap(minHeap, i);
		 }
		 else if (!leftSmaller &amp;&amp; getValue(i)>getValue(i*2+1)){
			 swap(i,i*2+1);
			 i=i*2+1;
			 reHeap(minHeap, i);
		 }
		 
		 return minHeap;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_datO8C_9EeSFFduuR7vvgw" name="rearrange" specification="_dPNwoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_datO8S_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_datO8i_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_datO8y_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(anIndex == 1)
			return minHeap;
		if(getValue(anIndex)&lt;getValue(anIndex/2)){
			swap(anIndex, anIndex/2);
		}
		return rearrange(minHeap,anIndex/2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dat2AC_9EeSFFduuR7vvgw" name="createHeap" specification="_dPRbAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dat2AS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dat2Ai_9EeSFFduuR7vvgw" name="root" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dat2Ay_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Iterator i=root.getNeighbors().iterator();
		minHeap.add(null);  //the heap has a null element on its first position (index 0) this allows finding children by 2*index and 2*index+1
		while(i.hasNext()){
			minHeap.add((AbstractEdge&lt;Follower>)i.next());
			rearrange(minHeap, minHeap.size()-1);
		}
		return minHeap;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daudEC_9EeSFFduuR7vvgw" name="heapSort" specification="_dPW6kC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daudES_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daudEi_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_daudEy_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(anIndex==1){
			reHeap(minHeap,1);
			//print(minHeap);
			minHeapSorted.add(minHeap.get(anIndex));
			return minHeap.get(anIndex);
		} 
		else{
			swap(1,anIndex);
			minHeapSorted.add(minHeap.remove(anIndex));
			reHeap(minHeap,1);
			//print(minHeap);
			return heapSort(minHeap, minHeap.size()-1);
		}
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ceooQC_9EeSFFduuR7vvgw" name="swap" isStatic="true" method="_daqysC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ceooQS_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ceooQi_9EeSFFduuR7vvgw" name="j">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ceqdcC_9EeSFFduuR7vvgw" name="getValue" isStatic="true" method="_darZwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_ceqdcS_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cerEgC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dO-gEC_9EeSFFduuR7vvgw" name="print" isStatic="true" method="_dao9gC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dO-gES_9EeSFFduuR7vvgw" name="aHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPA8UC_9EeSFFduuR7vvgw" name="removeHeap" isStatic="true" method="_dapkkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPBjYC_9EeSFFduuR7vvgw" name="aHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPBjYS_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dPCKcS_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPEmsC_9EeSFFduuR7vvgw" name="collectTopElement" isStatic="true" method="_daqLoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPFNwC_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPGb4C_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPHqAC_9EeSFFduuR7vvgw" name="isHeap" isStatic="true" method="_dasA0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPHqAS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPIREC_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dPIRES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dPKtUC_9EeSFFduuR7vvgw" name="reHeap" isStatic="true" method="_dasn4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPKtUS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPLUYC_9EeSFFduuR7vvgw" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dPL7cS_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPNwoC_9EeSFFduuR7vvgw" name="rearrange" isStatic="true" method="_datO8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPNwoS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPOXsC_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dPO-wS_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPRbAC_9EeSFFduuR7vvgw" name="createHeap" isStatic="true" method="_dat2AC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPRbAS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPRbAi_9EeSFFduuR7vvgw" name="root" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPTQMS_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dPW6kC_9EeSFFduuR7vvgw" name="heapSort" isStatic="true" method="_daudEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dPW6kS_9EeSFFduuR7vvgw" name="minHeap" type="_dGlZEC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPXhoC_9EeSFFduuR7vvgw" name="anIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dPYvwS_9EeSFFduuR7vvgw" type="_cJnagC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cfGiUC_9EeSFFduuR7vvgw" name="TreeVisualizer">
              <generalization xmi:id="_dLoRIC_9EeSFFduuR7vvgw" general="_cZSOMC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUB_MC_9EeSFFduuR7vvgw" name="root" type="_cM-QgC_9EeSFFduuR7vvgw" isReadOnly="true" association="_dfBuQC_9EeSFFduuR7vvgw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dawSQC_9EeSFFduuR7vvgw" name="insert" specification="_dLbc0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dawSQS_9EeSFFduuR7vvgw" name="newNode" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>root = insertNode(root, newNode);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daxgYC_9EeSFFduuR7vvgw" name="insertNode" specification="_dLcq8C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daxgYS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daxgYi_9EeSFFduuR7vvgw" name="newNode" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daxgYy_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(rt == null){			
			return newNode;			
		}else if(newNode.getVal() &lt; rt.getVal() ){
			if(rt.getLeftEdge() == null){
				rt.setLeftChild(newNode); 				
			}else{
				rt.setLeftChild(insertNode(rt.getLeftChild(), newNode));				
			}				
		}else{
			if(rt.getRightEdge() == null){
				rt.setRightChild(newNode);				
			}else{				
				rt.setRightChild(insertNode(rt.getRightChild(), newNode));				
			}				
		}
		return rt;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dayHcC_9EeSFFduuR7vvgw" name="find" specification="_cfJloC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dayHcS_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dayHci_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return findNode(root, val);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dayugC_9EeSFFduuR7vvgw" name="findNode" specification="_dLegIC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dayugS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dayugi_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dayugy_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if(rt == null){
			return false;
		}
		else if(val == rt.getVal()){
			return true;
		}else if(val &lt; rt.getVal()){
			if(rt.getLeftChild() == null){
				return false;
			}else return findNode(rt.getLeftChild(), val);			
		}else{
			if(rt.getRightChild() == null){
				return false;
			}else return findNode(rt.getRightChild(), val);			
		}		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dazVkC_9EeSFFduuR7vvgw" name="fMin" specification="_cfLa0C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dazVkS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return findMin(root);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daz8oC_9EeSFFduuR7vvgw" name="findMin" specification="_dLfuQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_daz8oS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_daz8oi_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if(rt.getLeftChild() == null){
			rt.setColor(&quot;red&quot;);
			return rt.getVal();
		}else {
			if(rt != root)
				rt.setColor(&quot;red&quot;);//tracing to min node
			if(rt.getLeftEdge() != null){
				rt.getLeftEdge().setColor(&quot;red&quot;);
			}
			return findMin(rt.getLeftChild());				
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_daz8oy_9EeSFFduuR7vvgw" name="rMin" specification="_cfN3EC_9EeSFFduuR7vvgw">
                <language>java</language>
                <body>if(root == null){
			throw new Exception(&quot;There is no minimum to remove because the tree is empty.&quot;);
		}
		root = removeMin(root);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da0jsC_9EeSFFduuR7vvgw" name="removeMin" specification="_dLg8YC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da0jsS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da0jsi_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(rt.getLeftChild() == null){
			if(rt.getRightChild() == null){
				return null;
			}
				return rt.getRightChild();
		}else{
			rt.setLeftChild(removeMin(rt.getLeftChild()));//check logic
			
			return rt;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da1KwC_9EeSFFduuR7vvgw" name="fMax" specification="_cfPsQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da1KwS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if(root == null){
			throw new Exception(&quot;There is no maximum because the tree is empty.&quot;);
		}
		return findMax(root);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da1x0C_9EeSFFduuR7vvgw" name="findMax" specification="_dLiKgC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da1x0S_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da1x0i_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if(rt.getRightChild() == null){
			rt.setColor(&quot;Orange&quot;);			
			return rt.getVal();
		}else{
			if(rt != root)//tracing route to max node
				rt.setColor(&quot;Orange&quot;);
			rt.getRightEdge().setColor(&quot;Orange&quot;);
			return findMax(rt.getRightChild());		
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da2Y4C_9EeSFFduuR7vvgw" name="findMinNode" specification="_dLj_sC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da2Y4S_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da2Y4i_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>if(rt.getLeftChild() == null){
			return rt;
		}else return rt.getLeftChild();				
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da2_8C_9EeSFFduuR7vvgw" name="removeN" specification="_dLkmwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da2_8S_9EeSFFduuR7vvgw" name="node" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>if(root == null){
			throw new Exception(&quot;Nothing to remove, the tree is empty.&quot;);
		}
		root = removeNode(root, node);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da3nAC_9EeSFFduuR7vvgw" name="removeNode" specification="_dLnDAC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da3nAS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da3nAi_9EeSFFduuR7vvgw" name="node" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da3nAy_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>//if the node is found that you are trying to remove
		if( rt.getVal() == node.getVal()){
			//if there are no children
			if(rt.getLeftChild() == null &amp;&amp; rt.getRightChild() == null){
				return null;
			}
			//if there is only one child
			else if(rt.getLeftChild() == null || rt.getRightChild() == null){
				if(rt.getRightChild() == null){
					return rt.getLeftChild();
				}else return rt.getRightChild();				
			}
			//if the node has 2 children
			//finds min node of the right tree
			BSTNode temp = findMinNode(rt.getRightChild());
			//removes the min of the right tree returning an updated sub-tree
			rt = removeNode(rt, temp);
			//updates the node to be removed to reflect the removal/balancing
			rt.setVal(temp.getVal());
			//returns updated tree
			return rt;
		}//if the value is larger
		else if(node.getVal() > rt.getVal()){
			return removeNode(rt.getRightChild(), node);
		//if the value is smaller
		}else return removeNode(rt.getLeftChild(), node);				
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da4OEC_9EeSFFduuR7vvgw" name="getRepresentation" specification="_cfUkwC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da4OES_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder nodes = new StringBuilder();
		StringBuilder links = new StringBuilder();
		
		getRoot().getNodeRepresentation(nodes, links);
		
		return &quot;{&quot;
		+ &quot;\&quot;name\&quot;: \&quot;edu.uncc.cs.bridges\&quot;,&quot;
		+ &quot;\&quot;version\&quot;: \&quot;0.4.0\&quot;,&quot;
		+ &quot;\&quot;visual\&quot;: \&quot;tree\&quot;,&quot;
		+ &quot;\&quot;nodes\&quot;: [&quot; + Bridge.trimComma(nodes) + &quot;],&quot;
		+ &quot;\&quot;links\&quot;: [&quot; + Bridge.trimComma(links) + &quot;]&quot;
		+ &quot;}&quot;;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cfJloC_9EeSFFduuR7vvgw" name="find" method="_dayHcC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cfJloS_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_cfKMsC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cfLa0C_9EeSFFduuR7vvgw" name="fMin" method="_dazVkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cfMB4C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cfN3EC_9EeSFFduuR7vvgw" name="rMin" method="_daz8oy_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw"/>
              <ownedOperation xmi:id="_cfPsQC_9EeSFFduuR7vvgw" name="fMax" method="_da1KwC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cfQTUC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_cfUkwC_9EeSFFduuR7vvgw" name="getRepresentation" visibility="protected" method="_da4OEC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cfVL0C_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dLbc0C_9EeSFFduuR7vvgw" name="insert" method="_dawSQC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dLbc0S_9EeSFFduuR7vvgw" name="newNode" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLcq8C_9EeSFFduuR7vvgw" name="insertNode" visibility="private" method="_daxgYC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc0u0C_9EeSFFduuR7vvgw">
                  <body>Inserts a new node into the correct position in the tree.
	 * 
	 * @param rt The root node.
	 * @param newNode The node that is to be inserted.
	 * @return The newly generated tree structure.
	 * @throws Exception</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLdSAC_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLdSAS_9EeSFFduuR7vvgw" name="newNode" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLdSAi_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLegIC_9EeSFFduuR7vvgw" name="findNode" visibility="private" method="_dayugC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc1V4C_9EeSFFduuR7vvgw">
                  <body>Determines whether or not the tree contains the value being searched for.
	 * 
	 * @param rt The root node.
	 * @param val The value being looked for.
	 * @return True if found, false if not.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLegIS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLfHMC_9EeSFFduuR7vvgw" name="val">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dLfHMS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dLfuQC_9EeSFFduuR7vvgw" name="findMin" visibility="private" method="_daz8oC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc1V4S_9EeSFFduuR7vvgw">
                  <body>Finds and returns the minimum value contained in the tree.
	 * 
	 * @param rt The root node of the tree.
	 * @return The minimum value contained in the tree.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLfuQS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLgVUC_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dLg8YC_9EeSFFduuR7vvgw" name="removeMin" visibility="private" method="_da0jsC_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc1V4i_9EeSFFduuR7vvgw">
                  <body>Finds and removes the node that contains the minimum value contained in the tree.
	 * 
	 * @param rt The root node of the tree.
	 * @return A new tree minus the minimum value.
	 * @throws Exception</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLg8YS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLhjcC_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLiKgC_9EeSFFduuR7vvgw" name="findMax" visibility="private" method="_da1x0C_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc1V4y_9EeSFFduuR7vvgw">
                  <body>Finds and returns the maximum value contained in the tree.
	 * 
	 * @param rt The root node of the tree.
	 * @return The maximum value contained in the tree.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLixkC_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLixkS_9EeSFFduuR7vvgw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dLj_sC_9EeSFFduuR7vvgw" name="findMinNode" visibility="private" method="_da2Y4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dLj_sS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLj_si_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLkmwC_9EeSFFduuR7vvgw" name="removeN" method="_da2_8C_9EeSFFduuR7vvgw" raisedException="_dNFCoC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dLlN0C_9EeSFFduuR7vvgw" name="node" type="_cM-QgC_9EeSFFduuR7vvgw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLnDAC_9EeSFFduuR7vvgw" name="removeNode" visibility="private" method="_da3nAC_9EeSFFduuR7vvgw">
                <ownedComment xmi:id="_dc188C_9EeSFFduuR7vvgw">
                  <body>Removes the specified node from the tree.
	 * 
	 * @param rt The root node.
	 * @param node The node to be removed.
	 * @return The new tree structure after the node is removed.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dLnDAS_9EeSFFduuR7vvgw" name="rt" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLnqEC_9EeSFFduuR7vvgw" name="node" type="_cM-QgC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLnqES_9EeSFFduuR7vvgw" type="_cM-QgC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_cfinMC_9EeSFFduuR7vvgw" name="visitedHashTable">
              <generalization xmi:id="_dL1sgC_9EeSFFduuR7vvgw" general="_ceihoC_9EeSFFduuR7vvgw"/>
              <ownedAttribute xmi:id="_dUIF0C_9EeSFFduuR7vvgw" name="visited" visibility="package" isStatic="true" type="_dLtJoC_9EeSFFduuR7vvgw" association="_dfC8YC_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dUJT8S_9EeSFFduuR7vvgw" value="new Hashtable&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dUKiES_9EeSFFduuR7vvgw" name="unvisited" visibility="package" isStatic="true" type="_dLtJoC_9EeSFFduuR7vvgw" association="_dfEKgC_9EeSFFduuR7vvgw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dULwMS_9EeSFFduuR7vvgw" value="new Hashtable&lt;>()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da7RYC_9EeSFFduuR7vvgw" name="addNeighbors" specification="_dLvl4C_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da7RYS_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da7RYi_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
                <language>java</language>
                <body>Iterator i=aVertex.getNeighbors().iterator();
		while(i.hasNext()){
			AbstractEdge&lt;Follower> anEdge = (AbstractEdge&lt;Follower>)i.next();
			if (!visited.contains(anEdge.getDestination())){  //if the child vertex is not visited then consider the current edge as an option
				minHeap.add(anEdge);
				rearrange(minHeap,minHeap.size()-1);
				visited.put(anEdge.getDestination(), 0);
			}
			else if (visited.get(anEdge.getDestination())==0){
				minHeap.add(anEdge);
				rearrange(minHeap,minHeap.size()-1); 
			}
		}
		return minHeap;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da74cC_9EeSFFduuR7vvgw" name="Dijkstra" specification="_dLzQQC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da74cS_9EeSFFduuR7vvgw" name="graph" type="_cc7_IC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_da74ci_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <language>java</language>
                <body>addNeighbors(aVertex);
		Iterator i=aVertex.getNeighbors().iterator();
		while(i.hasNext() &amp;&amp; minHeap.isEmpty()){
			reHeap(minHeap,minHeap.size()-1);
			AbstractEdge&lt;Follower> anEdge = minHeap.get(1);
			if (visited.contains(anEdge.getDestination()) )
				System.out.println(visited.get(anEdge).intValue());
			else{
				swap(1,minHeap.size()-1);
				minHeap.remove(minHeap.size()-1);
				reHeap(minHeap,1);
			}	
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_da9GkC_9EeSFFduuR7vvgw" name="main" specification="_cfkcYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_da9GkS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_da9Gki_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>graph = new RandomGraph&lt;>();
		//initiate bridges
		Bridge.init(1, &quot;1157177351793&quot;, graph, &quot;mmehedin@uncc.edu&quot;);
		root= new Vertex&lt;>(new Follower(&quot;Riley&quot;),graph);
		root.setSize(10);
		root.setColor(&quot;red&quot;);
		
		graph.setNumberOfChildren(10);
		//populate the graph with sampleGenerator data
		numberOfRecursiveCalls=5;
		graph.populate(root,graph,numberOfRecursiveCalls);
		
		//add null element as the first element of minHeap
		//this is done only once, so we can use the indexes to navigate through the
		//this location (index 0) usually contains the number of nodes in the heap
		minHeap.add(0,null);
		
		Dijkstra(graph, root);
		print(minHeap);
		System.out.println();
		
		System.out.println(root.getNeighbors());
		Bridge.complete();

	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_cfkcYC_9EeSFFduuR7vvgw" name="main" isStatic="true" method="_da9GkC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_cfkcYS_9EeSFFduuR7vvgw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cflDcC_9EeSFFduuR7vvgw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dLvl4C_9EeSFFduuR7vvgw" name="addNeighbors" isStatic="true" method="_da7RYC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dLvl4S_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dPePUC_9EeSFFduuR7vvgw" type="_dGlZEC_9EeSFFduuR7vvgw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dLzQQC_9EeSFFduuR7vvgw" name="Dijkstra" isStatic="true" method="_da74cC_9EeSFFduuR7vvgw">
                <ownedParameter xmi:id="_dLzQQS_9EeSFFduuR7vvgw" name="graph" type="_cc7_IC_9EeSFFduuR7vvgw"/>
                <ownedParameter xmi:id="_dLz3UC_9EeSFFduuR7vvgw" name="aVertex" type="_cYBC4C_9EeSFFduuR7vvgw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deossS_9EeSFFduuR7vvgw" name="" memberEnd="_deossi_9EeSFFduuR7vvgw _dSegAC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deossi_9EeSFFduuR7vvgw" name="" type="_cZ-xwC_9EeSFFduuR7vvgw" association="_deossS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dep60S_9EeSFFduuR7vvgw" name="" memberEnd="_dep60i_9EeSFFduuR7vvgw _dSfuIS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dep60i_9EeSFFduuR7vvgw" name="" type="_cZ-xwC_9EeSFFduuR7vvgw" association="_dep60S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_derI8S_9EeSFFduuR7vvgw" name="" memberEnd="_derI8i_9EeSFFduuR7vvgw _dSiKYC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_derI8i_9EeSFFduuR7vvgw" name="" type="_cZ-xwC_9EeSFFduuR7vvgw" association="_derI8S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_desXEC_9EeSFFduuR7vvgw" name="" memberEnd="_desXES_9EeSFFduuR7vvgw _dSnp8C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_desXES_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_desXEC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_detlMC_9EeSFFduuR7vvgw" name="" memberEnd="_detlMS_9EeSFFduuR7vvgw _dSr7YC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_detlMS_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_detlMC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deuMQS_9EeSFFduuR7vvgw" name="" memberEnd="_deuMQi_9EeSFFduuR7vvgw _dSuXoC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deuMQi_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_deuMQS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_devaYS_9EeSFFduuR7vvgw" name="" memberEnd="_devaYi_9EeSFFduuR7vvgw _dSvlwC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_devaYi_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_devaYS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dewogC_9EeSFFduuR7vvgw" name="" memberEnd="_dewogS_9EeSFFduuR7vvgw _dSxa8S_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dewogS_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_dewogC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dexPkS_9EeSFFduuR7vvgw" name="" memberEnd="_dexPki_9EeSFFduuR7vvgw _dSz3MC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dexPki_9EeSFFduuR7vvgw" name="" type="_ca1tYC_9EeSFFduuR7vvgw" association="_dexPkS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_deydsC_9EeSFFduuR7vvgw" name="" memberEnd="_deydsS_9EeSFFduuR7vvgw _dS5WwC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_deydsS_9EeSFFduuR7vvgw" name="" type="_cbdYcC_9EeSFFduuR7vvgw" association="_deydsC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dezEwS_9EeSFFduuR7vvgw" name="" memberEnd="_dezEwi_9EeSFFduuR7vvgw _dS9oMC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dezEwi_9EeSFFduuR7vvgw" name="" type="_cbjfEC_9EeSFFduuR7vvgw" association="_dezEwS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de0S4S_9EeSFFduuR7vvgw" name="" memberEnd="_de0S4i_9EeSFFduuR7vvgw _dTArgC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de0S4i_9EeSFFduuR7vvgw" name="" type="_cb4PMC_9EeSFFduuR7vvgw" association="_de0S4S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de1hAC_9EeSFFduuR7vvgw" name="" memberEnd="_de1hAS_9EeSFFduuR7vvgw _dTB5oS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de1hAS_9EeSFFduuR7vvgw" name="" type="_cb4PMC_9EeSFFduuR7vvgw" association="_de1hAC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de2IES_9EeSFFduuR7vvgw" name="" memberEnd="_de2IEi_9EeSFFduuR7vvgw _dTDHwS_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de2IEi_9EeSFFduuR7vvgw" name="" type="_cb4PMC_9EeSFFduuR7vvgw" association="_de2IES_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de3WMC_9EeSFFduuR7vvgw" name="" memberEnd="_de3WMS_9EeSFFduuR7vvgw _dTE88C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de3WMS_9EeSFFduuR7vvgw" name="" type="_cb4PMC_9EeSFFduuR7vvgw" association="_de3WMC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de4kUC_9EeSFFduuR7vvgw" name="" memberEnd="_de4kUS_9EeSFFduuR7vvgw _dTMRsC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de4kUS_9EeSFFduuR7vvgw" name="" type="_cc7_IC_9EeSFFduuR7vvgw" association="_de4kUC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de5ycC_9EeSFFduuR7vvgw" name="" memberEnd="_de5ycS_9EeSFFduuR7vvgw _dTOt8C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de5ycS_9EeSFFduuR7vvgw" name="" type="_cc7_IC_9EeSFFduuR7vvgw" association="_de5ycC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de6ZgS_9EeSFFduuR7vvgw" name="" memberEnd="_de6Zgi_9EeSFFduuR7vvgw _dTZtEC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de6Zgi_9EeSFFduuR7vvgw" name="" type="_cdn7oC_9EeSFFduuR7vvgw" association="_de6ZgS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de7noS_9EeSFFduuR7vvgw" name="" memberEnd="_de7noi_9EeSFFduuR7vvgw _dTi3AC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de7noi_9EeSFFduuR7vvgw" name="" type="_ceUfMC_9EeSFFduuR7vvgw" association="_de7noS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de81wC_9EeSFFduuR7vvgw" name="" memberEnd="_de81wS_9EeSFFduuR7vvgw _dTksMC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de81wS_9EeSFFduuR7vvgw" name="" type="_ceUfMC_9EeSFFduuR7vvgw" association="_de81wC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de9c0S_9EeSFFduuR7vvgw" name="" memberEnd="_de9c0i_9EeSFFduuR7vvgw _dTt2IC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de9c0i_9EeSFFduuR7vvgw" name="" type="_ceihoC_9EeSFFduuR7vvgw" association="_de9c0S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de-q8S_9EeSFFduuR7vvgw" name="" memberEnd="_de-q8i_9EeSFFduuR7vvgw _dTw5cC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de-q8i_9EeSFFduuR7vvgw" name="" type="_ceihoC_9EeSFFduuR7vvgw" association="_de-q8S_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_de_5EC_9EeSFFduuR7vvgw" name="" memberEnd="_de_5ES_9EeSFFduuR7vvgw _dTz8wC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_de_5ES_9EeSFFduuR7vvgw" name="" type="_ceihoC_9EeSFFduuR7vvgw" association="_de_5EC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfAgIS_9EeSFFduuR7vvgw" name="" memberEnd="_dfAgIi_9EeSFFduuR7vvgw _dT3AEC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfAgIi_9EeSFFduuR7vvgw" name="" type="_ceihoC_9EeSFFduuR7vvgw" association="_dfAgIS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfBuQC_9EeSFFduuR7vvgw" name="" memberEnd="_dfBuQS_9EeSFFduuR7vvgw _dUB_MC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfBuQS_9EeSFFduuR7vvgw" name="" type="_cfGiUC_9EeSFFduuR7vvgw" association="_dfBuQC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfC8YC_9EeSFFduuR7vvgw" name="" memberEnd="_dfC8YS_9EeSFFduuR7vvgw _dUIF0C_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfC8YS_9EeSFFduuR7vvgw" name="" type="_cfinMC_9EeSFFduuR7vvgw" association="_dfC8YC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfEKgC_9EeSFFduuR7vvgw" name="" memberEnd="_dfEKgS_9EeSFFduuR7vvgw _dUKiES_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfEKgS_9EeSFFduuR7vvgw" name="" type="_cfinMC_9EeSFFduuR7vvgw" association="_dfEKgC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfOikS_9EeSFFduuR7vvgw" name="" memberEnd="_dfOiki_9EeSFFduuR7vvgw _dcn6gC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfOiki_9EeSFFduuR7vvgw" name="" type="_cZ-xwC_9EeSFFduuR7vvgw" association="_dfOikS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfPwsS_9EeSFFduuR7vvgw" name="" memberEnd="_dfPwsi_9EeSFFduuR7vvgw _dcpIoC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfPwsi_9EeSFFduuR7vvgw" name="" type="_cZ-xwC_9EeSFFduuR7vvgw" association="_dfPwsS_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfSM8C_9EeSFFduuR7vvgw" name="" memberEnd="_dfSM8S_9EeSFFduuR7vvgw _dcv2UC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfSM8S_9EeSFFduuR7vvgw" name="" type="_cdn7oC_9EeSFFduuR7vvgw" association="_dfSM8C_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfV3UC_9EeSFFduuR7vvgw" name="" memberEnd="_dfV3US_9EeSFFduuR7vvgw _dcxrgC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfV3US_9EeSFFduuR7vvgw" name="" type="_ceUfMC_9EeSFFduuR7vvgw" association="_dfV3UC_9EeSFFduuR7vvgw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dfYTkS_9EeSFFduuR7vvgw" name="" memberEnd="_dfYTki_9EeSFFduuR7vvgw _dcy5oC_9EeSFFduuR7vvgw">
              <ownedEnd xmi:id="_dfYTki_9EeSFFduuR7vvgw" name="" type="_ceUfMC_9EeSFFduuR7vvgw" association="_dfYTkS_9EeSFFduuR7vvgw"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_bbkBsC_9EeSFFduuR7vvgw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_bbkBsS_9EeSFFduuR7vvgw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_bbkowC_9EeSFFduuR7vvgw" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dFcwoS_9EeSFFduuR7vvgw" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bhV5kC_9EeSFFduuR7vvgw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_dHPgYC_9EeSFFduuR7vvgw" name="Matcher"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dHQugS_9EeSFFduuR7vvgw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_btPAgC_9EeSFFduuR7vvgw" name="logging">
          <packagedElement xmi:type="uml:Class" xmi:id="_dJxP8S_9EeSFFduuR7vvgw" name="Logger"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dFX4IC_9EeSFFduuR7vvgw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dFZtUC_9EeSFFduuR7vvgw" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dFbigC_9EeSFFduuR7vvgw" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dGlZEC_9EeSFFduuR7vvgw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dGmnMS_9EeSFFduuR7vvgw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dGocYC_9EeSFFduuR7vvgw" name="Comparator"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_dGpqgS_9EeSFFduuR7vvgw" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dIGcAC_9EeSFFduuR7vvgw" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dJN2UC_9EeSFFduuR7vvgw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dJPEcS_9EeSFFduuR7vvgw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dJQ5oC_9EeSFFduuR7vvgw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dJVyIC_9EeSFFduuR7vvgw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dKoyoC_9EeSFFduuR7vvgw" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dLGFoC_9EeSFFduuR7vvgw" name="ArrayDeque"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dLHTwS_9EeSFFduuR7vvgw" name="Deque"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dLtJoC_9EeSFFduuR7vvgw" name="Hashtable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_be63sC_9EeSFFduuR7vvgw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_dGf5gC_9EeSFFduuR7vvgw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dOn6wC_9EeSFFduuR7vvgw" name="OutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dOpv8C_9EeSFFduuR7vvgw" name="PrintStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dOszQC_9EeSFFduuR7vvgw" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dOuocC_9EeSFFduuR7vvgw" name="ByteArrayOutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_be8F0C_9EeSFFduuR7vvgw" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_dGhHoS_9EeSFFduuR7vvgw" name="DateFormat"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dGiVwS_9EeSFFduuR7vvgw" name="ParseException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dGjj4S_9EeSFFduuR7vvgw" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_btOZcC_9EeSFFduuR7vvgw" name="sql">
        <packagedElement xmi:type="uml:DataType" xmi:id="_dJvawC_9EeSFFduuR7vvgw" name="Timestamp"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_bwMN4C_9EeSFFduuR7vvgw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_dKY7AS_9EeSFFduuR7vvgw" name="Class"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dMnIkC_9EeSFFduuR7vvgw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dM7RoC_9EeSFFduuR7vvgw" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dNFCoC_9EeSFFduuR7vvgw" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dNGQwC_9EeSFFduuR7vvgw" name="StringBuilder"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dN_BkC_9EeSFFduuR7vvgw" name="RuntimeException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_be-iEC_9EeSFFduuR7vvgw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_be_JIC_9EeSFFduuR7vvgw" name="json">
        <packagedElement xmi:type="uml:Package" xmi:id="_be_JIS_9EeSFFduuR7vvgw" name="simple">
          <packagedElement xmi:type="uml:Class" xmi:id="_dGrfsC_9EeSFFduuR7vvgw" name="JSONArray"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dGst0C_9EeSFFduuR7vvgw" name="JSONObject"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dHbGkS_9EeSFFduuR7vvgw" name="JSONValue"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_bhXHsC_9EeSFFduuR7vvgw" name="apache">
        <packagedElement xmi:type="uml:Package" xmi:id="_bhXHsS_9EeSFFduuR7vvgw" name="http">
          <packagedElement xmi:type="uml:Package" xmi:id="_bhXuwC_9EeSFFduuR7vvgw" name="client">
            <packagedElement xmi:type="uml:Package" xmi:id="_bhY84C_9EeSFFduuR7vvgw" name="fluent">
              <packagedElement xmi:type="uml:Class" xmi:id="_dNbn8C_9EeSFFduuR7vvgw" name="Executor"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_dNjjwC_9EeSFFduuR7vvgw" name="Request"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dHUY4S_9EeSFFduuR7vvgw" name="ClientProtocolException"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dHVnAS_9EeSFFduuR7vvgw" name="HttpResponseException"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_bhbZIC_9EeSFFduuR7vvgw" name="entity">
            <packagedElement xmi:type="uml:Class" xmi:id="_dHW1IS_9EeSFFduuR7vvgw" name="ContentType"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_bhcnQC_9EeSFFduuR7vvgw" name="impl">
            <packagedElement xmi:type="uml:Package" xmi:id="_bhcnQS_9EeSFFduuR7vvgw" name="client">
              <packagedElement xmi:type="uml:Class" xmi:id="_dHYDQC_9EeSFFduuR7vvgw" name="HttpClientBuilder"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_dHYqUS_9EeSFFduuR7vvgw" name="LaxRedirectStrategy"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_bhd1YC_9EeSFFduuR7vvgw" name="util">
            <packagedElement xmi:type="uml:Class" xmi:id="_dHZ4cS_9EeSFFduuR7vvgw" name="EntityUtils"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dHSjsC_9EeSFFduuR7vvgw" name="HttpResponse"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_bics0C_9EeSFFduuR7vvgw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_buLbsC_9EeSFFduuR7vvgw" name="rules">
          <packagedElement xmi:type="uml:Class" xmi:id="_dKCVsS_9EeSFFduuR7vvgw" name="ExpectedException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bwBOwC_9EeSFFduuR7vvgw" name="runner">
          <packagedElement xmi:type="uml:Package" xmi:id="_bwK_wC_9EeSFFduuR7vvgw" name="notification">
            <packagedElement xmi:type="uml:Class" xmi:id="_dKXs4S_9EeSFFduuR7vvgw" name="Failure"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dKQ_MC_9EeSFFduuR7vvgw" name="RunWith"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dKV3sC_9EeSFFduuR7vvgw" name="JUnitCore"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dKXF0C_9EeSFFduuR7vvgw" name="Result"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_bwB10C_9EeSFFduuR7vvgw" name="runners">
          <packagedElement xmi:type="uml:Package" xmi:id="_bwCc4C_9EeSFFduuR7vvgw" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_dKUCgC_9EeSFFduuR7vvgw" name="SuiteClasses"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_dKS0YC_9EeSFFduuR7vvgw" name="Suite"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dHq-MC_9EeSFFduuR7vvgw" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dHszYC_9EeSFFduuR7vvgw" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dHuBgS_9EeSFFduuR7vvgw" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dHv2sS_9EeSFFduuR7vvgw" name="Test"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dKAggC_9EeSFFduuR7vvgw" name="Rule"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_bw5YgC_9EeSFFduuR7vvgw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_bw5YgS_9EeSFFduuR7vvgw" name="sun">
        <packagedElement xmi:type="uml:Package" xmi:id="_bw5_kC_9EeSFFduuR7vvgw" name="corba">
          <packagedElement xmi:type="uml:Package" xmi:id="_bw5_kS_9EeSFFduuR7vvgw" name="se">
            <packagedElement xmi:type="uml:Package" xmi:id="_bw6moC_9EeSFFduuR7vvgw" name="impl">
              <packagedElement xmi:type="uml:Package" xmi:id="_bw7NsC_9EeSFFduuR7vvgw" name="orbutil">
                <packagedElement xmi:type="uml:Package" xmi:id="_bw7NsS_9EeSFFduuR7vvgw" name="graph">
                  <packagedElement xmi:type="uml:Interface" xmi:id="_dKfosC_9EeSFFduuR7vvgw" name="Graph"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_YgO5AC_9EeSFFduuR7vvgw">
      <eAnnotations xmi:id="_YgPgEC_9EeSFFduuR7vvgw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_YgQHIC_9EeSFFduuR7vvgw" base_Package="_YSAPwC_9EeSFFduuR7vvgw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_cJv9YC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cJnagC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKDfYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKBqMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKJmAC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKHJwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKN3cC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKLbMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKSv8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKQTsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKarwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKWaUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKgyYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKb54C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cKngEC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cKj1sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cLIdcC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cLFaIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cLJrkC_9EeSFFduuR7vvgw" base_Element="_cLFaIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLPLIC_9EeSFFduuR7vvgw" base_Element="_cLN9AC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLQZQC_9EeSFFduuR7vvgw" base_Element="_cLPyMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cLUDoC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cLRAUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLUqsC_9EeSFFduuR7vvgw" base_Element="_cLRAUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLWf4C_9EeSFFduuR7vvgw" base_Element="_cLV40C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cLaxUC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cLXuAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLbYYC_9EeSFFduuR7vvgw" base_Element="_cLXuAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLdNkC_9EeSFFduuR7vvgw" base_Element="_cLb_cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cLg38C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cLd0oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLhfAC_9EeSFFduuR7vvgw" base_Element="_cLd0oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLj7QC_9EeSFFduuR7vvgw" base_Element="_cLitIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cLozwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cLlJYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_cLpa0C_9EeSFFduuR7vvgw" base_Element="_cLlJYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cLtFMC_9EeSFFduuR7vvgw" base_Element="_cLqo8C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cLx9sC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_cL2PIC_9EeSFFduuR7vvgw" base_Element="_cL0Z8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cMUJMC_9EeSFFduuR7vvgw" base_Element="_cMS7EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cMUwQC_9EeSFFduuR7vvgw" base_Element="_cMS7EC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cMVXUC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cMiysC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cMfIUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cMxcMC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cMuY4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cNCh8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cM-QgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cNM6AC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cNJ2sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cNU10C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cNRLcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cNZHQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cNWrAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRPFcC_9EeSFFduuR7vvgw" base_Element="_cRN3UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRQTkC_9EeSFFduuR7vvgw" base_Element="_cRN3UC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRQTkS_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRSIwC_9EeSFFduuR7vvgw" base_Element="_cRQ6oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRTW4C_9EeSFFduuR7vvgw" base_Element="_cRQ6oC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRTW4S_9EeSFFduuR7vvgw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRVMEC_9EeSFFduuR7vvgw" base_Element="_cRT98C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRVzIC_9EeSFFduuR7vvgw" base_Element="_cRT98C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRVzIS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRb5wC_9EeSFFduuR7vvgw" base_Element="_cRXBQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRdH4C_9EeSFFduuR7vvgw" base_Element="_cRXBQC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRdu8C_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRfkIC_9EeSFFduuR7vvgw" base_Element="_cReWAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRgyQC_9EeSFFduuR7vvgw" base_Element="_cReWAC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRgyQS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRincC_9EeSFFduuR7vvgw" base_Element="_cRhZUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRj1kC_9EeSFFduuR7vvgw" base_Element="_cRhZUC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRj1kS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRmR0C_9EeSFFduuR7vvgw" base_Element="_cRkcoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRm44C_9EeSFFduuR7vvgw" base_Element="_cRkcoC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRm44S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRouEC_9EeSFFduuR7vvgw" base_Element="_cRnf8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRp8MC_9EeSFFduuR7vvgw" base_Element="_cRnf8C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRp8MS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRrxYC_9EeSFFduuR7vvgw" base_Element="_cRp8Mi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRs_gC_9EeSFFduuR7vvgw" base_Element="_cRp8Mi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRs_gS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRu0sC_9EeSFFduuR7vvgw" base_Element="_cRtmkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRvbwC_9EeSFFduuR7vvgw" base_Element="_cRtmkC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRvbwS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRxQ8C_9EeSFFduuR7vvgw" base_Element="_cRwC0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRx4AC_9EeSFFduuR7vvgw" base_Element="_cRwC0C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cRx4AS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cRzGIC_9EeSFFduuR7vvgw" base_Element="_cRyfEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cRztMC_9EeSFFduuR7vvgw" base_Element="_cRyfEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR0UQC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cR1iYC_9EeSFFduuR7vvgw" base_Element="_cR0UQS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cR2JcC_9EeSFFduuR7vvgw" base_Element="_cR0UQS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR2wgC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cR3-oC_9EeSFFduuR7vvgw" base_Element="_cR2wgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cR5MwC_9EeSFFduuR7vvgw" base_Element="_cR2wgS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR5MwS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cR7B8C_9EeSFFduuR7vvgw" base_Element="_cR5z0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cR7pAC_9EeSFFduuR7vvgw" base_Element="_cR5z0C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR7pAS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cR9eMC_9EeSFFduuR7vvgw" base_Element="_cR8QEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cR-FQC_9EeSFFduuR7vvgw" base_Element="_cR8QEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR-FQS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cR_TYC_9EeSFFduuR7vvgw" base_Element="_cR-FQi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cR_6cC_9EeSFFduuR7vvgw" base_Element="_cR-FQi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cR_6cS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSBIkC_9EeSFFduuR7vvgw" base_Element="_cR_6ci_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSBvoC_9EeSFFduuR7vvgw" base_Element="_cR_6ci_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSCWsC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSEL4C_9EeSFFduuR7vvgw" base_Element="_cSC9wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSEy8C_9EeSFFduuR7vvgw" base_Element="_cSC9wC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSFaAC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSHPMC_9EeSFFduuR7vvgw" base_Element="_cSGBEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSH2QC_9EeSFFduuR7vvgw" base_Element="_cSGBEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSH2QS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSJEYC_9EeSFFduuR7vvgw" base_Element="_cSH2Qi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSJrcC_9EeSFFduuR7vvgw" base_Element="_cSH2Qi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSJrcS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSK5kC_9EeSFFduuR7vvgw" base_Element="_cSJrci_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSK5kS_9EeSFFduuR7vvgw" base_Element="_cSJrci_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSLgoC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSMuwC_9EeSFFduuR7vvgw" base_Element="_cSLgoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSNV0C_9EeSFFduuR7vvgw" base_Element="_cSLgoS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSNV0S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSOj8C_9EeSFFduuR7vvgw" base_Element="_cSNV0i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSPLAC_9EeSFFduuR7vvgw" base_Element="_cSNV0i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSPyEC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSRnQC_9EeSFFduuR7vvgw" base_Element="_cSQZIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSSOUC_9EeSFFduuR7vvgw" base_Element="_cSQZIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSSOUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSXt4C_9EeSFFduuR7vvgw" base_Element="_cSUqkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSY8AC_9EeSFFduuR7vvgw" base_Element="_cSUqkC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSY8AS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSaxMC_9EeSFFduuR7vvgw" base_Element="_cSZjEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSbYQC_9EeSFFduuR7vvgw" base_Element="_cSZjEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSbYQS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cSdNcC_9EeSFFduuR7vvgw" base_Element="_cSb_UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cSd0gC_9EeSFFduuR7vvgw" base_Element="_cSb_UC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cSebkC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cTaPsC_9EeSFFduuR7vvgw" base_Element="_cTYagC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cTa2wC_9EeSFFduuR7vvgw" base_Element="_cTYagC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cTbd0C_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cTfvQC_9EeSFFduuR7vvgw" base_Element="_cTd6EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cTgWUC_9EeSFFduuR7vvgw" base_Element="_cTd6EC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cTgWUS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cTuYwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cTrVcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cT9CQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cT5-8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cT-QYC_9EeSFFduuR7vvgw" base_Element="_cT5-8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cT_egC_9EeSFFduuR7vvgw" base_Element="_cT5-8C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cUAFkC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cUEXAC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cUB6wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cUE-EC_9EeSFFduuR7vvgw" base_Element="_cUB6wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cUGMMC_9EeSFFduuR7vvgw" base_Element="_cUB6wC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cUGMMS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cULEsC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cUIBYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cULrwC_9EeSFFduuR7vvgw" base_Element="_cUIBYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cUNg8C_9EeSFFduuR7vvgw" base_Element="_cUIBYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cUNg8S_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cUsCEC_9EeSFFduuR7vvgw" base_Element="_cUqM4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cUspIC_9EeSFFduuR7vvgw" base_Element="_cUqM4C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cUspIS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cU4PUC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cU1zEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cU7SoC_9EeSFFduuR7vvgw" base_Element="_cU5dcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cU75sC_9EeSFFduuR7vvgw" base_Element="_cU5dcC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cU8gwC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cVfTUC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cVc3EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cVnPIC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cVlZ8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cVsHoC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cVprYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cWCF4C_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cV_poC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cWL24C_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cWJaoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cWPhQC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cWNFAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cWW2AC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cWVA0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cWk4cC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_cWZ5UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cXEnsC_9EeSFFduuR7vvgw" base_Element="_cXDZkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cXEnsS_9EeSFFduuR7vvgw" base_Element="_cXDZkC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cXFOwC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cXO_wC_9EeSFFduuR7vvgw" genericsValue="Follower, Double" base_Element="_cXNxoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_cXbNAS_9EeSFFduuR7vvgw" base_Element="_cXYwwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cXsSwS_9EeSFFduuR7vvgw" base_Element="_cXrrsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cXs50C_9EeSFFduuR7vvgw" base_Element="_cXrrsC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cXs50S_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cXuH8C_9EeSFFduuR7vvgw" base_Element="_cXs50i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cXuH8S_9EeSFFduuR7vvgw" base_Element="_cXs50i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cXuH8i_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cX01oC_9EeSFFduuR7vvgw" base_Element="_cXzngC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cYKM0C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYBC4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cYUk4C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYSIoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cYXBIC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYVzAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cYargC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYY2UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cYb5oC_9EeSFFduuR7vvgw" base_Element="_cYY2UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cYcgsC_9EeSFFduuR7vvgw" base_Element="_cYY2UC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cYcgsS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cYgLEC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYdu0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cYhZMC_9EeSFFduuR7vvgw" base_Element="_cYdu0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cYinUC_9EeSFFduuR7vvgw" base_Element="_cYdu0C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cYinUS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cYlqoC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYj1cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cYmRsC_9EeSFFduuR7vvgw" base_Element="_cYj1cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cYnf0C_9EeSFFduuR7vvgw" base_Element="_cYj1cC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cYoG4C_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cYrxQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYpVAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cYs_YC_9EeSFFduuR7vvgw" base_Element="_cYpVAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cYu0kC_9EeSFFduuR7vvgw" base_Element="_cYpVAC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cYu0kS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_cYx34C_9EeSFFduuR7vvgw" genericsValue="? extends Vertex&lt;T>" base_Element="_cYwCsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cY1iQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cYzGAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cZcmQC_9EeSFFduuR7vvgw" base_Element="_cZbYIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cZd0YC_9EeSFFduuR7vvgw" base_Element="_cZbYIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cZd0YS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cZfpkC_9EeSFFduuR7vvgw" base_Element="_cZfCgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_cZgQoS_9EeSFFduuR7vvgw" base_Element="_cZfCgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cZg3sC_9EeSFFduuR7vvgw" base_Element="_cZfCgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cZg3sS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cZkiEC_9EeSFFduuR7vvgw" base_Element="_cZis4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_cZlJIC_9EeSFFduuR7vvgw" base_Element="_cZis4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cZm-UC_9EeSFFduuR7vvgw" base_Element="_cZis4C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cZm-US_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cZozgC_9EeSFFduuR7vvgw" base_Element="_cZoMcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cZqBoC_9EeSFFduuR7vvgw" base_Element="_cZoMcC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cZqBoS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cZr20C_9EeSFFduuR7vvgw" base_Element="_cZqosC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cZsd4C_9EeSFFduuR7vvgw" base_Element="_cZqosC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cZsd4S_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caDqQC_9EeSFFduuR7vvgw" base_Element="_caB1EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caERUC_9EeSFFduuR7vvgw" base_Element="_caB1EC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caERUS_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caHUoC_9EeSFFduuR7vvgw" base_Element="_caGGgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caH7sC_9EeSFFduuR7vvgw" base_Element="_caGGgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caIiwC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caJw4C_9EeSFFduuR7vvgw" base_Element="_caIiwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caK_AC_9EeSFFduuR7vvgw" base_Element="_caIiwS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caK_AS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caNbQC_9EeSFFduuR7vvgw" base_Element="_caLmEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caOCUC_9EeSFFduuR7vvgw" base_Element="_caLmEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caOCUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caQekC_9EeSFFduuR7vvgw" base_Element="_caOpYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caRFoC_9EeSFFduuR7vvgw" base_Element="_caOpYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caRFoS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caSTwC_9EeSFFduuR7vvgw" base_Element="_caRFoi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caS60C_9EeSFFduuR7vvgw" base_Element="_caRFoi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caTh4C_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caUwAC_9EeSFFduuR7vvgw" base_Element="_caTh4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caVXEC_9EeSFFduuR7vvgw" base_Element="_caTh4S_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caVXES_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caXMQC_9EeSFFduuR7vvgw" base_Element="_caV-IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caYaYC_9EeSFFduuR7vvgw" base_Element="_caV-IC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caYaYS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caa2oC_9EeSFFduuR7vvgw" base_Element="_caZBcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cabdsC_9EeSFFduuR7vvgw" base_Element="_caZBcC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cabdsS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cacr0C_9EeSFFduuR7vvgw" base_Element="_cacEwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cadS4C_9EeSFFduuR7vvgw" base_Element="_cacEwC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cadS4S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caehAC_9EeSFFduuR7vvgw" base_Element="_cad58C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cafIEC_9EeSFFduuR7vvgw" base_Element="_cad58C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cafIES_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cagWMC_9EeSFFduuR7vvgw" base_Element="_cafIEi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cahkUC_9EeSFFduuR7vvgw" base_Element="_cafIEi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cahkUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caiLYC_9EeSFFduuR7vvgw" base_Element="_cahkUi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_caiycC_9EeSFFduuR7vvgw" base_Element="_cahkUi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_caiycS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cakAkC_9EeSFFduuR7vvgw" base_Element="_cajZgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_calOsC_9EeSFFduuR7vvgw" base_Element="_cajZgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_calOsS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_canD4C_9EeSFFduuR7vvgw" base_Element="_cal1wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_canq8C_9EeSFFduuR7vvgw" base_Element="_cal1wC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_canq8S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cao5EC_9EeSFFduuR7vvgw" base_Element="_canq8i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cao5ES_9EeSFFduuR7vvgw" base_Element="_canq8i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_capgIC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_caquQC_9EeSFFduuR7vvgw" base_Element="_capgIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_carVUC_9EeSFFduuR7vvgw" base_Element="_capgIS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_carVUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ca6l4C_9EeSFFduuR7vvgw" base_Element="_ca5XwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ca6l4S_9EeSFFduuR7vvgw" base_Element="_ca5XwC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ca7M8C_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ca8bEC_9EeSFFduuR7vvgw" base_Element="_ca70AC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ca9pMC_9EeSFFduuR7vvgw" base_Element="_ca70AC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ca9pMS_9EeSFFduuR7vvgw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbAFcC_9EeSFFduuR7vvgw" base_Element="_ca-3UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbBTkC_9EeSFFduuR7vvgw" base_Element="_ca-3UC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbBTkS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbDIwC_9EeSFFduuR7vvgw" base_Element="_cbB6oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbDv0C_9EeSFFduuR7vvgw" base_Element="_cbB6oC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbDv0S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbE98C_9EeSFFduuR7vvgw" base_Element="_cbDv0i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbFlAC_9EeSFFduuR7vvgw" base_Element="_cbDv0i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbFlAS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbGzIC_9EeSFFduuR7vvgw" base_Element="_cbGMEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbHaMC_9EeSFFduuR7vvgw" base_Element="_cbGMEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbHaMS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbIoUC_9EeSFFduuR7vvgw" base_Element="_cbHaMi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbJPYC_9EeSFFduuR7vvgw" base_Element="_cbHaMi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbJPYS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbKdgC_9EeSFFduuR7vvgw" base_Element="_cbJ2cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbLEkC_9EeSFFduuR7vvgw" base_Element="_cbJ2cC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbLroC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbbjQC_9EeSFFduuR7vvgw" base_Element="_cbaVIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbcKUC_9EeSFFduuR7vvgw" base_Element="_cbaVIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbcKUS_9EeSFFduuR7vvgw" name="RunWith">
      <annotationParameters xmi:id="_cbcKUi_9EeSFFduuR7vvgw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcrk4C_9EeSFFduuR7vvgw" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_cbcxYC_9EeSFFduuR7vvgw" name="SuiteClasses">
      <annotationParameters xmi:id="_cbcxYS_9EeSFFduuR7vvgw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcrk4S_9EeSFFduuR7vvgw" value="AbstractEdgeTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcrk4i_9EeSFFduuR7vvgw" value="AbstractVertexTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcrk4y_9EeSFFduuR7vvgw" value="ActorTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcsL8C_9EeSFFduuR7vvgw" value="BSTNodeTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcsL8S_9EeSFFduuR7vvgw" value="EdgeTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcsL8i_9EeSFFduuR7vvgw" value="SampleDataGeneratorTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcsL8y_9EeSFFduuR7vvgw" value="StackNodeTest.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcsL9C_9EeSFFduuR7vvgw" value="VertexTest.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbmiYC_9EeSFFduuR7vvgw" base_Element="_cblUQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbnJcC_9EeSFFduuR7vvgw" base_Element="_cblUQC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbnJcS_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cboXkC_9EeSFFduuR7vvgw" base_Element="_cbnwgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbo-oC_9EeSFFduuR7vvgw" base_Element="_cbnwgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbo-oS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbqMwC_9EeSFFduuR7vvgw" base_Element="_cbo-oi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbqz0C_9EeSFFduuR7vvgw" base_Element="_cbo-oi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbqz0S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbsB8C_9EeSFFduuR7vvgw" base_Element="_cbra4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbspAC_9EeSFFduuR7vvgw" base_Element="_cbra4C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbspAS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbt3IC_9EeSFFduuR7vvgw" base_Element="_cbtQEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbueMC_9EeSFFduuR7vvgw" base_Element="_cbtQEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbueMS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbvsUC_9EeSFFduuR7vvgw" base_Element="_cbvFQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbvsUS_9EeSFFduuR7vvgw" base_Element="_cbvFQC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbvsUi_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbw6cC_9EeSFFduuR7vvgw" base_Element="_cbwTYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbw6cS_9EeSFFduuR7vvgw" base_Element="_cbwTYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbw6ci_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cbyIkC_9EeSFFduuR7vvgw" base_Element="_cbxhgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cbyvoC_9EeSFFduuR7vvgw" base_Element="_cbxhgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cbyvoS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cb9uwC_9EeSFFduuR7vvgw" base_Element="_cb75kC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cb-84C_9EeSFFduuR7vvgw" base_Element="_cb75kC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cb-84S_9EeSFFduuR7vvgw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccALAC_9EeSFFduuR7vvgw" base_Element="_cb_j8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccAyEC_9EeSFFduuR7vvgw" base_Element="_cb_j8C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccBZIC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccCAMC_9EeSFFduuR7vvgw" base_Element="_ccBZIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccCnQC_9EeSFFduuR7vvgw" base_Element="_ccBZIS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccDOUC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccEccC_9EeSFFduuR7vvgw" base_Element="_ccDOUS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccEccS_9EeSFFduuR7vvgw" base_Element="_ccDOUS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccEcci_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccFqkC_9EeSFFduuR7vvgw" base_Element="_ccFDgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccGRoC_9EeSFFduuR7vvgw" base_Element="_ccFDgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccGRoS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccIG0C_9EeSFFduuR7vvgw" base_Element="_ccG4sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccIt4C_9EeSFFduuR7vvgw" base_Element="_ccG4sC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccIt4S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccJ8AC_9EeSFFduuR7vvgw" base_Element="_ccIt4i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccKjEC_9EeSFFduuR7vvgw" base_Element="_ccIt4i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccKjES_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccMYQC_9EeSFFduuR7vvgw" base_Element="_ccLKIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccM_UC_9EeSFFduuR7vvgw" base_Element="_ccLKIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccM_US_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccONcC_9EeSFFduuR7vvgw" base_Element="_ccNmYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccO0gC_9EeSFFduuR7vvgw" base_Element="_ccNmYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccPbkC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccRQwC_9EeSFFduuR7vvgw" base_Element="_ccQCoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccR30C_9EeSFFduuR7vvgw" base_Element="_ccQCoC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccR30S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccSe4C_9EeSFFduuR7vvgw" base_Element="_ccR30i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccTF8C_9EeSFFduuR7vvgw" base_Element="_ccR30i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccTF8S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccUUEC_9EeSFFduuR7vvgw" base_Element="_ccTtAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccU7IC_9EeSFFduuR7vvgw" base_Element="_ccTtAC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccViMC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccWwUC_9EeSFFduuR7vvgw" base_Element="_ccViMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccXXYC_9EeSFFduuR7vvgw" base_Element="_ccViMS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccXXYS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccYlgC_9EeSFFduuR7vvgw" base_Element="_ccX-cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccZMkC_9EeSFFduuR7vvgw" base_Element="_ccX-cC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccZzoC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccbBwC_9EeSFFduuR7vvgw" base_Element="_ccZzoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccbo0C_9EeSFFduuR7vvgw" base_Element="_ccZzoS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccbo0S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccc28C_9EeSFFduuR7vvgw" base_Element="_cccP4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccdeAC_9EeSFFduuR7vvgw" base_Element="_cccP4C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccdeAS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccesIC_9EeSFFduuR7vvgw" base_Element="_cceFEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccf6QC_9EeSFFduuR7vvgw" base_Element="_cceFEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccf6QS_9EeSFFduuR7vvgw" name="SuppressWarnings">
      <annotationParameters xmi:id="_ccf6Qi_9EeSFFduuR7vvgw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_dcuBIC_9EeSFFduuR7vvgw" value="&quot;deprecation&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_ccf6Qy_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cchvcC_9EeSFFduuR7vvgw" base_Element="_ccghUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cciWgC_9EeSFFduuR7vvgw" base_Element="_ccghUC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cciWgS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ccjkoC_9EeSFFduuR7vvgw" base_Element="_cciWgi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccjkoS_9EeSFFduuR7vvgw" base_Element="_cciWgi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cckLsC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cclZ0C_9EeSFFduuR7vvgw" base_Element="_cckLsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ccmA4C_9EeSFFduuR7vvgw" base_Element="_cckLsS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ccmA4S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ccyOIC_9EeSFFduuR7vvgw" typeParameterDeclarationValue="Follower" base_Operation="_ccxnEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cczcQC_9EeSFFduuR7vvgw" base_Element="_ccxnEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_cc0DUC_9EeSFFduuR7vvgw" base_Element="_ccxnES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_cc-bYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_cc7_IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_cdZSIC_9EeSFFduuR7vvgw" typeParameterDeclarationValue="T" base_Operation="_cdYrEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdagQC_9EeSFFduuR7vvgw" base_Element="_cdYrEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_cdbHUC_9EeSFFduuR7vvgw" base_Element="_cdYrES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdgm4C_9EeSFFduuR7vvgw" base_Element="_cdfYwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdhN8C_9EeSFFduuR7vvgw" base_Element="_cdfYwC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdhN8S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdicEC_9EeSFFduuR7vvgw" base_Element="_cdhN8i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdjDIC_9EeSFFduuR7vvgw" base_Element="_cdhN8i_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdjDIS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdkRQC_9EeSFFduuR7vvgw" base_Element="_cdjqMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdk4UC_9EeSFFduuR7vvgw" base_Element="_cdjqMC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdk4US_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdmGcC_9EeSFFduuR7vvgw" base_Element="_cdk4Ui_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdmtgC_9EeSFFduuR7vvgw" base_Element="_cdk4Ui_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdmtgS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdpw0C_9EeSFFduuR7vvgw" base_Element="_cdpJwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdqX4C_9EeSFFduuR7vvgw" base_Element="_cdpJwC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdq-8C_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdrmAC_9EeSFFduuR7vvgw" base_Element="_cdq-8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cds0IC_9EeSFFduuR7vvgw" base_Element="_cdq-8S_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cds0IS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cduCQC_9EeSFFduuR7vvgw" base_Element="_cdtbMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdupUC_9EeSFFduuR7vvgw" base_Element="_cdtbMC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdupUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdvQYC_9EeSFFduuR7vvgw" base_Element="_cdupUi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdwegC_9EeSFFduuR7vvgw" base_Element="_cdupUi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdwegS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cdyTsC_9EeSFFduuR7vvgw" base_Element="_cdxFkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cdy6wC_9EeSFFduuR7vvgw" base_Element="_cdxFkC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cdy6wS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ceF1sC_9EeSFFduuR7vvgw" typeParameterDeclarationValue="T" base_Operation="_ceFOoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ceHD0C_9EeSFFduuR7vvgw" base_Element="_ceFOoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_ceHq4C_9EeSFFduuR7vvgw" base_Element="_ceFOoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ceNxgC_9EeSFFduuR7vvgw" typeParameterDeclarationValue="T" base_Operation="_ceMjYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ceOYkC_9EeSFFduuR7vvgw" base_Element="_ceMjYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_ceO_oC_9EeSFFduuR7vvgw" base_Element="_ceNKcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ceRb4i_9EeSFFduuR7vvgw" typeParameterDeclarationValue="T" base_Operation="_ceRb4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ceSC8C_9EeSFFduuR7vvgw" base_Element="_ceRb4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_ceSqAS_9EeSFFduuR7vvgw" base_Element="_ceRb4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ceW7cC_9EeSFFduuR7vvgw" base_Element="_ceWUYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ceW7cS_9EeSFFduuR7vvgw" base_Element="_ceWUYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ceXigC_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ceYwoC_9EeSFFduuR7vvgw" base_Element="_ceXigS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_ceYwoS_9EeSFFduuR7vvgw" base_Element="_ceXigS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_ceZXsC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfp78C_9EeSFFduuR7vvgw" base_Element="_cfpU4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfrKEC_9EeSFFduuR7vvgw" base_Element="_cfpU4C_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfrKES_9EeSFFduuR7vvgw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfsYMC_9EeSFFduuR7vvgw" base_Element="_cfrxIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfsYMS_9EeSFFduuR7vvgw" base_Element="_cfrxIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfs_QC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfs_Qi_9EeSFFduuR7vvgw" base_Element="_cfs_QS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cftmUC_9EeSFFduuR7vvgw" base_Element="_cfs_QS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cftmUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfuNYC_9EeSFFduuR7vvgw" base_Element="_cftmUi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfuNYS_9EeSFFduuR7vvgw" base_Element="_cftmUi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfu0cC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfvbgC_9EeSFFduuR7vvgw" base_Element="_cfu0cS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfvbgS_9EeSFFduuR7vvgw" base_Element="_cfu0cS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfvbgi_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfwpoC_9EeSFFduuR7vvgw" base_Element="_cfwCkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfwpoS_9EeSFFduuR7vvgw" base_Element="_cfwCkC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfxQsC_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cfye0C_9EeSFFduuR7vvgw" base_Element="_cfxQsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cfzF4C_9EeSFFduuR7vvgw" base_Element="_cfxQsS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cfzF4S_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf07EC_9EeSFFduuR7vvgw" base_Element="_cf0UAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf07ES_9EeSFFduuR7vvgw" base_Element="_cf0UAC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf07Ei_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf1iIS_9EeSFFduuR7vvgw" base_Element="_cf1iIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf2JMC_9EeSFFduuR7vvgw" base_Element="_cf1iIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf2JMS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf2wQC_9EeSFFduuR7vvgw" base_Element="_cf2JMi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf3XUC_9EeSFFduuR7vvgw" base_Element="_cf2JMi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf3XUS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf3-YC_9EeSFFduuR7vvgw" base_Element="_cf3XUi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf3-YS_9EeSFFduuR7vvgw" base_Element="_cf3XUi_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf3-Yi_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf4lcC_9EeSFFduuR7vvgw" base_Element="_cf3-Yy_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf4lcS_9EeSFFduuR7vvgw" base_Element="_cf3-Yy_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf4lci_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf5MgS_9EeSFFduuR7vvgw" base_Element="_cf5MgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf5zkC_9EeSFFduuR7vvgw" base_Element="_cf5MgC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf5zkS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf6aoC_9EeSFFduuR7vvgw" base_Element="_cf5zki_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf6aoS_9EeSFFduuR7vvgw" base_Element="_cf5zki_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf6aoi_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_cf7BsC_9EeSFFduuR7vvgw" base_Element="_cf6aoy_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_cf7owC_9EeSFFduuR7vvgw" base_Element="_cf6aoy_9EeSFFduuR7vvgw">
    <annotations xmi:id="_cf7owS_9EeSFFduuR7vvgw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dFZGQC_9EeSFFduuR7vvgw" base_Element="_dFX4IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dFa7cC_9EeSFFduuR7vvgw" base_Element="_dFZtUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dFcwoC_9EeSFFduuR7vvgw" base_Element="_dFbigC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dFel0C_9EeSFFduuR7vvgw" base_Element="_dFcwoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dFkscC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dFi3QC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dFmhoC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dFi3QS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dFnvwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dFjeUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dFraIC_9EeSFFduuR7vvgw" base_Element="_dFqzEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dFsoQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dFqzES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dFtPUC_9EeSFFduuR7vvgw" base_Element="_dFqzEC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dFt2YC_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_dF41gC_9EeSFFduuR7vvgw" base_Element="_dF4OcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dF5ckC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dF4OcS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGDNkC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGBYYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGEbsC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGBYYi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGG38C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGFCwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGItIC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGHfAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGM-kC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGLJYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGQo8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGOMsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGTsQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGR3ES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGWIgC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGU6YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGZL0C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGX9sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dGaZ8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dGZy4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGhHoC_9EeSFFduuR7vvgw" base_Element="_dGf5gC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGiVwC_9EeSFFduuR7vvgw" base_Element="_dGhHoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGjj4C_9EeSFFduuR7vvgw" base_Element="_dGiVwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGkyAC_9EeSFFduuR7vvgw" base_Element="_dGjj4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGmnMC_9EeSFFduuR7vvgw" base_Element="_dGlZEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGn1UC_9EeSFFduuR7vvgw" base_Element="_dGmnMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGpqgC_9EeSFFduuR7vvgw" base_Element="_dGocYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGq4oC_9EeSFFduuR7vvgw" base_Element="_dGpqgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGsGwC_9EeSFFduuR7vvgw" base_Element="_dGrfsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dGtU4C_9EeSFFduuR7vvgw" base_Element="_dGst0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHQugC_9EeSFFduuR7vvgw" base_Element="_dHPgYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHR8oC_9EeSFFduuR7vvgw" base_Element="_dHQugS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHUY4C_9EeSFFduuR7vvgw" base_Element="_dHSjsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHVnAC_9EeSFFduuR7vvgw" base_Element="_dHUY4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHW1IC_9EeSFFduuR7vvgw" base_Element="_dHVnAS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHXcMC_9EeSFFduuR7vvgw" base_Element="_dHW1IS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHYqUC_9EeSFFduuR7vvgw" base_Element="_dHYDQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHZ4cC_9EeSFFduuR7vvgw" base_Element="_dHYqUS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHbGkC_9EeSFFduuR7vvgw" base_Element="_dHZ4cS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHcUsC_9EeSFFduuR7vvgw" base_Element="_dHbGkS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHsMUC_9EeSFFduuR7vvgw" base_Element="_dHq-MC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHuBgC_9EeSFFduuR7vvgw" base_Element="_dHszYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHv2sC_9EeSFFduuR7vvgw" base_Element="_dHuBgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dHxr4C_9EeSFFduuR7vvgw" base_Element="_dHv2sS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dIHqIC_9EeSFFduuR7vvgw" base_Element="_dIGcAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dIT3YC_9EeSFFduuR7vvgw" base_Element="_dITQUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dIUecC_9EeSFFduuR7vvgw" base_Element="_dITQUC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dIUecS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dIalEC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dIZW8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dIongC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dImyUS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dIp1oC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dInZYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dIs48C_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dIrDwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dIuuIC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dIrDwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJPEcC_9EeSFFduuR7vvgw" base_Element="_dJN2UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJQSkC_9EeSFFduuR7vvgw" base_Element="_dJPEcS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJSHwC_9EeSFFduuR7vvgw" base_Element="_dJQ5oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJXnUC_9EeSFFduuR7vvgw" base_Element="_dJVyIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJaqoC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJY1cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJcf0C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJZcgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJe8EC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJdG4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJgxQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJdG4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJjNgC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJh_YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJlCsC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJh_YS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJmQ0C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJlpwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJoGAC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJlpwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dJrwYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dJqiQS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJxP8C_9EeSFFduuR7vvgw" base_Element="_dJvawC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dJyeEC_9EeSFFduuR7vvgw" base_Element="_dJxP8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKCVsC_9EeSFFduuR7vvgw" base_Element="_dKAggC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKEK4C_9EeSFFduuR7vvgw" base_Element="_dKCVsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKSNUC_9EeSFFduuR7vvgw" base_Element="_dKQ_MC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKTbcC_9EeSFFduuR7vvgw" base_Element="_dKS0YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKVQoC_9EeSFFduuR7vvgw" base_Element="_dKUCgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKWewC_9EeSFFduuR7vvgw" base_Element="_dKV3sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKXs4C_9EeSFFduuR7vvgw" base_Element="_dKXF0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKY7AC_9EeSFFduuR7vvgw" base_Element="_dKXs4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKZiEC_9EeSFFduuR7vvgw" base_Element="_dKY7AS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKg20C_9EeSFFduuR7vvgw" base_Element="_dKfosC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dKqn0C_9EeSFFduuR7vvgw" base_Element="_dKoyoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dKtrIC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dKr18C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dKvgUC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dKr18S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dKx8kC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dKwHYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dKzxwC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dKwHYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dK0_4C_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dKwucC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dK21EC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dK1m8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dLHTwC_9EeSFFduuR7vvgw" base_Element="_dLGFoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dLIh4C_9EeSFFduuR7vvgw" base_Element="_dLHTwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dLuXwC_9EeSFFduuR7vvgw" base_Element="_dLtJoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dLw0AC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dLvl4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dLypMC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dLvl4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dL1FcC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dLz3UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dMoWsC_9EeSFFduuR7vvgw" base_Element="_dMnIkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dMo9wC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;T>" base_Element="_dMoWsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dMsBEC_9EeSFFduuR7vvgw" base_Element="_dMqy8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dMvEYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dMtPMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dMwSgC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dMtPMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dMyuwC_9EeSFFduuR7vvgw" genericsValue="AbstractVertex&lt;T>, Integer" base_Element="_dMxgoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dM3AMC_9EeSFFduuR7vvgw" genericsValue="AbstractVertex&lt;T>" base_Element="_dM1yEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:StyledElement xmi:id="_dM6DgC_9EeSFFduuR7vvgw" base_Element="_dM41YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dM8fwC_9EeSFFduuR7vvgw" base_Element="_dM7RoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dM9t4C_9EeSFFduuR7vvgw" base_Element="_dM8fwS_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dM9t4S_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNBYQC_9EeSFFduuR7vvgw" base_Element="_dNAKIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dNB_UC_9EeSFFduuR7vvgw" base_Element="_dNAKIC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dNB_US_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dNFpsC_9EeSFFduuR7vvgw" base_Element="_dNFCoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dNHe4C_9EeSFFduuR7vvgw" base_Element="_dNGQwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dNM-cC_9EeSFFduuR7vvgw" base_Element="_dNLJQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_dNRP4S_9EeSFFduuR7vvgw" typeParameterDeclarationValue="T extends Comparable&lt;T>" base_Operation="_dNQo0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNSeAC_9EeSFFduuR7vvgw" base_Element="_dNQo0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNTsIC_9EeSFFduuR7vvgw" genericsValue="String, T" base_Element="_dNRP4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_dNU6QS_9EeSFFduuR7vvgw" typeParameterDeclarationValue="K extends Comparable&lt;K>, V" base_Operation="_dNUTMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNWvcC_9EeSFFduuR7vvgw" genericsValue="K, V" base_Element="_dNUTMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dNXWgC_9EeSFFduuR7vvgw" base_Element="_dNUTMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNYkoC_9EeSFFduuR7vvgw" genericsValue="K, V" base_Element="_dNU6QC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dNc2EC_9EeSFFduuR7vvgw" base_Element="_dNbn8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNi8sC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dNhHgy_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dNkK0C_9EeSFFduuR7vvgw" base_Element="_dNjjwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNnOIC_9EeSFFduuR7vvgw" genericsValue="String, String" base_Element="_dNmAAi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNtUwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dNq4gS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNvJ8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dNrfkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNyNQC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dNvxAS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dNzbYC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dNwYEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dN3FwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dN0pgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dN4T4C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dN0pgi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dN6wIC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dN468C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dN9MYC_9EeSFFduuR7vvgw" base_Element="_dN7XMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dN9zcC_9EeSFFduuR7vvgw" base_Element="_dN7XMC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dN9zcS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dOAPsC_9EeSFFduuR7vvgw" base_Element="_dN_BkC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dOEhIC_9EeSFFduuR7vvgw" base_Element="_dODTAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dOKnwC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dOHkci_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dONrEC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dOL14i_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dOO5MC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dOL14y_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dOZ4UC_9EeSFFduuR7vvgw" base_Element="_dOYqMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dOZ4US_9EeSFFduuR7vvgw" base_Element="_dOYqMC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dOZ4Ui_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dOh0IC_9EeSFFduuR7vvgw" base_Element="_dOgmAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dOibMC_9EeSFFduuR7vvgw" base_Element="_dOgmAC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dOibMS_9EeSFFduuR7vvgw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dOpI4C_9EeSFFduuR7vvgw" base_Element="_dOn6wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dOq-EC_9EeSFFduuR7vvgw" base_Element="_dOpv8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dOuBYC_9EeSFFduuR7vvgw" base_Element="_dOszQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dOv2kC_9EeSFFduuR7vvgw" base_Element="_dOuocC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPAVQC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dO-gES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPCKcC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dPA8UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPD_oC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPBjYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPF00C_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dPEmsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPHC8C_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPFNwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPKGQC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPHqAS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPL7cC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPKtUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPNJkC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPKtUS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPO-wC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPNwoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPQM4C_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPNwoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPTQMC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPRbAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPVFYC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPRbAS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPWTgC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dPRbAi_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPYvwC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dPW6kC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPZ94C_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dPW6kS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dPrqsC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dPrDoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dPsRwC_9EeSFFduuR7vvgw" base_Property="_dPrDoC_9EeSFFduuR7vvgw" siblings="_dbhuUC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dPtf4C_9EeSFFduuR7vvgw" base_Element="_dPrDoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dPv8IC_9EeSFFduuR7vvgw" base_Element="_dPuuAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dPy_cC_9EeSFFduuR7vvgw" base_Element="_dPxxUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dP00oC_9EeSFFduuR7vvgw" base_Element="_dPzmgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dP2CwC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dP00oS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dP3Q4C_9EeSFFduuR7vvgw" base_Element="_dP00oS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dP4fAC_9EeSFFduuR7vvgw" base_Element="_dP3Q4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dP9XgC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dP8wcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQAa0C_9EeSFFduuR7vvgw" base_Element="_dP_zwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dQCQAC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dQBB4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQC3EC_9EeSFFduuR7vvgw" base_Element="_dQBB4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQEsQC_9EeSFFduuR7vvgw" base_Element="_dQDeIC_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQHIgC_9EeSFFduuR7vvgw" name="getLeftEdge" method="_dWDYcC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQI9sC_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_dQF6YC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dQDeIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dQGhcC_9EeSFFduuR7vvgw" base_Property="_dQDeIC_9EeSFFduuR7vvgw" siblings="_dbvwwC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:Generics xmi:id="_dQIWoC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dQHIgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQN2MC_9EeSFFduuR7vvgw" base_Element="_dQNPIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQPrYC_9EeSFFduuR7vvgw" base_Element="_dQOdQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQQ5gC_9EeSFFduuR7vvgw" base_Element="_dQQScC_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQRgkC_9EeSFFduuR7vvgw" name="getAssignment" isStatic="true" method="_dWVsUC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQSusC_9EeSFFduuR7vvgw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQSHoC_9EeSFFduuR7vvgw" name="setAssignment" isStatic="true" method="_dWYvoS_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQSHoS_9EeSFFduuR7vvgw" name="assignment">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQUj4C_9EeSFFduuR7vvgw" base_Element="_dQT80C_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQVyAC_9EeSFFduuR7vvgw" name="getKey" isStatic="true" method="_dWZ9wC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQXAIC_9EeSFFduuR7vvgw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQVyAS_9EeSFFduuR7vvgw" name="setKey" isStatic="true" method="_dWak0C_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQWZEC_9EeSFFduuR7vvgw" name="key">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQY1UC_9EeSFFduuR7vvgw" base_Element="_dQYOQC_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQZcYC_9EeSFFduuR7vvgw" name="getVisualizer" isStatic="true" method="_dWbL4C_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQbRkC_9EeSFFduuR7vvgw" type="_cZSOMC_9EeSFFduuR7vvgw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQaDcC_9EeSFFduuR7vvgw" name="setVisualizer" isStatic="true" method="_dWby8S_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQaDcS_9EeSFFduuR7vvgw" name="visualizer" type="_cZSOMC_9EeSFFduuR7vvgw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQdGwC_9EeSFFduuR7vvgw" base_Element="_dQb4oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQeU4C_9EeSFFduuR7vvgw" base_Element="_dQdt0C_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQe78C_9EeSFFduuR7vvgw" name="getUserName" isStatic="true" method="_dWdBEC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQgKEC_9EeSFFduuR7vvgw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQe78S_9EeSFFduuR7vvgw" name="setUserName" isStatic="true" method="_dWdoIC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQe78i_9EeSFFduuR7vvgw" name="userName">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQh_QC_9EeSFFduuR7vvgw" base_Element="_dQhYMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQpUAC_9EeSFFduuR7vvgw" base_Element="_dQoF4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQqiIC_9EeSFFduuR7vvgw" base_Element="_dQp7EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQrwQC_9EeSFFduuR7vvgw" base_Element="_dQqiIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dQ0TIC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dQzFAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQ06MC_9EeSFFduuR7vvgw" base_Element="_dQzFAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dQ82AC_9EeSFFduuR7vvgw" base_Element="_dQ8O8C_9EeSFFduuR7vvgw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQ-EIC_9EeSFFduuR7vvgw" name="getPrevNode" method="_dXnesC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQ_SQC_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_dQ-EIS_9EeSFFduuR7vvgw" name="setPrevNode" method="_dXoFwC_9EeSFFduuR7vvgw">
      <ownedParameter xmi:id="_dQ-rMC_9EeSFFduuR7vvgw" name="prevNode" type="_cS7HgC_9EeSFFduuR7vvgw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_dQ82AS_9EeSFFduuR7vvgw" base_Property="_dQ8O8C_9EeSFFduuR7vvgw" siblings="_dcHkMC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRC8oS_9EeSFFduuR7vvgw" base_Property="_dRC8oC_9EeSFFduuR7vvgw" siblings="_dcLOkS_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRDjsC_9EeSFFduuR7vvgw" base_Element="_dRC8oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRF_8C_9EeSFFduuR7vvgw" base_Element="_dRFY4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRHOEC_9EeSFFduuR7vvgw" base_Element="_dRGnAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRMGkC_9EeSFFduuR7vvgw" base_Element="_dRK4cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRPw8C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dROi0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRQYAC_9EeSFFduuR7vvgw" base_Element="_dROi0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRV3kC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dRVQgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRXFsC_9EeSFFduuR7vvgw" base_Element="_dRVQgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRY64C_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dRXswC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRZh8C_9EeSFFduuR7vvgw" base_Element="_dRXswC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRdzYC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dRclQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dReacC_9EeSFFduuR7vvgw" base_Element="_dRclQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRgPoC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dRfBgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRg2sC_9EeSFFduuR7vvgw" base_Element="_dRfBgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRiE0C_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dRhdwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRir4C_9EeSFFduuR7vvgw" base_Element="_dRhdwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dRkhEC_9EeSFFduuR7vvgw" genericsValue="E" base_Element="_dRjS8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRlIIC_9EeSFFduuR7vvgw" base_Element="_dRjS8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRlvMC_9EeSFFduuR7vvgw" base_Element="_dRlIIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRm9UC_9EeSFFduuR7vvgw" base_Element="_dRmWQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRsc4C_9EeSFFduuR7vvgw" base_Element="_dRr10C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_dRx8cC_9EeSFFduuR7vvgw" base_Element="_dRwuUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_dRzKkS_9EeSFFduuR7vvgw" base_Element="_dRyjgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzxoS_9EeSFFduuR7vvgw" base_Element="_dRyjgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_dR0_wS_9EeSFFduuR7vvgw" base_Element="_dR0YsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_dR2N4S_9EeSFFduuR7vvgw" base_Element="_dR1m0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR3cAC_9EeSFFduuR7vvgw" base_Element="_dR1m0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR8UgC_9EeSFFduuR7vvgw" base_Element="_dR7tcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSHToC_9EeSFFduuR7vvgw" base_Element="_dSGskC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dSJv4C_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dSH6sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSLlEC_9EeSFFduuR7vvgw" base_Element="_dSH6sC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSMzMS_9EeSFFduuR7vvgw" base_Element="_dSMMIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSUH8C_9EeSFFduuR7vvgw" base_Element="_dSS50C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSVWEC_9EeSFFduuR7vvgw" base_Element="_dSUvAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSWkMC_9EeSFFduuR7vvgw" base_Element="_dSVWES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSXLQC_9EeSFFduuR7vvgw" base_Element="_dSWkMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSYZYC_9EeSFFduuR7vvgw" base_Element="_dSXyUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSZngC_9EeSFFduuR7vvgw" base_Element="_dSYZYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dSfHEC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dSegAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSfuIC_9EeSFFduuR7vvgw" base_Element="_dSegAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dSgVMC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dSfuIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dSg8QC_9EeSFFduuR7vvgw" base_Property="_dSfuIS_9EeSFFduuR7vvgw" siblings="_dcn6gC_9EeSFFduuR7vvgw _dcpIoC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dShjUC_9EeSFFduuR7vvgw" base_Element="_dSfuIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSixcC_9EeSFFduuR7vvgw" base_Element="_dSiKYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Annotations xmi:id="_dSjYgC_9EeSFFduuR7vvgw" base_Element="_dSiKYC_9EeSFFduuR7vvgw">
    <annotations xmi:id="_dSjYgS_9EeSFFduuR7vvgw" name="Rule"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dSo4EC_9EeSFFduuR7vvgw" genericsValue="Actor" base_Element="_dSnp8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSrUUC_9EeSFFduuR7vvgw" base_Element="_dSnp8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dStJgC_9EeSFFduuR7vvgw" genericsValue="Actor" base_Element="_dSr7YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dStwkC_9EeSFFduuR7vvgw" base_Element="_dSr7YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSu-sC_9EeSFFduuR7vvgw" base_Element="_dSuXoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dSwM0C_9EeSFFduuR7vvgw" genericsValue="Actor" base_Element="_dSvlwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSxa8C_9EeSFFduuR7vvgw" base_Element="_dSvlwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dSypEC_9EeSFFduuR7vvgw" genericsValue="Actor" base_Element="_dSxa8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dSzQIC_9EeSFFduuR7vvgw" base_Element="_dSxa8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dS1FUC_9EeSFFduuR7vvgw" genericsValue="Actor" base_Element="_dSz3MC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dS1sYC_9EeSFFduuR7vvgw" base_Element="_dSz3MC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Array xmi:id="_dS590S_9EeSFFduuR7vvgw" base_Element="_dS5WwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dS7L8C_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dS5WwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dS9BIC_9EeSFFduuR7vvgw" base_Element="_dS5WwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dS-2UC_9EeSFFduuR7vvgw" base_Element="_dS9oMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTB5oC_9EeSFFduuR7vvgw" base_Element="_dTArgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTDHwC_9EeSFFduuR7vvgw" base_Element="_dTB5oS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTEV4C_9EeSFFduuR7vvgw" base_Element="_dTDHwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTGLEC_9EeSFFduuR7vvgw" base_Element="_dTE88C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dTM4wC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dTMRsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTOG4C_9EeSFFduuR7vvgw" base_Element="_dTMRsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dTP8EC_9EeSFFduuR7vvgw" genericsValue="T" base_Element="_dTOt8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTQjIC_9EeSFFduuR7vvgw" base_Element="_dTOt8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTSYUC_9EeSFFduuR7vvgw" base_Element="_dTRKMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTUNgC_9EeSFFduuR7vvgw" base_Element="_dTS_YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTX34C_9EeSFFduuR7vvgw" base_Element="_dTWCsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dTa7MC_9EeSFFduuR7vvgw" base_Property="_dTZtEC_9EeSFFduuR7vvgw" siblings="_dcv2UC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTbiQC_9EeSFFduuR7vvgw" base_Element="_dTZtEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dThB0C_9EeSFFduuR7vvgw" base_Element="_dTfzsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTkFIC_9EeSFFduuR7vvgw" base_Element="_dTi3AC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dTl6UC_9EeSFFduuR7vvgw" base_Property="_dTksMC_9EeSFFduuR7vvgw" siblings="_dcxrgC_9EeSFFduuR7vvgw _dcy5oC_9EeSFFduuR7vvgw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTmhYC_9EeSFFduuR7vvgw" base_Element="_dTksMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTtPEC_9EeSFFduuR7vvgw" base_Element="_dTsA8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dTvEQC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dTt2IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTwSYC_9EeSFFduuR7vvgw" base_Element="_dTt2IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dTyHkC_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dTw5cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dTzVsC_9EeSFFduuR7vvgw" base_Element="_dTw5cC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dT1K4C_9EeSFFduuR7vvgw" genericsValue="AbstractEdge&lt;Follower>" base_Element="_dTz8wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dT2ZAC_9EeSFFduuR7vvgw" base_Element="_dTz8wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dT4OMC_9EeSFFduuR7vvgw" genericsValue="Follower" base_Element="_dT3AEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dT5cUC_9EeSFFduuR7vvgw" base_Element="_dT3AEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dT7RgC_9EeSFFduuR7vvgw" base_Element="_dT6DYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dUJT8C_9EeSFFduuR7vvgw" genericsValue="AbstractVertex&lt;Follower>, Integer" base_Element="_dUIF0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUKiEC_9EeSFFduuR7vvgw" base_Element="_dUIF0C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dULwMC_9EeSFFduuR7vvgw" genericsValue="AbstractVertex&lt;Follower>, Integer" base_Element="_dUKiES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUMXQC_9EeSFFduuR7vvgw" base_Element="_dUKiES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dUPakC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dUOMcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUQBoC_9EeSFFduuR7vvgw" base_Element="_dUOMcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dURPwC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dUQBoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUR20C_9EeSFFduuR7vvgw" base_Element="_dUQBoS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUTE8C_9EeSFFduuR7vvgw" base_Element="_dUR20S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dUUTEC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dUTsAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUVhMC_9EeSFFduuR7vvgw" base_Element="_dUTsAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Generics xmi:id="_dUWvUC_9EeSFFduuR7vvgw" genericsValue="?" base_Element="_dUWIQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dUXWYC_9EeSFFduuR7vvgw" base_Element="_dUWIQC_9EeSFFduuR7vvgw"/>
  <uml:OpaqueBehavior xmi:id="_dWDYcC_9EeSFFduuR7vvgw" name="getLeftEdge" specification="_dQHIgC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWDYcS_9EeSFFduuR7vvgw" type="_cMfIUC_9EeSFFduuR7vvgw" direction="return"/>
    <language>java</language>
    <body>return leftEdge;//returns the left connected edge
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWVsUC_9EeSFFduuR7vvgw" name="getAssignment" specification="_dQRgkC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWYvoC_9EeSFFduuR7vvgw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return assignment;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWYvoS_9EeSFFduuR7vvgw" name="setAssignment" specification="_dQSHoC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWZWsC_9EeSFFduuR7vvgw" name="assignment">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>Bridge.assignment = assignment;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWZ9wC_9EeSFFduuR7vvgw" name="getKey" specification="_dQVyAC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWZ9wS_9EeSFFduuR7vvgw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return key;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWak0C_9EeSFFduuR7vvgw" name="setKey" specification="_dQVyAS_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWak0S_9EeSFFduuR7vvgw" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>Bridge.key = key;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWbL4C_9EeSFFduuR7vvgw" name="getVisualizer" specification="_dQZcYC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWby8C_9EeSFFduuR7vvgw" type="_cZSOMC_9EeSFFduuR7vvgw" direction="return"/>
    <language>java</language>
    <body>return visualizer;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWby8S_9EeSFFduuR7vvgw" name="setVisualizer" specification="_dQaDcC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWcaAC_9EeSFFduuR7vvgw" name="visualizer" type="_cZSOMC_9EeSFFduuR7vvgw"/>
    <language>java</language>
    <body>Bridge.visualizer = visualizer;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWdBEC_9EeSFFduuR7vvgw" name="getUserName" specification="_dQe78C_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWdBES_9EeSFFduuR7vvgw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return userName;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dWdoIC_9EeSFFduuR7vvgw" name="setUserName" specification="_dQe78S_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dWdoIS_9EeSFFduuR7vvgw" name="userName">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>Bridge.userName = userName;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dXnesC_9EeSFFduuR7vvgw" name="getPrevNode" specification="_dQ-EIC_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dXnesS_9EeSFFduuR7vvgw" type="_cS7HgC_9EeSFFduuR7vvgw" direction="return"/>
    <language>java</language>
    <body>return this.prevNode;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_dXoFwC_9EeSFFduuR7vvgw" name="setPrevNode" specification="_dQ-EIS_9EeSFFduuR7vvgw">
    <ownedParameter xmi:id="_dXoFwS_9EeSFFduuR7vvgw" name="prevNode" type="_cS7HgC_9EeSFFduuR7vvgw"/>
    <language>java</language>
    <body>this.prevNode = prevNode;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_dbiVYC_9EeSFFduuR7vvgw" base_Property="_dbhuUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dbi8cC_9EeSFFduuR7vvgw" base_Element="_dbhuUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dbvwwS_9EeSFFduuR7vvgw" base_Property="_dbvwwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dbwX0C_9EeSFFduuR7vvgw" base_Element="_dbvwwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcILQC_9EeSFFduuR7vvgw" base_Property="_dcHkMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcIyUC_9EeSFFduuR7vvgw" base_Element="_dcHkMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcL1oC_9EeSFFduuR7vvgw" base_Property="_dcLOkS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcMcsC_9EeSFFduuR7vvgw" base_Element="_dcLOkS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcn6gS_9EeSFFduuR7vvgw" base_Property="_dcn6gC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcohkC_9EeSFFduuR7vvgw" base_Element="_dcn6gC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcpIoS_9EeSFFduuR7vvgw" base_Property="_dcpIoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcpvsC_9EeSFFduuR7vvgw" base_Element="_dcpIoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcv2US_9EeSFFduuR7vvgw" base_Property="_dcv2UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcwdYC_9EeSFFduuR7vvgw" base_Element="_dcv2UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dcySkC_9EeSFFduuR7vvgw" base_Property="_dcxrgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dcySkS_9EeSFFduuR7vvgw" base_Element="_dcxrgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dczgsC_9EeSFFduuR7vvgw" base_Property="_dcy5oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dczgsS_9EeSFFduuR7vvgw" base_Element="_dcy5oC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd5s4C_9EeSFFduuR7vvgw" base_Element="_dd4ewC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd7iEC_9EeSFFduuR7vvgw" base_Element="_dd6T8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd8wMC_9EeSFFduuR7vvgw" base_Element="_dd7iES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd9-UC_9EeSFFduuR7vvgw" base_Element="_dd8wMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd_McC_9EeSFFduuR7vvgw" base_Element="_dd9-US_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dd_zgC_9EeSFFduuR7vvgw" base_Element="_dd_McS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deBBoC_9EeSFFduuR7vvgw" base_Element="_deAakC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deCPwC_9EeSFFduuR7vvgw" base_Element="_deBosC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deDd4C_9EeSFFduuR7vvgw" base_Element="_deC20C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deFTEC_9EeSFFduuR7vvgw" base_Element="_deEE8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deGhMC_9EeSFFduuR7vvgw" base_Element="_deF6IC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deI9cC_9EeSFFduuR7vvgw" base_Element="_deHIQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deLZsC_9EeSFFduuR7vvgw" base_Element="_deI9cS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deNO4C_9EeSFFduuR7vvgw" base_Element="_deLZsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dePrIC_9EeSFFduuR7vvgw" base_Element="_deN18C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deSHYC_9EeSFFduuR7vvgw" base_Element="_deQSMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deUjoC_9EeSFFduuR7vvgw" base_Element="_deSHYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deWY0C_9EeSFFduuR7vvgw" base_Element="_deVKsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deY1EC_9EeSFFduuR7vvgw" base_Element="_deW_4C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deaDMC_9EeSFFduuR7vvgw" base_Element="_deZcIC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_debRUC_9EeSFFduuR7vvgw" base_Element="_deaDMS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_decfcC_9EeSFFduuR7vvgw" base_Element="_debRUS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dedtkC_9EeSFFduuR7vvgw" base_Element="_decfcS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dee7sC_9EeSFFduuR7vvgw" base_Element="_dedtkS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_degJ0C_9EeSFFduuR7vvgw" base_Element="_dee7sS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_degw4C_9EeSFFduuR7vvgw" base_Element="_degJ0S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deh_AC_9EeSFFduuR7vvgw" base_Element="_dehX8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dejNIC_9EeSFFduuR7vvgw" base_Element="_deimEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_delCUC_9EeSFFduuR7vvgw" base_Element="_dej0MC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_denekC_9EeSFFduuR7vvgw" base_Element="_delpYC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deossC_9EeSFFduuR7vvgw" base_Element="_deoFoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dep60C_9EeSFFduuR7vvgw" base_Element="_deossS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_derI8C_9EeSFFduuR7vvgw" base_Element="_dep60S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_derwAC_9EeSFFduuR7vvgw" base_Element="_derI8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_des-IC_9EeSFFduuR7vvgw" base_Element="_desXEC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_deuMQC_9EeSFFduuR7vvgw" base_Element="_detlMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_devaYC_9EeSFFduuR7vvgw" base_Element="_deuMQS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dewBcC_9EeSFFduuR7vvgw" base_Element="_devaYS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dexPkC_9EeSFFduuR7vvgw" base_Element="_dewogC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dex2oC_9EeSFFduuR7vvgw" base_Element="_dexPkS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dezEwC_9EeSFFduuR7vvgw" base_Element="_deydsC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de0S4C_9EeSFFduuR7vvgw" base_Element="_dezEwS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de058C_9EeSFFduuR7vvgw" base_Element="_de0S4S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de2IEC_9EeSFFduuR7vvgw" base_Element="_de1hAC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de2vIC_9EeSFFduuR7vvgw" base_Element="_de2IES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de39QC_9EeSFFduuR7vvgw" base_Element="_de3WMC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de5LYC_9EeSFFduuR7vvgw" base_Element="_de4kUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de6ZgC_9EeSFFduuR7vvgw" base_Element="_de5ycC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de7noC_9EeSFFduuR7vvgw" base_Element="_de6ZgS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de8OsC_9EeSFFduuR7vvgw" base_Element="_de7noS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de9c0C_9EeSFFduuR7vvgw" base_Element="_de81wC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de-q8C_9EeSFFduuR7vvgw" base_Element="_de9c0S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_de_SAC_9EeSFFduuR7vvgw" base_Element="_de-q8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfAgIC_9EeSFFduuR7vvgw" base_Element="_de_5EC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfBHMC_9EeSFFduuR7vvgw" base_Element="_dfAgIS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfCVUC_9EeSFFduuR7vvgw" base_Element="_dfBuQC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfDjcC_9EeSFFduuR7vvgw" base_Element="_dfC8YC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfExkC_9EeSFFduuR7vvgw" base_Element="_dfEKgC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfF_sC_9EeSFFduuR7vvgw" base_Element="_dfFYoC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfHN0C_9EeSFFduuR7vvgw" base_Element="_dfGmwC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfIb8C_9EeSFFduuR7vvgw" base_Element="_dfHN0S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfJqEC_9EeSFFduuR7vvgw" base_Element="_dfIb8S_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfK4MC_9EeSFFduuR7vvgw" base_Element="_dfJqES_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfLfQC_9EeSFFduuR7vvgw" base_Element="_dfK4MS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfMtYC_9EeSFFduuR7vvgw" base_Element="_dfMGUC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfN7gC_9EeSFFduuR7vvgw" base_Element="_dfNUcC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfOikC_9EeSFFduuR7vvgw" base_Element="_dfN7gS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfPwsC_9EeSFFduuR7vvgw" base_Element="_dfOikS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfQ-0C_9EeSFFduuR7vvgw" base_Element="_dfPwsS_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfUpMC_9EeSFFduuR7vvgw" base_Element="_dfSM8C_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfYTkC_9EeSFFduuR7vvgw" base_Element="_dfV3UC_9EeSFFduuR7vvgw"/>
  <UMLLabProfile:Reference xmi:id="_dfZhsC_9EeSFFduuR7vvgw" base_Element="_dfYTkS_9EeSFFduuR7vvgw"/>
</xmi:XMI>
