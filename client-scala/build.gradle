apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'groovy' // groovy -> scripting -> working scalatests
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'

///
/// General
///

group = "edu.uncc.cs.bridges"
version = "0.2.1"

// Hack to make ScalaTests actually run - not just say they do
test << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') {
        reporter(type: 'stdout')
    }
}

///
/// Artifacts and deployment
///

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}


publishing  {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom.withXml {
              
                // Meet maven central standards
                asNode().appendNode('packaging', 'jar')
                asNode().appendNode('name', 'Bridges Curriculum Social Network Client')
                asNode().appendNode('description', 'Explore and visualize social network follower graphs and user status streams with a highly user friendly, lightweight facade API. Client.')
                asNode().appendNode('url', 'http://github.com/SeanTater/bridges')
                license = asNode().appendNode('licenses').appendNode("license")
                license.appendNode("name", "GNU GPLv2")
                license.appendNode("url", "http://www.gnu.org/licenses/gpl-2.0.html")
                license.appendNode("distribution", "repo")
                scm = asNode().appendNode("scm")
                scm.appendNode("connection", "scm:git:git@github.com:SeanTater/bridges.git")
                scm.appendNode("url", "git@github.com:SeanTater/bridges.git")
                devs = asNode().appendNode("developers")
                dev = devs.appendNode("developer")
                dev.appendNode("id", "SeanTater")
                dev.appendNode("name", "Sean Gallagher")
                dev = devs.appendNode("developer")
                dev.appendNode("id", "stevemacn")
                dev.appendNode("name", "Stephen MacNeil")
                
                // Make the parent the Sonatype OSS as per their requirements
                parent = asNode().appendNode("parent")
                parent.appendNode("groupId", "org.sonatype.oss")
                parent.appendNode("artifactId", "oss-parent")
                parent.appendNode("version", "7")
                
                
                
            }
            /*developers{
            developer {
                id 'SeanTater'
                name 'Sean Gallagher'
            }
            developer {
                id 'stevemacn'
                name 'Stephen MacNeil'
            }
            }*/
        }
    }
    repositories {
        maven {
            url "/home/sean/Dropbox/Public/repo"
           
            
        }
    }
}

///
/// Repositories and dependencies
///

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'com.github.scala-incubator.io:scala-io-file_2.10:0.4.2'
    compile 'com.github.nscala-time:nscala-time_2.10:0.6.0'
    compile 'org.apache.httpcomponents:fluent-hc:4.3.1'
    compile 'org.scala-lang:scala-library:2.10.3'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
    testCompile "org.scalatest:scalatest_2.10:2.0.M8"
    testCompile 'org.scala-lang:scala-library:2.10.3'
}
